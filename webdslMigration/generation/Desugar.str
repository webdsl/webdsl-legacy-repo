module Desugar
imports
	DomainTransformationSyntax
	TransformationDefinition
	liblib
	org/webdsl/dsl/transformation/desugar
	org/webdsl/dsl/transformation/types
	org/webdsl/dsl/utils/utils
	org/webdsl/dsl/generation/xhtml-page
	org/webdsl/dsl/syntax/parse-webdsl
	org/webdsl/dsl/generation/generator

strategies
	desugarDomain = 
		desugar-any	// TODO attach extend entity not taken into account
	
	desugarTransformations =
		innermost(
			rewriteDoubleQuote + 
			rewriteDecorativePropertyAdditionDefaultValue + 
			rewriteDecorativePropertyAddition + 
			rewriteDecorativePropertySimpleTypeChange + 
			rewriteComposition + 
			rewriteMultiParameterTransformationApplication + 
			rewriteOpenMigration + 
			// From transformation definition
			rewriteEmptyLambdaTransformation
		)
	
	rewriteDecorativePropertyAdditionDefaultValue : 
		DecorativePropertyAdditionDefaultValue(propName, propType, propDefaultValue) -> PropertyAdditionDefaultValue(propName, propType, propDefaultValue)
	rewriteDecorativePropertyAddition : 
		DecorativePropertyAddition(propName, propType, propDefaultValue) -> PropertyAddition(propName, propType, propDefaultValue)
	rewriteDecorativePropertySimpleTypeChange : 
		DecorativePropertySimpleTypeChange(propName, propType) -> PropertySimpleTypeChange(propName, propType)
	
	rewriteDoubleQuote : 
		String(x) -> String(y)
			where y := <un-double-quote> x
			
	rewriteComposition : 
		Composition(c1, c2) -> TransformationApplication(c2, c1, [])
		
	rewriteMultiParameterTransformationApplication : 	
		MultiParameterTransformationApplication(trafo1, [trafo2|[]], annos) -> TransformationApplication(trafo1, trafo2, annos)
	rewriteMultiParameterTransformationApplication : 	
		MultiParameterTransformationApplication(trafo1, [trafo2| [trafo3| otherTrafos] ], annos) -> MultiParameterTransformationApplication(TransformationApplication(trafo1, trafo2, annos), [trafo3| otherTrafos], annos)
	
	rewriteOpenMigration : 
		OpenMigration(inputTypes, trafo) -> Migration(inputTypes, <Hd> inputTypes, trafo)