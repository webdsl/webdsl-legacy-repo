module DomainTransformation
imports
	DomainTransformationSyntax 
	liblib
	Desugar

strategies
	main = 
		io-wrap(
			domainTransformationDesugar;
			prepareAndApplyTransformation
		)
		
	prepareAndApplyTransformation : 
		Transformer(entities, transformations) -> Transformer(<map(innermost(SubstituteInjection)); applyTransformation> transformations, [])
			where <map(injectionConstruction)> entities
			
	injectionConstruction : 
		EntityNoSuper(entityName, properties, functions) -> EntityNoSuper(entityName, properties, functions)
			where rules(SubstituteInjection : Injection(entityName) ->  EntityNoSuper(entityName, properties, functions))

	applyTransformation = 
		map(
			innermost(
				emptyEntityRewrite + 
				ejectionRewrite +
				propertyRemoval +
				propertyAddition +
				elevateAttributeOverReference +
				propertyNameChange +
				propertySimpleTypeChange +
				propertyReferenceTypeChange
			)
		)
		
	/** Constant **/
	emptyEntityRewrite : 
		EmptyEntity() ->
			EntityNoSuper(<getType>, [], [])	// Name should be overwritten anyway
	
	/** Entity modifications **/
	ejectionRewrite : 
		Ejection(EntityNoSuper(entityName, properties, functions), newEntityName) ->
			EntityNoSuper(newEntityName, properties, functions)
	
	propertyAddition :
		PropertyAddition(EntityNoSuper(entityName, properties, functions), propertyName, sort,_) ->	// Default value will be ignored for now (cannot be used as part of the domain model)
			EntityNoSuper(entityName, <conc>(properties, [Property(propertyName, Simple(), sort, [])]) , functions)
	
	propertyRemoval :
		PropertyRemoval(EntityNoSuper(entityName, properties, functions), propertyName) ->
			EntityNoSuper(entityName, <remove-all(?Property(propertyName, _, _, _))> properties, functions)
			
	elevateAttributeOverReference : 
		ElevateAttributeOverReference(EntityNoSuper(entityName, properties, functions), refName, attName) -> 
			EntityNoSuper(entityName, <conc> (properties, propertyToElevate), functions)
		where <fetch(?Property(propertyName, _, _, _))> properties => propertyToElevate
	
	/** Property modifications **/
	propertyNameChange :
		PropertyNameChange(EntityNoSuper(entityName, properties, functions), oldName, newName) ->
			EntityNoSuper(entityName, <map(try(ChangePropertyName))> properties, functions)
				where rules(
					ChangePropertyName : PropertyNoAnno(oldName, kind, sort) ->  PropertyNoAnno(newName, kind, sort)
					ChangePropertyName : Property(oldName, kind, sort, annos) ->  Property(newName, kind, sort, annos) 
				)
				
	propertySimpleTypeChange :
		PropertySimpleTypeChange(EntityNoSuper(entityName, properties, functions), name, newSort) ->
			EntityNoSuper(entityName, <map(try(ChangeSimplePropertyType))> properties, functions)
				where rules(	// TODO Scope required?
					ChangeSimplePropertyType : PropertyNoAnno(name, kind, _) ->  PropertyNoAnno(name, kind, newSort)
					ChangeSimplePropertyType : Property(name, kind, _, annos) ->  Property(name, kind, newSort, annos) 
				)
	
	propertyReferenceTypeChange :
		PropertyReferenceTypeChange(EntityNoSuper(entityName, properties, functions), name, newSort, _) ->
			EntityNoSuper(entityName, <map(try(ChangeReferencePropertyType))> properties, functions)
				where rules(	// TODO Scope required?
					ChangeReferencePropertyType : PropertyNoAnno(name, kind, _) ->  PropertyNoAnno(name, kind, newSort)
					ChangeReferencePropertyType : Property(name, kind, _, annos) ->  Property(name, kind, newSort, annos) 
				)
	