module generate

// parses a NanoWebDSL file, 
// applies syntactic normalizations to the AST,
// and pretty-prints the result

imports
  libstratego-lib
  libstratego-xtc
  libwebdsl-front
  remove-annos
  write-files
  java-concat-ids

strategies

  main =
    xtc-io-wrap(
        webdslc-options
      , webdslc-usage
      , webdslc-about
      , ![] // xtc dependencies
      , xtc-normalize
    )

  xtc-normalize = id
    ; set-appname
    ; set-default-config
    ; xtc-parse-webdsl
    ; remove-position-annos
    ; generate
    ; java-concat-ids
    ; output-generated-files
    ; <exit> 0

    //; remove-position-annos
    //; output-webdsl

strategies

  generate =
    collect(generate-code)

strategies

  generate-code = entity-to-java

  entity-to-java : 
    |[ entity x_class { prop* } ]| -> <debug(!":")> 
    JavaFile(["src"],
      compilation-unit|[
        package domain; 
        @Entity class x_class { 
          ~*cbd*
       } 
      ]|)
    where debug(!"entity-to-java: ")
        ; cbd* := <filter(property-to-java)> prop*

  property-to-java :
    |[ x :: String (ann*) ]| ->
    class-body-dec*|[ 
      protected String _#x = "";

      public String get#x() {
        return _#x;
      }

      public void set#x(String newitem) {
        _#x = newitem;
      }
    ]|

