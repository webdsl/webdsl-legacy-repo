/**
 * Generate a backing bean for a list of all objects of an entity type
 * and the corresponding interface class.
 */
 
module org/webdsl/dsl/generation/java-EntityFinder

imports 
  libstrategolib  
  Java-15 
  libjava-front 
  
imports 
  org/webdsl/dsl/syntax/WebDSL
  org/webdsl/dsl/utils/utils
  
rules 

  // done: derive interface from EntityFinderBean class

  entity-to-java-EntityFinder : 
    EntityNoSuper(x_Class, props) -> <entity-to-java-EntityFinder>Entity(x_Class, "Object", props)
    
  entity-to-java-EntityFinder : 
    e@Entity(x_Class, x_super, props) -> (JavaFile(["src"], 
    compilation-unit|[
      package pkgname;
      
      import org.jboss.annotation.ejb.Local;
      
      @Local
      public interface x_classfinder
      {
        ~*methodsdecs
      }
    ]|), bean)
    where pkgname       := <BeanPackage>
        ; x_classfinder := <concat-strings> [x_Class, "Finder"]
	    ; bean          := <entity-to-java-EntityFinderBean> e
	    ; methodsdecs   := <extract-method-signatures> bean
        
rules

  entity-to-java-EntityFinderBean : 
    EntityNoSuper(x_Class, props) -> <entity-to-java-EntityFinderBean>Entity(x_Class, "Object", props)
    
  entity-to-java-EntityFinderBean : 
    Entity(x_Class, x_super, props) -> JavaFile(["src"],
    compilation-unit|[
      package pkgname;
      
      import static javax.persistence.PersistenceContextType.EXTENDED;
      import static org.jboss.seam.ScopeType.CONVERSATION;
      import static org.jboss.seam.ScopeType.SESSION;

      import java.util.List;

      import javax.ejb.Remove;
      import javax.ejb.Stateful;
      import javax.persistence.EntityManager;
      import javax.persistence.PersistenceContext;
      
      import org.jboss.seam.annotations.Create;
      import org.jboss.seam.annotations.Destroy;
      import org.jboss.seam.annotations.Factory;
      import org.jboss.seam.annotations.In;
      import org.jboss.seam.annotations.Logger;
      import org.jboss.seam.annotations.Name;
      import org.jboss.seam.annotations.Out;
      import org.jboss.seam.annotations.Scope;
      import org.jboss.seam.annotations.datamodel.DataModel;
      import org.jboss.seam.annotations.datamodel.DataModelSelection;
      import org.jboss.seam.core.FacesMessages;
      import org.jboss.seam.log.Log;
      import org.webdsl.serg.domain.Address;
      
      @Stateful
      @Name(~string:String([Chars(x_classFinder)]))
      public class x_ClassFinderBean implements x_ClassFinder
      {
          @Logger 
          private Log log;
    
          @In FacesMessages 
          facesMessages;
          
          @PersistenceContext(type=EXTENDED)
          private EntityManager em;
          
    	  @Create
	      public void initialize() 
	      {
		    findEntries();
	      }
	      
          @DataModel
          private List<x_Class> x_classEntries;
    
          @DataModelSelection @Out(required = false)
          private x_Class x_selectedClass;

          @Factory(~string:String([Chars(x_classEntries)]))
          public void findEntries()
          {
             x_classEntries = em.createQuery("from " + "~x_Class").getResultList();
             log.info("call to findEntries: list = " + x_classEntries);
             // @note antiquotation in string only works at the beginning of a string
          }
          
          public void refresh()
          { 
	         findEntries();
          }
          // @todo this is needed to refresh the list after a new entry has been added
          // this should be done automatically
          
          public void delete() {
		    if (x_classEntries == null)
			  facesMessages.add("entries list is null");
		    else if (x_selectedClass == null)
			  facesMessages.add("selection is null");
		    else {
		      facesMessages.add("deleting " + "~x_Class" + " #{entry.id}");
		      x_classEntries.remove(x_selectedClass);
		      em.remove(x_selectedClass);
		      // @todo note that this depends on the semantics of the list
		      // but in a CRUD list removal from list is removal from db
		      x_selectedClass = null;
		    }
          }
    
	      @Destroy @Remove                                                                      
	      public void destroy() {}
      }
    ]|)
    where pkgname           := <BeanPackage>
        ; x_class           := <decapitalize-string> x_Class
	    ; x_classEntries    := <concat-strings> [x_class, "Entries"]
	    ; x_selectedClass   := <concat-strings> ["selected", x_Class]
	    ; x_ClassFinder     := <concat-strings> [x_Class, "Finder"]
	    ; x_ClassFinderBean := <concat-strings> [x_Class, "FinderBean"]
	    ; x_classFinder     := <concat-strings> [x_class, "Finder"]
	    ; x_classFinderBean := <concat-strings> [x_class, "FinderBean"]
    

