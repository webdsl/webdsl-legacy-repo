module org/webdsl/dsl/to-py-gae/types/float

imports 
  libwebdsl-front
  
rules

  python-property-type(|e_name) :
    SimpleSort("Float") -> py-exp|[ db.FloatProperty(default=0, name=e_name) ]|

  python-type :
    SimpleSort("Float") -> py-exp|[ float ]|

  python-type-default-value :
    SimpleSort("Float") -> py-exp|[ 0 ]|

rules
  py-page-elem-to-render :
    elem|[ outputFloat(e)[]{} ]| -> python*|[
          out.write(unicode(e_target));
    ]|
    with e_target := <expression-to-python> e

  py-page-elem-to-render :
    elem|[ inputFloat(e)[]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          out.write('<input type="text" name="' + field_id + '" class="inputFloat" value="');
          out.write(unicode(e_target), True);
          out.write('"/>');
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e

  py-page-elem-to-databind :
    elem|[ inputFloat(e)[]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          if is_submitted_form: {
              e_target = float(self.rh.request.get(field_id));
          };
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e

