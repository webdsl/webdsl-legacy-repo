definition
module DomainModel

hiddens
  context-free start-symbols Domain
    
exports

  sorts Id UpperId AllUpper QualifiedId

  lexical syntax
    [a-z][a-zA-Z0-9\_]*    -> Id
    [A-Z][a-zA-Z0-9\_]*    -> UpperId
    [A-Z][A-Z0-9\_]*       -> AllUpper
    {Id "."}+              -> QualifiedId
    [\ \t\n]               -> LAYOUT
    "//" ~[\n]* [\n]       -> LAYOUT
  lexical restrictions
    Id -/- [a-zA-Z0-9\_] 
    UpperId  -/- [a-zA-Z0-9\_] 

exports

  sorts Domain ConceptDecl Concept ConceptMember Annotation

  context-free syntax
    "domain" QualifiedId ConceptDecl*        -> Domain {cons("Domain")}

    "concept" UpperId "{" ConceptMember+ "}" -> ConceptDecl {cons("ConceptDecl")}

    Id ":" Concept "(" {Annotation ","}* ")" -> ConceptMember {cons("Concept")}
    Id ":" Concept                           -> ConceptMember {cons("Concept")}
   
    "{" {AllUpper ","}* "}"                  -> Concept {cons("EnumConcept")}
    UpperId                                  -> Concept {cons("SimpleConcept")}
    "[" UpperId "]"                          -> Concept {cons("CollectionConcept")}

    Id                                       -> Annotation {cons("SimpleAnnotation")}
    Id "(" {Annotation ","}* ")"             -> Annotation {cons("ParameterizedAnnotation")}