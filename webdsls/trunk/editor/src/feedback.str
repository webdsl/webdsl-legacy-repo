module org/webdsl/dsl/typechecker/analysis

imports
  libstrategolib
  libwebdsl-front
  libwebdsl-generator

strategies

  reference-resolve:
    (source, filename, reference, path) -> <debug(!"result: ")> target
    where
      debug(!"reference-resolve invoked");      
      <oncetd(?Description(_); ?target)> source
    <+
      debug(!"oh noes1 ");
      fail
  
  reference-info:
    (source, filename, target, path) -> <debug(!"result: ")> info
    where
      debug(!"reference-info invoked");
      // info := <pp-webdsl-to-string> target
      info := <main>
    <+
      debug(!"oh noes2 - main not working ");
      fail

strategies // testing

  main =
    <pp-webdsl-to-string> Description(["foo", "is", "foobarred"]);
    debug

strategies // "library" strategies

  term-at-path(|path) =
    if [] := path then
      id
    else
      where(
        [index | path'] := path
      );
      subterm-at-index(|index);
      term-at-path(|path')
    end
  
  apply-at-path(s|path) =
    if [] := path then
      s
    else
      where(
        [index | path'] := path
      );
      apply-at-index(apply-at-path(s|path') |index)
    end
  
  subterm-at-index(|index) =
    prim("sdf2imp_subterm", <id>, index)
  <+
    get-arguments;
    index(|index)
  
  apply-at-index(s|index):
    ctor#(args) -> ctor#(args')
    where
      args' := <at-index(s|index)> args
