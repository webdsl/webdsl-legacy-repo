#!/bin/bash

# Author: Zef Hemel (zef@zefhemel.com)

SEAMPROJECTDIR=.seamapp

function load_config {
  echo "Loading application settings (application.ini)..."
  if [ -f "application.ini" ]
  then
    . application.ini
    return 1
  else
    echo -n "Cannot find application.ini. This file is necessary to build the application for you. Want to create am application.ini now? [y/n] "
    read ANSWER
    if [ "$ANSWER" == "y" ]
    then
      APPNAME=`basename \`pwd\``
      echo "Creating application.ini for application with name $APPNAME."
      create_config $APPNAME
      echo "Created application.ini. Run webdsl again to compile your project."
    fi
    return 0
  fi
}

function create_config {
  echo "---- Database information ----"
  echo "You will now be asked for database info such as hostname, username, password and database. Do note that this script will check if this information is valid, if it is not, it will attempt to create the databse with the given username and password for you."
  echo -n "MySQL Host [localhost]: "
  read DBSERVER
  if [ "$DBSERVER" == "" ]
  then
     DBSERVER=localhost
  fi

  echo -n "MySQL Username [visser]: "
  read DBUSER
  if [ "$DBUSER" == "" ]
  then
     DBUSER=visser
  fi
  
  echo -n "MySQL Password [dsl]: "
  read DBPASSWORD
  if [ "$DBPASSWORD" == "" ]
  then
     DBPASSWORD=dsl
  fi
  
  echo -n "MySQL Databse [serg]: "
  read DBNAME
  if [ "$DBNAME" == "" ]
  then
     DBNAME=serg
  fi
  echo "Now checking if database info works."
  `echo 'SHOW TABLES;' | mysql -u$DBUSER -p$DBPASSWORD $DBNAME`
  if [ "$?" == 0 ]
  then
     echo "Succesful!"
  else
     echo "Unsuccessful, will now attempt to create database. For this we need your MySQL's root password (by default this is blank)."
     echo -n "MySQL root password: "
     read ROOTPW
     if [ "$ROOTPW" == "" ]
     then
	 mysqladmin -uroot create $DBNAME
	 echo "GRANT ALL ON $DBNAME.* TO $DBUSER@localhost identified by '$DBPASSWORD';" | mysql -uroot
     else
	 mysqladmin -uroot -p$ROOTPW create $DBNAME
	 echo "GRANT ALL ON $DBNAME.* TO $DBUSER@localhost identified by '$DBPASSWORD';" | mysql -uroot -p$ROOTPW
     fi
     echo "Now checking if database creation worked..."
     `echo 'SHOW TABLES;' | mysql -u$DBUSER -p$DBPASSWORD $DBNAME`
     if [ "$?" == 0 ]
     then
        echo "Yes!"
     else
	echo "No, unfortunately you'll have to create the database yourself."
     fi
  fi
  
  echo "---- JBoss information ----"
  JBOSSPATH=/opt/jboss
  echo -n "JBoss path for deployment [$JBOSSPATH]: "
  read BOSSPATH
  if [ "$BOSSPATH" == "" ]
  then
     BOSSPATH=$JBOSSPATH
  fi
  JBOSSPATH=$BOSSPATH

  echo "export JBOSSPATH=$JBOSSPATH" > application.ini
  echo "export APPNAME=$APPNAME" >> application.ini
  echo "export DBSERVER=$DBSERVER" >> application.ini
  echo "export DBUSER=$DBUSER" >> application.ini
  echo "export DBPASSWORD=$DBPASSWORD" >> application.ini
  echo "export DBNAME=$DBNAME" >> application.ini
}

function make_java_app {
  load_config
  if [ "$?" == 0 ]
  then
    return 0
  fi
  if [ ! -e "$SEAMPROJECTDIR" ]
  then
    export WEBDSLPATH=`dirname $0`/../../../../..
    export DSLTOSEAM=$WEBDSLPATH/src/org/webdsl/dsl/generation/dsl-to-seam
    
    export ESCAPED_DSLTOSEAM=`echo $DSLTOSEAM | sed 's/\\//\\\\\\//g'`
    export ESCAPED_JBOSSPATH=`echo $JBOSSPATH | sed 's/\\//\\\\\\//g'`
    
    echo "Creating Seam application in $SEAMPROJECTDIR..."
    mkdir $SEAMPROJECTDIR
    cd $SEAMPROJECTDIR
    tar xzf $WEBDSLPATH/src/org/webdsl/dsl/project/template.tar.gz
    mv resources/GENERICAPP-prod-ds.xml resources/$APPNAME-prod-ds.xml
    mv resources/GENERICAPP-dev-ds.xml resources/$APPNAME-dev-ds.xml
    find . -type f \! -iname \*.jar -exec sh -c 'sed -e "s/@@JBOSSPATH@@/$ESCAPED_JBOSSPATH/g" -e "s/@@DBPASSWORD@@/$DBPASSWORD/g" -e "s/@@DBUSER@@/$DBUSER/g" -e "s/@@DBNAME@@/$DBNAME/g" -e "s/@@DBSERVER@@/$DBSERVER/g" -e "s/@@APPNAME@@/$APPNAME/g" -e "s/@@DSLTOSEAM@@/$ESCAPED_DSLTOSEAM/g" $0 > $0.new && mv $0.new $0' {} \;
    cd ..
  fi
  cd $SEAMPROJECTDIR
  echo "Copying your application files..."
  find .. \( ! -regex '.*/\..*' \) -type f -name '*.app' -exec cp {} app \;
  find .. \( ! -regex '.*/\..*' \) -type f -name '*.css' -exec cp {} view/stylesheet \;
  echo "Building application..."
  make
  RET="$?"
  cd ..
  return $RET
}

function make_app {
  make_java_app
  if [ "$?" != 0 ]
  then
    return 0
  fi
  cd $SEAMPROJECTDIR
  echo "Now compiling generated Java code..."
  ant archive
  cd ..
  if [ ! -e "dist" ]
  then
    mkdir dist
  fi
  cp $SEAMPROJECTDIR/dist/$APPNAME.ear $SEAMPROJECTDIR/resources/$APPNAME-dev-ds.xml dist
  return 1
}

echo "WebDSL script version 0.2 by Zef Hemel"

case "$1" in
  "deploy" )
     load_config
     if [ "$?" == 0 ]
     then
       return 0
     fi
     if [ ! -e "$SEAMPROJECTDIR" ]
     then
       make_app
     fi
     echo "Now deploying application..."
     cd $SEAMPROJECTDIR/
     ant deploy
     cd ..
     echo "Application has been deployed."
     ;;
  "undeploy" )
     load_config
     if [ "$?" == 0 ]
     then
       return 0
     fi
     if [ ! -e "$SEAMPROJECTDIR" ]
     then
       make_java_app
     fi
     echo "Now undeploying application..."
     cd $SEAMPROJECTDIR/
     ant undeploy
     cd ..
     echo "Application undeployed."
     ;;
  "new" )
     echo -n "Application name (one word): "
     read APPNAME
     mkdir $APPNAME
     cd $APPNAME
     create_config $APPNAME
     echo "Now creating bare-bones application in $APPNAME.app..."
     echo "application com.example.$APPNAME" > $APPNAME.app
     echo "" >> $APPNAME.app
     echo "description {" >> $APPNAME.app
     echo "  This is an automatically generated description" >> $APPNAME.app
     echo "}" >> $APPNAME.app
     echo "" >> $APPNAME.app
     echo "section pages" >> $APPNAME.app
     echo "" >> $APPNAME.app
     echo "define page home() {" >> $APPNAME.app
     echo "" >> $APPNAME.app
     echo "}" >> $APPNAME.app
     echo "Application created in $APPNAME. You can now cd to this directory and call the webdsl script to compile your program."
     ;;
  "clean" )
     echo "Removing seam project files"
     rm -rf $SEAMPROJECTDIR
     ;;
  "cleanall" )
     echo "Removing seam project files and dist directory."
     rm -rf $SEAMPROJECTDIR dist
     ;;
  "java" )
     make_java_app
     echo "Done, result is in $SEAMPROJECTDIR."
     ;;
  "" )
     make_app
     if [ "$?" == 1 ]
     then
       echo "Done. Resulting application (.ear and datasource file) are in dist/. Run 'webdsl deploy' to deploy."
     fi
     ;;
  * )
     echo "Options:"
     echo "   [none] : Compile your application. Takes all your .app and .css files, creates a new Seam project, compiles everything."
     echo "     java : Compile your application to java and JSF code, but do not compile them."
     echo "      new : Create a new, empty WebDSL application."
     echo "   deploy : Deploys your application to JBoss."
     echo "    clean : Removes the created Seam project."
     echo " cleanall : Removes the created Seam project and dist directory."
     ;;

esac

