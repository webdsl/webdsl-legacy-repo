<project name="webdsl-build-eclipse" default="eclipse-build">
  
	<target name="eclipse-build">
		<antcall target="build-without-java-compile"/>
		<property name="servletappdir" value="${currentdir}/.servletapp"/>
		<property name="webcontentdir" value="${currentdir}/WebContent"/>
	    <copy preservelastmodified="true" todir="${webcontentdir}/WEB-INF/lib">
	      <fileset dir="${servletappdir}/bin/WEB-INF/lib">
	    		    	<exclude name="javaee.jar" />
	    	</fileset>
	    </copy>
	    <copy file="${servletappdir}/web.xml" preservelastmodified="true" todir="${webcontentdir}/WEB-INF"/>
	    <copy preservelastmodified="true" todir="${webcontentdir}">
	      <fileset dir="${servletappdir}/html"/>
	    </copy>
	    <copy preservelastmodified="true" todir="${webcontentdir}/images">
	      <fileset dir="${servletappdir}/images"/>
	    </copy>
	    <copy preservelastmodified="true" todir="${webcontentdir}/stylesheets">
	      <fileset dir="${servletappdir}/stylesheets"/>
	    </copy>
	    <copy preservelastmodified="true" todir="${webcontentdir}/javascript">
	      <fileset dir="${servletappdir}/javascript"/>
	    </copy>
	    <copy preservelastmodified="true" todir="${webcontentdir}">
	      <fileset dir="${servletappdir}">
	        <include name="webdsl-reindex"/>
	    	<include name="build.reindex.xml"/>
	    	<include name="build.properties"/>
	    	<include name="html/index.jsp"/>
	    	<include name="html/favicon.ico"/>
	    	<include name="build.properties"/>
	      </fileset>
	    </copy>
		
	    <ant dir="${currentdir}/.servletapp" antfile="${currentdir}/.servletapp/build.xml" target="configure"/>
		<copy overwrite="true" todir="${webcontentdir}/WEB-INF/classes">
          <fileset dir="${servletappdir}/src-template">
            <include name="hibernate.properties"/>
	     	<include name="email.properties"/>
		   	<include name="log4j.properties"/>
		  </fileset>
        </copy>
		
		<antcall target="fix-classpath"/>
		
		<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath"/>
		<eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	</target>
	
	
	<target name="eclipse-build-code-only">
      <antcall target="build-without-java-compile-code-only"/>
	  <eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath"/>
	  <eclipse.refreshLocal resource="${resourcePath}" depth="infinite"/>
	  
	  <!-- update web.xml, in case of new pages -->
	 	<property name="webcontentdir" value="${currentdir}/WebContent"/>
	 	<property name="servletappdir" value="${currentdir}/.servletapp"/>
	 	<copy file="${servletappdir}/web.xml" preservelastmodified="true" todir="${webcontentdir}/WEB-INF"/>
	 	<echo>${basedir}/WebContent/WEB-INF/web.xml</echo>
	  <eclipse.refreshLocal resource="${basedir}/WebContent/WEB-INF/web.xml" />
	 
	</target>	
	
	
    <target name="fix-classpath">
		<script language="javascript"> <![CDATA[
	      importClass(java.io.File);
	      importClass(java.io.BufferedReader);
	      importClass(java.io.FileReader);
	      importClass(java.io.BufferedWriter);
	      importClass(java.io.FileWriter);
	      importClass(java.lang.StringBuffer);

	      // Access to Ant-Properties by their names
	      var currentdir = project.getProperty("currentdir");
			
		  classpathFile = new StringBuffer();
	      classpathFile.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
		  classpathFile.append("<classpath>\n");
		  classpathFile.append("\t<classpathentry kind=\"src\" path=\".servletapp/src-template\"/>\n");
	      classpathFile.append("\t<classpathentry kind=\"src\" path=\".servletapp/src-generated\"/>\n");
		  classpathFile.append("\t<classpathentry kind=\"src\" path=\".servletapp/src-native\"/>\n");
		  classpathFile.append("\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6\"/>\n");
		  classpathFile.append("\t<classpathentry kind=\"con\" path=\"org.eclipse.jst.j2ee.internal.web.container\"/>\n");
		  classpathFile.append("\t<classpathentry kind=\"con\" path=\"org.eclipse.jst.j2ee.internal.module.container\"/>\n");
		  classpathFile.append("\t<classpathentry kind=\"output\" path=\"WebContent/WEB-INF/classes\"/>\n");
		  
	      var appdir = new File(currentdir+"/.servletapp/bin/WEB-INF/lib");
		  var libfiles = appdir.listFiles();
		  for ( i = 0 ; i < libfiles.length ; i ++ ) {
			if ( libfiles[i].isFile ( ) ){
			  classpathFile.append("\t<classpathentry kind=\"lib\" path=\".servletapp/bin/WEB-INF/lib/"+libfiles[i].getName()+"\"/>\n");
	    	}
	      }
			
		  classpathFile.append("</classpath>\n");
		
		  try {
            //write result
            fw = new FileWriter(currentdir+"/.classpath");
            bw = new BufferedWriter(fw);
            bw.write(classpathFile.toString());
            bw.close();
            fw.close();
          } catch (e) {
            echo = project.createTask("echo");
            echo.setMessage(e);
            echo.perform();
          }	
	    ]]></script>
	</target>

</project>
