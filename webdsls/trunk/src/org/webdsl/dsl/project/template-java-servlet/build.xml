<project name="webdsl-app" default="compile">

  <loadproperties srcFile="build.properties"/>
    
  <property name="sourcedir" value="${basedir}/src-generated"/>
  <property name="templatesourcedir" value="${basedir}/src-template"/>
	<property name="nativesourcedir" value="${basedir}/src-native"/>
	<property name="targetdir" value="${basedir}/bin/WEB-INF/classes"/>
  <property name="bindir" value="${basedir}/bin"/>
  <property name="librarydir" value="${basedir}/bin/WEB-INF/lib"/>
  <property name="tomcatdir" value="${basedir}/tomcat"/>
  <property name="templatetestlibdir" value="${webdsl.template}/lib-test"/>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="${templatetestlibdir}/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>   
  
  <if>
    <equals arg1="${currentdir}" arg2="$${currentdir}"/>
    <then>
      <property name="compiledir" value="."/>  
    </then>
    <else>
      <property name="compiledir" value="${currentdir}/.servletapp"/>  
    </else>
  </if>	
  
  <taskdef name="tomcat_deploy" classname="org.apache.catalina.ant.DeployTask">
    <classpath>
      <pathelement location="${templatetestlibdir}/catalina-ant.jar"/>
    </classpath>
  </taskdef>
  <taskdef name="tomcat_undeploy" classname="org.apache.catalina.ant.UndeployTask">
    <classpath>
      <pathelement location="${templatetestlibdir}/catalina-ant.jar"/>
    </classpath>
  </taskdef>
  
    <path id="libraries">
        <fileset dir="${librarydir}" includes="*.jar"/> 
    </path>

    <target name="clean">
        <delete dir="${targetdir}"/>
        <mkdir dir="${targetdir}"/>
    </target>

    <target name="compile" depends="copy-resources">
      <javac destdir="${targetdir}"
             failonerror="true" 
             classpathref="libraries"
             debug="on"
             fork="true" 
             memoryinitialsize="256m"
             memorymaximumsize="1024m">          
<!-- fork= and memory sizes fix problem with javac throwing outofmemory heap space exception caused by ant 64mb default limit -->
   <!--     verbose="yes">
  <compilerarg value="-Xlint"/> --> 
  			<src path="${sourcedir}" />
      	<src path="${templatesourcedir}" />
      	<src path="${nativesourcedir}" />
 	  	</javac>
    	
      <copy todir="${targetdir}">
      	<fileset dir="${templatesourcedir}">
      		<exclude name="*.java" />
      	</fileset>
      </copy>
    	
    </target>
  
    <target name="convertoldglobals" depends="compile">
       <java classname="utils.ConvertOldGlobals" maxmemory="2048m" failonerror="true" dir="${compiledir}" fork="true">
         <classpath>
           <pathelement location="${targetdir}"/>
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>	

    <target name="check" depends="compile">
       <java classname="utils.TestAll" failonerror="true" dir="${compiledir}" fork="true">
         <classpath>
           <pathelement location="${targetdir}"/>
         	 <pathelement location="${templatedir}"/>
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>
  
  <target name="untar-tomcat">
      <untar overwrite="false" src="${tomcatdir}/apache-tomcat-6.0.20.tar.gz" dest="${tomcatdir}/" compression="gzip"/>
  </target>

    <target name="check-web" depends="untar-tomcat, war">
       <java classname="utils.TestWeb" failonerror="true" dir="${compiledir}" fork="true">
         <classpath>
           <pathelement location="${targetdir}"/>
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>
	
    <target name="run" depends="untar-tomcat, war">
       <java classname="utils.TestRun" failonerror="true" dir="${compiledir}" fork="true">
         <classpath>
           <pathelement location="${targetdir}"/>
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>
  
    <target name="schema-export" depends="compile">
      <java classname="utils.SchemaExport" failonerror="true" dir="${compiledir}" fork="true">
        <classpath>
          <pathelement location="${targetdir}"/>
          <fileset dir="${librarydir}" includes="*.jar"/> 
        </classpath>
      </java>
    </target>
  
  <target name="copy-resources" depends="configure">
    <copy preservelastmodified="true" todir="${targetdir}">
      <fileset dir="${sourcedir}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <!--<copy preservelastmodified="true" todir="${bindir}/WEB-INF/lib">
      <fileset dir="${librarydir}">
      	<exclude name="javaee.jar"/>
      </fileset>
    </copy>
    <copy preservelastmodified="true" todir="${bindir}/html">
      <fileset dir="${basedir}/html"/>
    </copy>
    <copy preservelastmodified="true" todir="${bindir}/images">
      <fileset dir="${basedir}/images"/>
    </copy>
    <copy preservelastmodified="true" todir="${bindir}/stylesheets">
      <fileset dir="${basedir}/stylesheets"/>
    </copy>
    <copy preservelastmodified="true" todir="${bindir}/javascript">
      <fileset dir="${basedir}/javascript"/>
    </copy>
    <copy preservelastmodified="true" todir="${bindir}">
      <fileset dir="${basedir}">
    	<include name="webdsl-reindex"/>
    	<include name="build.reindex.xml"/>
    	<include name="build.properties"/>
    	<include name="html/index.jsp"/>
    	<include name="html/favicon.ico"/>
    	<include name="build.properties"/>
      </fileset>
    </copy>
    <copy preservelastmodified="true" todir="${bindir}/WEB-INF">
      <fileset dir="${basedir}">
    	<include name="web.xml"/>
      </fileset>
    </copy>
  	<mkdir dir="${bindir}/META-INF"/>
  	<echo append="false" file="${bindir}/META-INF/MANIFEST.MF">Manifest-Version: 1.0</echo>-->
  </target>

  <target name="war" depends="compile">
    <war destfile="${webdsl.warfilename}.war" webxml="web.xml">
      <lib dir="${librarydir}">  
        <exclude name="javaee.jar"/>
      </lib>
      <classes dir="${targetdir}"/>
      <fileset dir="${basedir}/html"/>
      <fileset dir="${basedir}">
        <include name="webdsl-reindex"/>
        <include name="build.reindex.xml"/>
        <include name="build.properties"/>
      </fileset>
      <zipfileset dir="${basedir}/images" prefix="images"/>
      <zipfileset dir="${basedir}/stylesheets" prefix="stylesheets"/>
      <zipfileset dir="${basedir}/javascript" prefix="javascript"/>
    </war>
  </target>

  <target name="deploy" depends="war">
    <copy overwrite="true" file="${webdsl.warfilename}.war" todir="${webdsl.tomcat.path}/webapps"/>
  </target>
  <target name="undeploy">
    <delete file="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}.war"/>
    <delete dir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}"/>
  </target>
  
  <target name="tomcatdeploy" depends="war">
    <tomcat_deploy 
      url="${webdsl.tomcat.manager}"
      username="${webdsl.tomcat.username}"
      password="${webdsl.tomcat.password}"
      update="true"
      path="/${webdsl.warfilename}"
      localWar="${basedir}/${webdsl.warfilename}.war" />
  </target>
  <target name="tomcatundeploy">    
    <tomcat_undeploy 
      url="${webdsl.tomcat.manager}"
      username="${webdsl.tomcat.username}"
      password="${webdsl.tomcat.password}"
      path="/${webdsl.warfilename}" />
  </target>

  <target name="deployfiles" depends="compile">
    <copy preservelastmodified="true" file="${basedir}/web.xml" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF"/>     
    <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF/lib">
      <fileset dir="${librarydir}">  
        <exclude name="javaee.jar"/>
      </fileset>
    </copy>	
    <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/WEB-INF/classes">
      <fileset dir="${targetdir}"/>
    </copy>
    <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/html">
      <fileset dir="${basedir}/html"/>
    </copy>	
    <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/images">
      <fileset dir="${basedir}/images"/>
    </copy>	
    <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/stylesheets">
      <fileset dir="${basedir}/stylesheets"/>
    </copy>	
    <copy preservelastmodified="true" todir="${webdsl.tomcat.path}/webapps/${webdsl.warfilename}/javascript">
      <fileset dir="${basedir}/javascript"/>
    </copy>   
  </target> 
  
  <target name="configure">
    <copy overwrite="true" file="${templatesourcedir}/tpl_log4j.properties" tofile="${templatesourcedir}/log4j.properties">
      <filterchain><replacetokens>
        <token key="DEBUGLOG4J1" value="${webdsl.DEBUGLOG4J1}"/>
        <token key="DEBUGLOG4J2" value="${webdsl.DEBUGLOG4J2}"/>
      </replacetokens></filterchain>
    </copy>
    <copy overwrite="true" file="${templatesourcedir}/tpl_email.properties" tofile="${templatesourcedir}/email.properties">
      <filterchain><replacetokens>
        <token key="SMTPHOST" value="${webdsl.SMTPHOST}"/>
        <token key="SMTPPORT" value="${webdsl.SMTPPORT}"/>
        <token key="SMTPUSER" value="${webdsl.SMTPUSER}"/>
        <token key="SMTPPASS" value="${webdsl.SMTPPASS}"/>
        <token key="SMTPSSL" value="${webdsl.SMTPSSL}"/>
        <token key="SMTPTLS" value="${webdsl.SMTPTLS}"/>
      </replacetokens></filterchain>
    </copy>
    <if>
      <equals arg1="${webdsl.DB}" arg2="sqlite" />
    <then>
      <echo message="configuring for using Sqlite database file"/>
      <copy overwrite="true" file="${templatesourcedir}/tpl_hibernatesqlite.properties" tofile="${templatesourcedir}/hibernate.properties">
        <filterchain><replacetokens>
          <token key="DBFILEOPTION" value="${webdsl.DBFILEOPTION}"/>
          <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
          <token key="DBMODE" value="${webdsl.DBMODE}"/>
        </replacetokens></filterchain>
      </copy>
    </then>
    <else>
      <echo message="configuring for using Mysql database"/>
      <copy overwrite="true" file="${templatesourcedir}/tpl_hibernate.properties" tofile="${templatesourcedir}/hibernate.properties">
        <filterchain><replacetokens>
          <token key="DBSTORAGEOPTION" value="${webdsl.DBSTORAGEOPTION}"/>
          <token key="DEBUGHIBERNATE" value="${webdsl.DEBUGHIBERNATE}"/>
          <token key="DBMODE" value="${webdsl.DBMODE}"/>
          <token key="DBSERVER" value="${webdsl.DBSERVER}"/>
          <token key="DBNAME" value="${webdsl.DBNAME}"/>
          <token key="DBUSER" value="${webdsl.DBUSER}"/>
          <token key="DBPASSWORD" value="${webdsl.DBPASSWORD}"/>
          <token key="INDEXDIR" value="${webdsl.INDEXDIR}"/>
        </replacetokens></filterchain>
      </copy>       
    </else>
    </if>
  </target>

  <target name="reindex" depends="compile">
    <java classname="utils.ReIndex" maxmemory="2048m" failonerror="true" dir="${compiledir}" fork="true">
      <classpath>
        <pathelement location="${targetdir}"/>
        <fileset dir="${librarydir}" includes="*.jar"/> 
      </classpath>
    </java>
  </target>
</project>
