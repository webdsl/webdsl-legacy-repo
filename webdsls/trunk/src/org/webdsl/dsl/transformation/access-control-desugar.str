/**

 Security rules for WebDSL
 
*/

module org/webdsl/dsl/transformation/access-control-desugar

imports 
  libstrategolib 
  
imports 
  org/webdsl/dsl/syntax/WebDSL
  org/webdsl/dsl/transformation/-

rules

  concat-with-sublists=
    foldr(![], (is-list, id) < conc + MkCons)

  create-ac-pointcuts=
    try(sometd(declare-ac-pointcuts))
    ; try(sometd(desugar-ac-pointcuts))
   
  declare-ac-pointcuts:
    AccessControlPointcut(pname,elems) -> AccessControlPointcut(pname,elems)
    where <filter(declare-ac-pointcut-element(|pname))> elems 
    
  declare-ac-pointcut-element(|pname):
    AccessControlPointcutElement(ident,matchident) -> AccessControlPointcutElement(ident,matchident)
    where newPointcutList := <concat> [<AccessControlPointcuts<+![]> pname,[(ident,matchident)]]
        ; rules(
            AccessControlPointcuts: pname -> newPointcutList
          )
  
  desugar-ac-pointcuts:
    AccessControlDefinition(elems) -> AccessControlDefinition(<map(try(desugar-ac-pointcuts));concat-with-sublists>elems)
  
  desugar-ac-pointcuts:
    AccessControlPointcut(name,elems) -> []

  desugar-ac-pointcuts:
    AccessControlRule("pointcut",matchident,args,checks,childrules) -> newrules
    where rulematchtuples := <AccessControlPointcuts<+!["pointcut ",matchident," does not exist"];concat-strings;debug> matchident      
        ; newrules := <map(rule-tuple-to-ac-rule(|args,checks,childrules))> rulematchtuples
    
  rule-tuple-to-ac-rule(|args,checks,childrules):
    (ident,matchident) -> AccessControlRule(ident,matchident,args,checks,childrules)
     
  // rules for actions are inherited from rule for page if no action rules are provided
  desugar-access-control =
    try(sometd(DesugarAccessControlRule))

  DesugarAccessControlRule : 
    AccessControlRule("page", x, fargs, check, []) ->
    AccessControlRule("page", x, fargs, check, [AccessControlRule("action", "*", MatchArgs([], Some("*")), check, [])])

  DesugarAccessControlRule : 
    AccessControlRule("template", x, fargs, check, []) ->
    AccessControlRule("template", x, fargs, check, [AccessControlRule("action", "*", MatchArgs([], Some("*")), check, [])])

  // Prevent template rules inside page rules from getting action rules, because this is not allowed.
  // (the template rules inside page rules are for template calls which never contain actions)
  DesugarAccessControlRule =
    ?AccessControlRule("page", x, fargs, check, [a|xs])