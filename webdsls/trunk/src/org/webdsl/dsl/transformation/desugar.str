module org/webdsl/dsl/transformation/desugar

imports
  libstrategolib
  Java-15
  libjava-front

imports
  libwebdsl-front

signature
  constructors
    RemoveMe : Annotation

strategies

  all-consnil(s) = ?[_ | _] < [s | s] + all(s)

  innermost-rep(s) =
    {| InnermostNormalForm, InnermostApplied
     : rules(InnermostApplied := False())
     ; innermost-rep-aux(s)
     ; where(InnermostApplied => True())
     |}

  //rules used to determine whether any desugar was applied (might have only changed dynamic rule but not the AST)
  innermost-rep-aux(s) =
    InnermostNormalForm
    <+ all-consnil(innermost-rep-aux(s))
       ; try(s; rules( InnermostApplied := True() ); innermost-rep-aux(s))
       ; {?q; rules( InnermostNormalForm : q )} //TODO doesn't this make it slower? each subterm ends up in a hashtable

  desugar-top =
    //{| AspectWeavingRules ... :
     repeat(innermost-rep(desugar))
   //  |}


rules //extend entity functions create dr
  
  rename-all-vars :
    (t, []) -> (t, [])

  rename-all-vars :
    (t, [(from, to)|rst]) -> <rename-all-vars> (t2, rst)
    where t2 := <rename-var(|from, to)> t

rules

  desugar :
    [RemoveMe()|lst] -> lst

rules
  /**
   *  Many desugar rules require a rename of the entire 'define' in order to "see" all the visible vars in Rename dynamic rules.
   *  Also for constructing the closure used in definition/function lifting it is necessary to rename the whole define.
   *  To reduce the number of full 'define' renamings, this rule provides a hook for other desugar rules working in the context of a 'define'.
   *  Maybe faster with innermost, though elems contained in this define are already desugared by normal 'desugar' rules.
   *  Should only be used for simple rewrites, since after one application the elems in the define are probably no longer all properly renamed.
   *  Used in translation of outputFile and outputImage.
   */   
  desugar : 
    def1@Define(mods, name, args, targs, elems1){anno*} -> result
    where {| DesugarInDefineContextApplied :
            elems2 := <alltd(desugar-in-define-context; where(rules(DesugarInDefineContextApplied := True())))> elems1
          ; DesugarInDefineContextApplied
          ; result := <rename> Define(mods, name, args, targs, elems2){anno*}
           |}
        