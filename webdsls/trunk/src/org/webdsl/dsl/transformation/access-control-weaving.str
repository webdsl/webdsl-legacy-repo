/**

 Security rules for WebDSL
 
*/

module org/webdsl/dsl/transformation/access-control-weaving

imports 
  libstrategolib 
  
imports 
  org/webdsl/dsl/syntax/WebDSL
  org/webdsl/dsl/transformation/-
rules

  attach-decision-classes-to-application:
	Application(qid, sections) -> Application(qid, <concat>[sections,[extra] ] )
  	where def0* := <Generated-Decision-Classes>
  		; extra := 
  		    |[
  			  section access control decision classes.
  		
  			  def0*
  			]|

  apply-checks-to-page:
	Define(modifier,ident,formargs,tempelement) -> Define(modifier,ident,formargs,newtempelement)
	where newtempelement2 := <concat> [tempelement , [ InitAction( Block(<generate-access-control-checks(|"page",ident,formargs,[])>) )  ] ]
	    ; pagetargetrules := <once-Previous-Selected-Rules>
	    ; newtempelement := <try(sometd(apply-checks-to-action(|pagetargetrules)))> newtempelement2
	
  apply-checks-to-action(|pagetargetrules):
    Action(ident,formargs,Block(statements)) -> Action(ident,formargs,Block(newstatements))
    where newstatements := <concat> [<generate-access-control-checks(|"action",ident,formargs,pagetargetrules)> , statements]

	