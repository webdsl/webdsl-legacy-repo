module org/webdsl/dsl/java-transformations/java-transformations

imports
  libstratego-lib
  libjava-front
  libwebdsl-front //only for the JavaFile and XMLFile constructors
  libto-java-servlet //for dynamic rules in emit-java-code
  libwebdsl-generator //only for get-css-artifacts, todo: refactor css stuff into separate library
  
imports
  org/webdsl/dsl/java-transformations/-

rules

  transform-java-code =
    where(  pkgname1 := <BeanPackage>
          ; pkgname2 := <DomainPackage>
          ; pkgname3 := <ActionPackage>
          ; pkgname4 := <TestPackage>)
  ; ! [  <log-time(get-java-artifacts-java-servlet|"get-java-artifacts")>
       , <log-time(get-web-xml                    |"get-web-xml")>
       , <log-time(get-css-artifacts              |"get-css-artifacts")>
       , JavaFile(["src"],compilation-unit|[package pkgname1 ; public class Force_Bean_Package_Creation {} ]|)
       , JavaFile(["src"],compilation-unit|[package pkgname2 ; public class Force_Domain_Package_Creation {} ]|) 
       , JavaFile(["src"],compilation-unit|[package pkgname3 ; public class Force_Action_Package_Creation {} ]|)                   
       , JavaFile(["src"],compilation-unit|[package pkgname4 ; public class Force_Test_Package_Creation {} ]|)                   
      ]
      
  get-java-artifacts-java-servlet =
    bagof-JavaClassesToEmit
    ; java-concat-ids'
    ; merge-classes
    ; map(!JavaFile(["src"],<id>))

  get-web-xml =
    WebXMLToEmit
