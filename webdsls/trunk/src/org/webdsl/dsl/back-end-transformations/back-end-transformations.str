module org/webdsl/dsl/back-end-transformations/back-end-transformations

imports
  libstrategolib
  libwebdsl-front

imports
  org/webdsl/dsl/back-end-transformations/-
  org/webdsl/dsl/back-end-transformations/caching/-

rules

  back-end-transformations =
      topdown(
        try(analyze-elem)
      )

  back-end-transformations-using-global-info :
    a@Application(_,_){anno*} -> a{<remove-all(?AllTemplateDefsAnno(_))>anno*}
    with defs := <fetch-elem(?AllTemplateDefsAnno(<id>))> anno*
       ; <map(analyze-elem-global-define <+ debug(|"Internal error: analyze-elem-global-define failed on input: ");<exit> 1)> defs
       
       // because the compile units cache optimization removes unchanged top-level components completely from the AST,  
       // making all page and template declarations visible in back-end lookup classes is done using declare information attached in AllTemplateDefsAnno.
       
       // alternatively, small/cheap components can be prevented from being removed at all in org/webdsl/dsl/utils/compile-units