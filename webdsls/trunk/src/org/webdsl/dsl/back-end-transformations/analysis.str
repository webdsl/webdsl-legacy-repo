module org/webdsl/dsl/back-end-transformations/analysis

imports
	libwebdsl-front
	org/webdsl/dsl/back-end-transformations/back-end-transformations

rules      // analyze-elem
  
  // Optimization: currently only global definitions have to be searched, succeed if we're done
  // with the section to avoid complete traversal of the tree
  	analyze-elem: sec -> sec
  	where Section(_,defs) := sec
  			; <map(try(analyze-elem-global))> defs
  			
rules	// analyze-elem for global elements

	// entity
  analyze-elem-global: ent -> ent
    where class := <?Entity(<id>,_,body) <+ ?EntityNoSuper(<id>,body) <+ ?SessionEntity(<capitalize-string>,body)>
        ; rules (AllEntityNames :+= class)
        ; rules (EntityFromName : class -> ent)
        ; where(<try(get-anno(?IndexedAnno())
               ; rules(IndexedEntities :+= class))> ent)
        ; where(
        			idname := <get-type-anno; get-entity-id-name> ent
        		; (_,_,sort) := <fetch-elem(get-property-def; ?(idname,_,_))> body
        		; rules(AllIdProperties :+= (class, idname, sort))
        )
  
  // test
  analyze-elem-global =
    where(
      ?Test(name,body); rules (AllTestNames :+= name)
    )
	
	// global var
	analyze-elem-global =
  		?VarDeclInit(_,_,_)
		; rules(AllGlobalVars :+= <id>)
	
	// session entity
	analyze-elem-global =
			?SessionEntity(_, _)
		; rules(SessionEntities :+= <id>)
 