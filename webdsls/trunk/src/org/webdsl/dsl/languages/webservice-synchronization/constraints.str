module org/webdsl/dsl/languages/webservice-synchronization/constraints

imports
  libstrategolib

imports
  libwebdsl-front
  
  
  org/webdsl/dsl/languages/data-model/declare
  org/webdsl/dsl/languages/access-control/declare
  org/webdsl/dsl/typechecker/error
  org/webdsl/dsl/languages/action/overloading
  org/webdsl/dsl/languages/composition
  
  org/webdsl/dsl/languages/webservice-synchronization/rename
  org/webdsl/dsl/languages/webservice-synchronization/declare

rules // toplevel

  constraint-error-synchronization: 
  	x@SyncTopLevelNameProperty(propertyname) -> < add-error(|$[no property [propertyname] in entity [ent]]) > propertyname
    where <get-anno(InEntity(?ent))> x
		; not( <get-property> (ent, propertyname) )
        
  
  constraint-error-synchronization: 
  	x@SyncTopLevelNameProperty(propertyname) -> < add-error(|$[name Property type: [type] is not compatible with expected type: String]) > propertyname
    where <get-anno(InEntity(?ent))> x
		; type := <get-property; get-property-type; remove-sort-constructor> (ent, propertyname)
		; not(<?"String"> type) 
       
  constraint-error-synchronization: 
  	x@SyncConfigEmbedded(content) -> < add-error(|"synchronization framework requires at least one TopLevelEntity") > x
  	where TopLevelEntities* := <all-keys-TopEntity>
  		; <?[]> TopLevelEntities*

rules// restricted
	   
  constraint-error-synchronization: x@SyncRestrictedProperties(props) -> x
  	where <get-anno(InEntity(?ent))> x
  		; <filter(contraint-error-synchronization-no-property(|ent))> props
  		; <filter(contraint-error-synchronization-no-name-property(|ent))> props
  		; <filter(contraint-error-synchronization-prohibited-property(|ent))> props   
  		; fail  
  
  contraint-error-synchronization-no-property(|ent): 
  	propertyname -> < add-error(|$[no property [propertyname] in entity [ent]]) > propertyname
  	where not( <get-property> (ent, propertyname) )
        
  
  contraint-error-synchronization-no-name-property(|ent): 
  	propertyname -> < add-error(|"it is not allowed to restrict the name property")> propertyname
  	where nameprop := <TopEntity> ent
  		; <?nameprop> propertyname 
        
  
  contraint-error-synchronization-prohibited-property(|ent): 
  	propertyname -> < add-error(|"it is not allowed to restrict property id")> propertyname
  	where <?"id"> propertyname 
     
rules// ac

  constraint-error-synchronization: x@SyncACRead(exp) -> x
  	where <constraint-error-synchronization-ac> (x,exp)
  
  constraint-error-synchronization: x@SyncACWrite(exp) -> x
  	where <constraint-error-synchronization-ac> (x,exp)
  
  constraint-error-synchronization: x@SyncACCreate(exp) -> x
  	where <constraint-error-synchronization-ac> (x,exp)

  constraint-error-synchronization-ac:(x,exp) -> (x, exp)
    where <constraint-error-synchronization-bool-ac> exp 
    	<+ <constraint-error-synchronization-no-principal-ac> x
   
  constraint-error-synchronization-bool-ac: 
  	exp -> <add-error(|"expression should be of type Bool")> exp
    where type := <type-of> exp
    where not(SimpleSort("Bool") := type)
    
  constraint-error-synchronization-no-principal-ac: 
  	x -> <add-error(|"access control requires a principal")> x
    where not(PrincipalDecl)
    
  constraint-warning-synchronization-no-ac(|ent): 
  	x -> <add-warning(|$[it is recommended to define [missingparts] access control settings in the synchronization configuration for entity: [ent] ])> x
  	where PrincipalDecl
 		; SyncEnabled
  		; missingrules := []	
  		; if (<SyncACCreate> ent) then missingrules' := missingrules else  missingrules' :=  ["create"|missingrules] end
  		; if (<SyncACWrite> ent) then missingrules'' := missingrules' else  missingrules'' :=  ["write"|missingrules'] end
  		; if (<SyncACRead> ent) then missingrules''' := missingrules'' else  missingrules''' :=  ["read"|missingrules''] end
    where not(<?[]> missingrules''') 
    where missingparts := <separate-by(|", "); concat-strings> missingrules'''
     
 constraint-error-synchronization: x@SyncConfigEmbedded(content) -> x
  	where <get-anno(InEntity(?ent))> x
  		; <constraint-warning-synchronization-no-ac(|ent)> x
 
 
 constraint-error-synchronization: entity -> entity
   	where <?Entity(x, _, _) <+ ?EntityNoSuper(x, _)> entity
    where not( <HasSyncConfig> x)
    where <constraint-warning-synchronization-no-ac(|x)> x

 
  
   