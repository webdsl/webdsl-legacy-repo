module org/webdsl/dsl/languages/data-model/rename

rules

  rename-data :
    Entity(x_class, s, props1, functions1) -> <declare-entity> Entity(x_class, s, props2, functions2)
    with {| Rename, InEntity
          : rules ( InEntity := x_class )
          ; y := <rename-bound(|SimpleSort(x_class))> "this"
          ; props2 := <rename-all> props1
          ; functions2 := <rename-all> functions1
          |}

  rename-data :
    EntityNoSuper(x_class, props1, functions1) -> <declare-entity> EntityNoSuper(x_class, props2, functions2)
    with {| Rename, InEntity
          : rules ( InEntity := x_class )
          ; y := <rename-bound(|SimpleSort(x_class))> "this"
          ; props2 := <rename-all> props1
          ; functions2 := <rename-all> functions1
          |}

  rename-data :
    SessionEntity(nm, props1, functions1) -> <declare-entity> SessionEntity(nm, props2, functions2)
    with {| Rename, InEntity
          : rules ( InEntity := nm )
          ; x_class := <capitalize-string> nm
          ; y := <rename-bound(|SimpleSort(x_class))> "this"
          ; props2 := <rename-all> props1
          ; functions2 := <rename-all> functions1
          |}
           
  rename-data :         
    ExtendSessionEntity(x_class, props1, funcs1) -> <declare-extend-entity> ExtendSessionEntity(x_class, props2, funcs2) 
    with {| Rename, InEntity
          : rules ( InEntity := x_class )
          // removed because extend session matches on original name: x_class := <capitalize-string> x_class1 
          ; y := <rename-bound(|SimpleSort(<capitalize-string> x_class))> "this"
          ; props2 := <rename-all> props1
          ; funcs2 := <rename-all> funcs1
          |}

  rename-data :
    ExtendEntity(x_class, props1, funcs1) ->  <declare-extend-entity> ExtendEntity(x_class, props2, funcs2) 
    with {| Rename, InEntity
          : rules ( InEntity := x_class )
          ; y := <rename-bound(|SimpleSort(x_class))> "this"
          ; props2 := <rename-all> props1
          ; funcs2 := <rename-all> funcs1
          |}


