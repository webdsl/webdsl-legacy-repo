module org/webdsl/dsl/languages/data-model/global-variables

imports
  libstrategolib
  Java-15
  libjava-front

imports
  libwebdsl-front
          
rules

  //fix for old syntax of global variables and functions
  desugar-data :
    GlobalsDefinition(defs) -> RemoveMe()
    where <map(emit-webdsl-code-no-rename<+debug(!"old globals syntax fix failed"))> defs
   
  collect-global-vars= 
    ?app@Application(qid, sections)
    ; globalvars := <collect( \ Section(_,defs) -> <filter(?VarDeclInit(_, _, _))> defs\) ;concat> sections
    ; rules ( AllGlobalVars := globalvars )
    ; !app
    
  collect-session-vars= 
    ?app@Application(qid, sections)
    ; sessionvars := <collect( \ Section(_,defs) -> <filter(?SessionEntity(_, _, _))> defs\) ;concat> sections
    ; rules ( SessionEntities := sessionvars )
    ; !app

rules //constraints

  //duplicate global var names
  constraint-error-data :
    Application(nm, sections) -> <fail>
    where globalvars := <collect(?VarDeclInit(_{}, _, _))> sections //global var names do not get an annotation during rename
        ; doublevarnames := <map(?VarDeclInit(<id>, _, _));find-doubles> globalvars
        ; not([] := doublevarnames)
    with <map(try(constraint-error-global-var-names(|doublevarnames)))> globalvars
    
  constraint-error-global-var-names(|doublevarnames):
    VarDeclInit(name,_,_) -> <add-error(|["Global variable with name '", namestripped, "' is defined multiple times."])> 
    where namestripped := <strip-annos> name
       ; <fetch(?namestripped)> doublevarnames
  
 