module org/webdsl/dsl/languages/data-model/desugar-property-access

strategies

  /**
   *  Add 'this.' to direct access to property, so the getter is used in the back-end.
   *  Derived properties do not become real properties of the generated entity.
   *  This strategy now converts references to both regular and derived properties to simplify back-end code generation.
   */
  desugar-in-define-context = desugar-property-access

  /**
   *  only for Var occuring inside an entity
   */
  desugar-property-access :
    SessionEntity(x_class, entbodydecs1) -> <rename> SessionEntity(x_class, entbodydecs2)
    where entbodydecs2 := <alltd(rewrite-prop-access)> entbodydecs1
        ; not(entbodydecs1 := entbodydecs2)  

  desugar-property-access :
    Entity(x_class,superclass, entbodydecs1) -> <rename> Entity(x_class,superclass, entbodydecs2)
    where entbodydecs2 := <alltd(rewrite-prop-access)> entbodydecs1
        ; not(entbodydecs1 := entbodydecs2)   
        
  desugar-property-access :
    EntityNoSuper(x_class, entbodydecs1) -> <rename> EntityNoSuper(x_class, entbodydecs2)
    where entbodydecs2 := <alltd(rewrite-prop-access)> entbodydecs1
        ; not(entbodydecs1 := entbodydecs2)  

  rewrite-prop-access :
    v@Var(x) -> FieldAccess(Var("this"),<strip-annos> x)
    where <type-of; is-property-type> v //checks that this Var is referring to a property and not to a function arg or local variable 
    
   
