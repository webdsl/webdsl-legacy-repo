module org/webdsl/dsl/languages/data-model/derived-property

strategies

  /**
   *  Add 'this.' to direct access to derived property, so the getter is used in the back-end.
   *  Derived properties do not become real properties of the generated entity.
   */
  desugar-data = desugar-derived-property-access

  desugar-derived-property-access :
    SessionEntity(x_class, props1, funcs1) -> <rename> SessionEntity(x_class, props2, funcs2)
    where (props2,funcs2) := <alltd(rewrite-derived-prop-access(|x_class))> (props1,funcs1)
        ; not(props1 := props2; funcs1 := funcs2)  

  desugar-derived-property-access :
    Entity(x_class,superclass, props1, funcs1) -> <rename> Entity(x_class,superclass, props2, funcs2)
    where (props2,funcs2) := <alltd(rewrite-derived-prop-access(|x_class))> (props1,funcs1)
        ; not(props1 := props2; funcs1 := funcs2)  
        
  desugar-derived-property-access :
    EntityNoSuper(x_class, props1, funcs1) -> <rename> EntityNoSuper(x_class, props2, funcs2)
    where (props2,funcs2) := <alltd(rewrite-derived-prop-access(|x_class))>  (props1,funcs1)
        ; not(props1 := props2; funcs1 := funcs2)

  rewrite-derived-prop-access(|x_class) :
    Var(x) -> FieldAccess(Var("this"),xsa)
    where xsa := <strip-annos> x
        ; <is-derived-property> (x_class, xsa)
    
   
