module org/webdsl/dsl/languages/ui/submit

rules

  rename-ui :
    t@ActionCall(origname, e1*){annoorig*} -> result
    with if t2@ActionCall(renamedname, e2*){anno*} := <RenameActionCall> t
         then
           parent := <fetch-elem(?DirectEnclosingDefine(<id>))> anno*
         ; result := ActionCall(renamedname, e2*){ThisCallParent(parent),anno*}
         else //the action call is being renamed, but the outer definition is not.
              // in this case RenameActionCall fails, the action is not visible, and only the expression
              // arguments are renamed
           e3* := <rename-all> e1* 
         ; result := ActionCall(origname, e3*){annoorig*}
         end

rules

  constraint-error-ui :
    tc@ActionCall(f, e2*) -> <add-error(|["Cannot find action with signature ", sig, "."])>
    where not(type-of)
        ; argtypes := <map(type-of)> e2* // don't report when sub-expression was already wrong
    with  sig := <pretty-print-call(|f,argtypes)>

  eq-type-of-ui :
    ActionCall(f,e*){anno*} -> <eq-type-of-this-call-local> ThisCall(f,e*){anno*}

rules //convert deprecated submit constructors to new style

  desugar-in-define-context :     
    Submit(e,call,passign*) -> SubmitElem(call, passign*, elem*)
    with elem* := [TemplateCall("output", [e], [], TemplateBody([]))]
       
  desugar-in-define-context :     
    SubmitLink(e,call,passign*) -> SubmitLinkElem(call, passign*, elem*)
    with elem* := [TemplateCall("output", [e], [], TemplateBody([]))]
    

    