module org/webdsl/dsl/languages/ui/built-in-template

imports
  libstrategolib
  Java-15 
  libjava-front

imports
  libwebdsl-front

strategies
  built-in-template-rule-setup = <declare-built-in-template-rules> ("label",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("group",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("group",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("groupitem",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("fieldset",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("fieldset",[]);fail
  
  built-in-template-rule-setup = <declare-built-in-template-rules> ("dummy",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("pre",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("div",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("block",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("block",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("title",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("mimetype",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("rawoutput",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("pre",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("text",[SimpleSort("Object")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("text",[SimpleSort("Object")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("spacer",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("horizontalspacer",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("image",[SimpleSort("URL")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("table",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("header",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("list",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("listitem",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("section",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("par",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("container",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("row",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("column",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("url",[SimpleSort("URL")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("form",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("captcha",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("input",[SimpleSort("Object")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("output",[SimpleSort("Object")]);fail
 
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigate",[]);fail 
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigate",[SimpleSort("URL")]);fail 
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigate",[SimpleSort("Page")]);fail 
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigate",[SimpleSort("String"),SimpleSort("URL")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigate",[SimpleSort("String"),SimpleSort("Page")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigatebutton",[SimpleSort("URL"),SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("navigatebutton",[SimpleSort("Page"),SimpleSort("String")]);fail
  
  built-in-template-rule-setup = <declare-built-in-template-rules> ("includeCSS",[SimpleSort("String")]);fail  
  built-in-template-rule-setup = <declare-built-in-template-rules> ("includeCSS",[SimpleSort("String"),SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("includeJS",[SimpleSort("String")]);fail  
  built-in-template-rule-setup = <declare-built-in-template-rules> ("includeHead",[SimpleSort("String")]);fail  
     
  declare-built-in-template-rules :
    (name,argtype*) -> (name,argtype*)
    where id;rules( //without the id; this file was causing segmentation fault when compiling with strc on my machine...
            ExactlyMatchesBuiltInTemplate :  (name,argtype*)
            CompatibleWithBuiltInTemplate :+ (name,x) -> (name,x) where <zip(type-compatible)> (argtype*,x)
          )
          
rules

  constraint-error-ui : 
    d@webdsl|[ define x(farg*)  req*  { elem* } ]| -> <add-warning(|["redefinition of built-in template: ",<pp-webdsl> d])>
    where <ExactlyMatchesBuiltInTemplate> (x,<map(\Arg(nm,srt) -> srt\)>farg*)
 
 
rules //@TODO should become part of a standard precompiled library
  
  built-in-template-rule-setup = <declare-built-in-template-rules> ("radio",[SimpleSort("Entity"),GenericSort("List",[SimpleSort("Entity")])]);fail               
  built-in-template-rule-setup = <declare-built-in-template-rules> ("radio",[SimpleSort("Entity"),GenericSort("Set",[SimpleSort("Entity")])]);fail               
 
  after-tc-declare-hook = add-builtin-radio-template; fail
  add-builtin-radio-template =
    <emit-webdsl-code> def|[
      define ignore-access-control radio(ent1:Ref<Entity>,ent2:List<Entity>){
        var rname := getUniqueTemplateId()
        for(p:Entity in ent2 order by p.name){
          if(ent1==p){
            <input type="radio" checked="checked" name=rname value=p.id all attributes/>
          }
          else{
            <input type="radio" name=rname value=p.id all attributes/>
          }
          output(p.name)
        }
        databind{
          var tmp : String:= getRequestParameter(rname);
          if(tmp != null){
            var p := loadEntity(ent1.getTypeString(),UUIDFromString(tmp));
            if(p in ent2){
              ent1 := p;
            }
          }
        }
      }
    ]|
