/**

 markdown normalization rules for WebDSL

*/

module org/webdsl/dsl/languages/ui/normalize-markdown

imports
  libstratego-lib

imports
  libwebdsl-front

rules 

  normalize-ui :
    MDListItem(p, e) -> TemplateCall("listitem",[],p2,[e])
    with  p2 := <md-props-to-props> p

  normalize-ui :
    MDListItemMulti(p, e) -> TemplateCall("listitem",[],p2,e)
    with  p2 := <md-props-to-props> p
    
  normalize-ui :
    MDSpacer(p)  -> TemplateCall("spacer",[],p2,[])
    with p2 := <md-props-to-props> p

  normalize-ui :
    MDHeader(p, e)  -> TemplateCall("header",[],p2,[e])
    with p2 := <md-props-to-props> p
    
  normalize-ui :
    MDBlock(p, e)    -> TemplateCall("block",[], p2, e)
    with p2 := <md-props-to-props> p
    
  normalize-ui :
    MDRowNoCols(p,e)  ->TemplateCall("row",[],p2,e)
    with p2 := <md-props-to-props> p
    
  normalize-ui :
    MDRow(p, cols)   -> TemplateCall("row",[],p2, e2)
    with e2 := <map(normalize-md-col)> cols
        ; p2 := <md-props-to-props> p
        
  normalize-md-col :
    MDCol(p, e)  -> TemplateCall("column",[],p2, e)
    with p2 := <md-props-to-props> p
    
  normalize-ui :
    MDNavigate(p, exp, elem)  -> TemplateCall("navigate",[exp],p2, [elem])
    with p2 := <md-props-to-props> p

//NORMALIZE TEMPLATE CALL SHORTHANDS
  
  normalize-ui :
    TemplateCall(name, args, assigns, elems) -> TemplateCall(name2, args, assigns, elems)
    where <fetch(?(name, name2))> <template-short-names>

  template-short-names = ![
    ("p", "par"), 
    ("s", "section"),
    ("h", "header"), 
    ("t","table"), 
    ("r", "row"),
    ("c", "column"),
    ("cell", "column"),
    ("b", "block"),
    ("sp", "spacer"),
    ("i", "image"),
    ("lbl", "label"),
    ("g", "group"),
    ("gi", "groupitem"),
    ("li", "listitem"),
    ("nav", "navigate"),
    ("link", "navigate"),
    ("btn", "action"),
    ("button", "action"),
    ("out", "output")
  ]

  built-in-template-rule-setup = <declare-built-in-template-rules> ("p",[]);fail  
  built-in-template-rule-setup = <declare-built-in-template-rules> ("s",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("h",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("t",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("r",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("c",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("cell",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("b",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("sp",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("i",[SimpleSort("URL")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("lbl",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("g",[SimpleSort("String")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("g",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("gi",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("li",[]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("nav",[SimpleSort("Page")]);fail 
  built-in-template-rule-setup = <declare-built-in-template-rules> ("link",[SimpleSort("Page")]);fail 
  built-in-template-rule-setup = <declare-built-in-template-rules> ("btn",[SimpleSort("String"),SimpleSort("Void")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("button",[SimpleSort("String"),SimpleSort("Void")]);fail
  built-in-template-rule-setup = <declare-built-in-template-rules> ("out",[SimpleSort("Object")]);fail

//NORMALIZE PROPERTIES

  md-props-to-props :
    None()  -> []
    
  md-props-to-props :
    Some(MDProps(p))  -> p
