module org/webdsl/dsl/languages/styling/transformation/emit

imports
  libstrategolib

strategies

  emit-style-section =
    ?sec@StyleSection(_,_)
    ; rules(
        AddStyleSection :+ Application(qid, sections) -> Application(qid, [sec|sections])
      )
  
  add-style-emits = once-AddStyleSection

  emit-style-definitions =
    map(emit-style-definition)

  emit-style-definition =
    ?def@StyleDefinition(_,_)
    ; where ( x := <ThisPage> )
    ; rules(
        AddStyleDef :+ StyleSection(nm, defs) -> StyleSection(nm, [def|defs]) where <?x> nm
      )
  
  add-style-emits = once-AddStyleDef

  emit-style-declarations =
    map(emit-style-declaration)

/*
  emit-style-declaration =
    ?stat@StyleDeclaration(_,_)
    ; where (
        x := <ThisPage> 
        ; f* := <ThisArgumentTypes>
        ; not(ThisSelector)
      )
    ; rules(
        AddStyleDecl :+ StyleDefinition(Selector(SimpleSelector(checktype, MatchDefinition(nm, farg*)), s*), stats) ->
                            StyleDefinition(Selector(SimpleSelector(checktype, MatchDefinition(nm, farg*)), s*), [stat|stats])
                          where <?x> nm ; <?f*> <map(?Arg(_,<id>))> farg*
      )
*/  

  // @todo: emitted definitions may end up in a different style section!
  emit-style-declaration =
    ?stat@StyleDeclaration(_,_)
    ; where (
        selector := <ThisSelector> 
      )
    ; rules(
        AddStyleDecl :+ StyleDefinition(s, stats) -> StyleDefinition(s, [stat|stats]) where <?selector> s
      )
      
      //; if <oncetd(?"topmenu")> s then <debug> ["==emit: ", stat] end
      
  add-style-emits = once-AddStyleDecl
