module org/webdsl/dsl/languages/action/typechecker/object-creation

imports
  libstrategolib
  Java-15 
  libjava-front

imports
  libwebdsl-front

rules

  constraint-error-action :
    oc@ObjectCreation(s@GenericSort(_,_),[propassign*]) -> 
    <add-error(|["Object creation syntax is not allowed for generic types, use Set<type>() or List<type>() instead."])>
    
rules

  constraint-error-action :
    oc@ObjectCreation(s@SimpleSort(x_class),[propassign*]) -> <add-error(|["Cannot instantiate built-in type '",x_class,"'"])>
    where <is-builtin-type> s
       
rules

  constraint-error-action :
    oc@ObjectCreation(SimpleSort(x_class),[propassign*]) -> oc //<add-error(|["Error in object creation of class '",x_class,"'"])> 
    where <fetch(check-object-creation-property-assignment-1(|x_class))> propassign*
       <+ <fetch(check-object-creation-property-assignment-2(|x_class))> propassign*

  check-object-creation-property-assignment-1(|x_class) :
    ObjectPropertyAssignment(ident,exp) -> <add-error(|["Entity '",x_class,"' does not contain a property '",ident,"'"])> 
    where not(<type-of-property> (x_class,ident))

  check-object-creation-property-assignment-2(|x_class) :
    ObjectPropertyAssignment(ident,exp) -> <add-error(|["Type of expression '",srt_exp,"' is incompatible with type of entity property '",srt_prop,"'"])> 
    where srt_prop := <type-of-property> (x_class,ident)
        ; srt_exp := <type-of> exp
        ; not(<type-compatible> (srt_prop,srt_exp))

rules        

  eq-type-of-action :
    ObjectPropertyAssignment(y, e) -> SimpleSort("Void") //<type-of> y
    
  eq-type-of-action :
    ObjectCreation(s, assign*) -> s

rules

  constraint-error-action:
    Stat(ObjectCreation(_,_)) -> <add-error(|["Not a valid statement."])> 
    
rules

  add-backend-annotation:
    ObjectCreation(srt@SimpleSort(x_class), [propassign*]) -> ObjectCreation(srt, [typedprop*])
      where(<not(PropertyAssignsAnnotated)> propassign*)
      with typedprop* := <map(add-propassign-type(|x_class))> propassign*
         ; rules (PropertyAssignsAnnotated : typedprop*)
  
  add-propassign-type(|x_class):
    ObjectPropertyAssignment(ident, expr) -> ObjectPropertyAssignment(ident2, expr)
      with type := <type-of-property> (x_class, ident)
         ; ident2 := <add-anno(|TypeAnno(type))> ident
    