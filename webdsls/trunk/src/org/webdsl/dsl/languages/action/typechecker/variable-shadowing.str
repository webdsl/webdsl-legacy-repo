module org/webdsl/dsl/languages/action/typechecker/variable-shadowing

imports
  libstrategolib
  libwebdsl-front
  org/webdsl/dsl/typechecker/-

rules

  vardecl-shadowing-error-message :
    x -> ["Variable name '",x,"' is already defined in this context."]

  constraint-error-action : VarDecl(x{}, _) -> <add-error(|<vardecl-shadowing-error-message> x)>
  constraint-error-action : TemplateVarDecl(x{}, _) -> <add-error(|<vardecl-shadowing-error-message> x)>
  constraint-error-action : VarDeclInit(x{}, _, _) -> <add-error(|<vardecl-shadowing-error-message> x)>
  constraint-error-action : TemplateVarDeclInit(x{}, _, _) -> <add-error(|<vardecl-shadowing-error-message> x)>
  constraint-error-action : VarDeclInitInferred(x{}, _)-> <add-error(|<vardecl-shadowing-error-message> x)>
  constraint-error-action : TemplateVarDeclInitInferred(x{}, _) -> <add-error(|<vardecl-shadowing-error-message> x)>

rules

  farg-shadowing-error-message :
    x -> ["Formal argument name '",x,"' is already defined in this context."]

  constraint-error-action :
  	Arg(x{anno*}, _) -> <add-error(|<farg-shadowing-error-message> x)>
  	where <not(fetch(is-string))> anno* // can have other annotations like IsTemplateArg()

rules

  for-loop-shadowing-error-message :
    x -> ["For loop variable name '",x,"' is already defined in this context."]

  constraint-error-action : For(x{}, _, _, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>
  constraint-error-action : ForInferred(x{}, _, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>
  constraint-error-action : ForAll(x{}, _, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>
  constraint-error-action : ForCount(x{}, _, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>

  constraint-error-action : ForStmt(x{}, _, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>
  constraint-error-action : ForStmtInferred(x{}, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>
  constraint-error-action : ForAllStmt(x{}, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>
  constraint-error-action : ForCountStmt(x{}, _, _, _) -> <add-error(|<for-loop-shadowing-error-message> x)>

rules

  list-compr-shadowing-error-message :
    x -> ["List comprehension variable name '",x,"' is already defined in this context."]

  constraint-error-action : ForExp(_, x{}, _, _, _) -> <add-error(|<list-compr-shadowing-error-message> x)>

rules

  placeholder-shadowing-error-message :
    x -> ["Placeholder name '",x,"' is already defined in this context."]

  constraint-error-action :
  	Placeholder(Add(String(""),Var(_)), _){anno*} -> <add-error(|<placeholder-shadowing-error-message> x)>
  	where <fetch(?DeclaredPlaceholderName(x{}))> anno*

  constraint-error-action :
  	PlaceholderWithAjaxCall(Add(String(""),Var(_)), _){anno*} -> <add-error(|<placeholder-shadowing-error-message> x)>
  	where <fetch(?DeclaredPlaceholderName(x{}))> anno*
