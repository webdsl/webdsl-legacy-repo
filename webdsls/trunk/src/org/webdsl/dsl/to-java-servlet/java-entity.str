 /**

   Generate a JPA/Hibernate entity class from an entity declaration

 */

 module org/webdsl/dsl/to-java-servlet/java-entity

 imports
   libstrategolib
   libjava-front

 imports
   libwebdsl-front

strategies

   GenerateCodeJavaServlet = entity-to-java-entity; fail // use same entity generation as Seam back-end

strategies

   GenerateCodeJavaServlet = entity-to-java-servlet-entity-imports; fail
   
   entity-to-java-servlet-entity-imports: ent -> ent
     where(get-entity-def)
     with x_Class := <entity-to-classname>
      ; pkgname := <DomainPackage>
       ; <emit-java-code-local> compilation-unit|[
         package pkgname;
         
         import java.util.*;
         import javax.persistence.*;
         import pkgname.*;
         import java.io.Serializable;
         import utils.*;
         import java.io.PrintWriter;
         
         import org.webdsl.lang.Environment;
         
         @Partial
         @SuppressWarnings("all")
         public class x_Class
         {
   
         }
       ]|
     
strategies

   GenerateCodeJavaServlet = entity-to-java-servlet-entity-functions; fail
   
   entity-to-java-servlet-entity-functions: ent -> ent
     where (_,entbodydecs) := <get-entity-def> ent
     with
       x_Class := <entity-to-classname> ent
     ; pkgname := <DomainPackage>
    ; funcs := <filter(?Function(_,_,_,_) 
                <+ \StaticEntityFunction(n1,a1,ReturnType(r1),b1){anno*} -> Function(<concat-strings>["$static$",n1],a1,r1,b1){StaticFunctionAnno(),anno*} \ )> entbodydecs
    ; cbds* := <grab-uniquely-named-functions;map(webdsl-entity-function-to-java-servlet <+ debug(!"Could not generate for entity function: "))> funcs
    ; <emit-java-code-local> compilation-unit|[
       package pkgname;
       
       @Partial
       public class x_Class
       {
         ~*cbds*
       }
     ]|

   webdsl-entity-function-to-java-servlet =
         where(
             get-anno(?StaticFunctionAnno())
           ;	mod* := [ mod |[ static ]| ]
         )
       ; webdsl-function-to-java-servlet-function(|mod*)
     <+
         webdsl-function-to-java-servlet-function
   
  grab-uniquely-named-functions : // TODO shouldn't be necessary...
    funcs -> funcs2
    with  {| FuncNameUsed, ResultingFunctions:
            filter(grab-uniquely-named-functions-helper)
          ; funcs2 := <bagof-ResultingFunctions>
          |}
     
  grab-uniquely-named-functions-helper :
    fu@Function(name,_,_,_){anno*} -> fu
    where not(<FuncNameUsed> name)
        ; rules ( FuncNameUsed : name
                  ResultingFunctions :+= fu )
    
rules // utilities

  entity-to-classname =
        ?EntityNoSuper(<id>, _)
    <+ ?Entity(<id>, _, _)
    <+ ?SessionEntity(<capitalize-string>, _)
     