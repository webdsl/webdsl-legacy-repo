module org/webdsl/dsl/to-java-servlet/template-render

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  GenerateCodeJavaServlet = render-java-servlet-template; fail
  
  render-java-servlet-template =
    ?def |[ define mod* x(farg*) { elem* } ]|
    ; where (    
      bstm1* := <filter-elements-for-java-servlet-handling
                 ; elems-to-java-servlet> elem*
      ; not(bstm1* := [])
      )
    ; with (
        <generate-java-servlet-template-partial> 
        java |[ 
            @Partial
            private void renderInternal()
            {
              out.println("<div id=\""+"~x"+"\">");
              String ident = "";
              int forelementcounter = 0;
              boolean inForLoop=false;
              int forLoopCounter = 0;
              
              boolean inSubmittedForm = false; //this one is just for render, to know if entered input needs to be repeated
              
              bstm1*  
              out.println("</div>");                      
            }
        ]|
      )
 
//coming from elements to xhtml
strategies // lists of elements

  elems-to-java-servlet = //filter because other non-visible stuff is in there like vardecl
    filter(elem-to-java-servlet <+ undefined-template-call)
    ; concat-with-sublists //accept both bstm and bstm*
    
  undefined-template-call :
    t@TemplateCall(f, args, body) -> []
    where log(|Warning(), ["no definition for template ", t])
