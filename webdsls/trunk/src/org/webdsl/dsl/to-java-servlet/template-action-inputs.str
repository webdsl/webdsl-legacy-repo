module org/webdsl/dsl/to-java-servlet/template-action-inputs

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front
  
rules
  filter-elements-for-java-servlet-handling =
    topdown(try(remove-all(?Define(_, _, _, _))))

rules

  GenerateCodeJavaServlet = where(not(ThisEmail));actions-inputs-java-servlet-template; fail
  
  actions-inputs-java-servlet-template =
    ?def |[ define mod* x(farg*) { elem* } ]|
    ; where (    
      bstm1* := <  filter-elements-for-java-servlet-handling
                 ; map-handle-actions-input-to-java-servlet> elem*
      ; not(bstm1* := []))
    ; with(
      <generate-java-servlet-template-partial> 
        java |[ 
            @Partial
            private void storeInputsInternal() {
              String ident = "";
              int forelementcounter = 0;
              boolean inForLoop=false;
              int forLoopCounter = 0;
                
              bstm1*          
            }
        ]|)
 
//coming from elements to xhtml
strategies // lists of elements

  map-handle-actions-input-to-java-servlet= //alltd because only interested in control flow
    collect-om(handle-actions-input-to-java-servlet)
    ; concat-with-sublists //accept both bstm and bstm*
    
rules // copy from input string to variable in template class, eg see /types/int.str
  
  input-assignment-to-java-servlet(|x_temp) :
    Var(x) -> bstm* |[ 
      ps.getOldValuesForInputs().put(x_temp,x);//System.out.println(x_temp+" 1-> "+x);
      x = x_temp; 
    ]|     

  input-assignment-to-java-servlet-exp:
    Var(x) -> e |[ x ]|

  input-assignment-to-java-servlet(|x_temp) :
    FieldAccess(e, x) -> bstm* |[ 
      ps.getOldValuesForInputs().put(x_temp,e1.get#x());//System.out.println(x_temp+" 2-> "+e1.get#x());
      e1.setupForPropertyEvents(hibSession,out,ps).set#x(x_temp); 
    ]|
    where e1 := <input-assignment-to-java-servlet-exp> e
          
  input-assignment-to-java-servlet-exp :
    FieldAccess(e, x) -> e |[ e1.get#x() ]|
    where e1 := <input-assignment-to-java-servlet-exp> e
    
rules

  catch-validation-exception-wrap-code:
    bstm* ->
    bstm* |[
      try {
        bstm*
      }
      catch(utils.ValidationException ve){
        ps.getValidationExceptions().add(ve);
        ps.setValidated(false);                
      }
    ]|