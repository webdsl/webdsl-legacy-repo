module org/webdsl/dsl/to-java-servlet/ajax/html-utils

imports
  libstrategolib
  libjava-front

rules

  //rewrites a list of assignments to a list of attributes. It can be extended by adding alternatives
  //to the assignment-to-html-attr rules. Those rules are of the format PropertyAssignment(x, y) ->(Id, Java-Expression-Resulting-In-String)
  //author: Michel
  to-html-attrs :
    attrs -> attrs3
    with attrs1 := <map(assignment-to-html-attr 
                      <+ string-assignment-to-html-attr
                      <+ expression-assignment-to-html-attr
                      <+ debug(!"Cannot convert propertyassignment: "); <exit> 1)> attrs
        ;attrs2 := <filter(assignmentexp-to-html-attr)> attrs1
        ;attrs3 := <generate-addition-exp > attrs2        

  /*
  to-html-attrs =
    map(assignment-to-html-attr 
                  <+ string-assignment-to-html-attr 
                  <+ debug(!"Cannot convert propertyassignment: "); <exit> 1)
    ; map(assignmentexp-to-html-attr)
    ; generate-addition-exp
    */
    
  //final (private) conversion: converts a String assignment to html    
  assignmentexp-to-html-attr :
    (x, e_y) -> e |[ "~x"+"='" + e_y + "' " ]|
    
  //escape behaviour, when assignments cannot be converted with a useful strategy, test if its
  //a string and insert directly
  string-assignment-to-html-attr:
    PropertyAssignment(x, String(y)) -> (x, e|[ "~y"]|)  
    
  //object id attribute is accepted, and already a valid assignment
  assignment-to-html-attr :
    PropertyAssignment("id", y) -> ("id", e|[ "~y" ]| )

  assignment-to-html-attr :
    PropertyAssignment("height", StyleValue(val, unit)) -> ("height", e|[ "~val"+"~unit" ]| )

  assignment-to-html-attr :
    PropertyAssignment("width", StyleValue(val, unit)) -> ("width", e|[ "~val"+"~unit" ]| )

    
  assignment-to-html-attr :
    PropertyAssignment("class", y) -> ("class", e|[ "~y" ]| )
    where not (PropertyValueList(_) := y)
    
  assignment-to-html-attr :
    //concatenates a list of id's to a class attribute
    PropertyAssignment("class", y) -> ("class", e|[ e1 ]| )
    where PropertyValueList(x) := y
    with  e1 := <map(\q -> e|[ "~q" + " "]|\); generate-addition-exp> x
    
  expression-assignment-to-html-attr :
    PropertyAssignment(x, e) -> (x, e1)
    with  e1 := <expression-to-java-servlet> e
