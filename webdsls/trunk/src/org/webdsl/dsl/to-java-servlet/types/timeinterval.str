module org/webdsl/dsl/to-java-servlet/types/timeinterval

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
  
rules // java type

  builtin-java-type :
    SimpleSort("TimeInterval") -> type|[ Long ]|
    
rules // Int literal

   expression-to-java-servlet :
     TimeInterval(ti*) -> val
     with val := <map(ti-to-ms); foldr(!expr|[ 0 ]|, \ (e1, e2) -> expr|[ e1 + e2 ]| \)> ti*

   ti-to-ms :
     Milliseconds(e) -> <expression-to-java-servlet> e

   ti-to-ms :
     Seconds(e1) -> expr|[ 1000 * e2 ]|
     with e2 := <expression-to-java-servlet> e1

   ti-to-ms :
     Minutes(e1) -> expr|[ 60 * 1000 * e2 ]|
     with e2 := <expression-to-java-servlet> e1

   ti-to-ms :
     Hours(e1) -> expr|[ 60 * 60 * 1000 * e2 ]|
     with e2 := <expression-to-java-servlet> e1

   ti-to-ms :
     Days(e1) -> expr|[ 24 * 60 * 60 * 1000 * e2 ]|
     with e2 := <expression-to-java-servlet> e1

   ti-to-ms :
     Weeks(e1) -> expr|[ 7 * 24 * 60 * 60 * 1000 * e2 ]|
     with e2 := <expression-to-java-servlet> e1
  
rules //
   invoke-every-to-init :
    InvokeEvery(e, ti) -> bstm*|[
      java.util.TimerTask x1 = new java.util.TimerTask() {
          public void run() {
              e1;
          }
      };
      timer.scheduleAtFixedRate(x1, 0, e2);
    ]|
    with x1 := <newname> "timer"
       ; e1 := <expression-to-java-servlet> e
       ; e2 := <expression-to-java-servlet> ti
