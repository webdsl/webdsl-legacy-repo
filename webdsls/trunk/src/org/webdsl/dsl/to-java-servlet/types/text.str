module org/webdsl/dsl/to-java-servlet/types/text

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
  
rules
  elem-to-java-servlet :
    elem|[ inputText(e){} ]| ->
    java |[ out.println("todo: inputtext"); ]|
    /*
    %>
      <s:decorate>
        <h:inputTextarea styleClass="inputTextarea" value="<%= estring %>" required="<%= req %>"/>
      </s:decorate>
    <%
    with estring := <arg-to-value-string> e
        ; req := <input-of-required-property(|e)>
    */
  elem-to-java-servlet :
    elem|[ outputText(e){} ]| ->
    java |[ out.println(utils.HTMLFilter.filter(e1)); ]|
    with  e1 := <arg-to-value-string-java-servlet> e
    /*
    %>
      <s:formattedText styleClass="outputTextarea" value="<%= estring %>"/>
    <%
    with estring := <arg-to-value-string> e
    */
/*
rules // types
  sort-to-java-type-string : SimpleSort("Text") -> "java.lang.String"

  builtin-java-type :
    SimpleSort("Text") -> type|[ String ]|

  builtin-java-type-default-value :
    SimpleSort("Text") -> java|[ ""  ]|

  builtin-persistence-annotations :
    SimpleSort("Text") -> [anno|[ @Column(length = 1000000) ]|]

  type-compatible =
    ?(SimpleSort("Text"), SimpleSort("String"))

rules // desugar
  DeriveInput :
    elem|[ input(e){} ]| -> elem|[ inputText(e){} ]|
    where SimpleSort("Text") := <type-of> e

  DeriveOutput :
    elem|[ output(e){} ]| -> elem|[ outputText(e){} ]|
    where SimpleSort("Text") := <type-of> e
*/
        
