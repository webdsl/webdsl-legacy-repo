module org/webdsl/dsl/to-java-servlet/types/image

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front

rules // types
  sort-to-java-type-string : SimpleSort("Image") -> "utils.File"

  builtin-java-type :
    SimpleSort("Image") -> type|[ utils.File ]|

  builtin-java-type-default-value :
    SimpleSort("Image") -> java|[ null ]|

  type-default-value :
    SimpleSort("Image") -> exp|[ null ]|

  //used in entity generation
  //hibernate has a built-in mapping for java.sql.Blob
  type-specific-annotations :
    Property(x_prop, k, s, annos) -> <file-specific-annotations>
    where <?SimpleSort("Image")> s

rules

  requires-multipart-encoded-form = ?elem|[inputImage(e)[passign*]{}]|
  
  handle-actions-input-to-java-servlet :
    tc@elem|[ inputImage(e)[passign*]{} ]| -> <handle-actions-input-to-java-servlet> TemplateCall("inputFile", [e], passign*, []){anno*} //stratego bug: cannot add annotations with concrete syntax
    where _{anno*} := tc
   
  elem-to-java-servlet :
    tc@elem|[ inputImage(e)[passign*]{} ]| -> <elem-to-java-servlet> TemplateCall("inputFile", [e], passign*, []){anno*} //stratego bug: cannot add annotations with concrete syntax
    where _{anno*} := tc
    
  java-servlet-element-id : 
    tc@elem|[ inputImage(e)[passign*]{} ]| -> <java-servlet-element-id-template-call> tc
     
   //outputFile is already desugared, see modules/types/file.str

rules //image download   
    
  file-download-call-to-java-servlet :
    exp|[ e.download() ]| -> java|[ ps.setDownload(e2) ]|
    where SimpleSort("Image") := <type-of> e
    with  e2 := <expression-to-java-servlet> e