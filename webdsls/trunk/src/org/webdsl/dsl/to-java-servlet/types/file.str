module org/webdsl/dsl/to-java-servlet/types/file

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  
imports 
  libwebdsl-front

rules  

  sort-to-java-type-string : SimpleSort("File") -> "utils.File"
  
  builtin-java-type :
    SimpleSort("File") -> type|[ utils.File ]|

  builtin-java-type-default-value :
    SimpleSort("File") -> java|[ null ]|

  type-default-value :
    SimpleSort("File") -> exp|[ null ]|

  //used in entity generation
  //hibernate has a built-in mapping for java.sql.Blob
  type-specific-annotations :
    Property(x_prop, k, s, annos) -> <file-specific-annotations>
    where <?SimpleSort("File")> s
    
  file-specific-annotations =
    ![ anno |[ @OneToOne(fetch = javax.persistence.FetchType.LAZY) ]|
     , anno |[ @org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.PERSIST, org.hibernate.annotations.CascadeType.SAVE_UPDATE, org.hibernate.annotations.CascadeType.MERGE}) ]|
     ]
 
rules
  
  java-servlet-element-id : 
    tc@elem|[ inputFile(e)[passign*]{} ]| -> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
        ; newid := <newname> "input"

  requires-multipart-encoded-form = ?elem|[inputFile(e)[passign*]{}]|
  
  handle-actions-input-to-java-servlet :
    tc@elem|[ inputFile(e)[passign*]{} ]| ->
    <for-loop-counter-wrap-code> 
    bstm*|[
      ident += "~inputident"+uniqueid;
      if (ps.getFileUploads().get(ident)!=null && !ps.getFileUploads().get(ident).getFileName().equals("")) {
         utils.File x_temp = ps.getFileUploads().get(ident);
         bstm 
      }
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; bstm := <input-assignment-to-java-servlet(|x_temp)> e
    
  elem-to-java-servlet : 
    tc@elem|[ inputFile(e)[passign*]{} ]| ->
    <for-loop-counter-wrap-code>
    bstm* |[ 
      String x_temp = ident+"~inputident"+uniqueid;
      out.print("<input name=\""+x_temp+"\" "+e_attrs1+" type=\"file\" />"); 
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; e_attrs1 := <to-html-attrs> passign*
        
  //outputFile is already desugared, see modules/types/file.str
 
  //for downloading files, a modified action call is used
   
  java-servlet-element-id : 
    tc@elem|[ downloadLink(e,e1)[passign*]{} ]| -> <java-servlet-element-id-template-call> tc
     
   elem-to-java-servlet :
    tc@TemplateCall("downloadLink",[e2,e3@ThisCall(name, args)],passign*,[]) ->
    <for-loop-counter-wrap-code> 
    bstm* |[ 
    ident += "~actionident"+uniqueid+e5;
    out.print("<a href=\"javascript:void()\" "+e_attrs1+" onclick='javascript:serverInvokeDownloadCompatible(\""+"~app"+"/" + ps.getPageName()  +"\",\""+ ident+"\", \""+ps.getHiddenPostParams()+"\",\""+form_ident+"\", this)' >");
    out.print(e4+"</a>");
    ]|
    with  e4 := <arg-to-value-string-java-servlet> e2
        ; actionident := <get-inputnumber> tc   
        ; e_attrs1 := <to-html-attrs> passign*        
        ; e5 := <actual-action-args-to-state-enc> args
        ; app := <AppRoot>
        
  handle-actions-to-java-servlet: 
    tc@TemplateCall("downloadLink",[e2,e1],passign*,[]) ->
    <for-loop-counter-wrap-code> 
    bstm*|[
        ident += "~actionident"+uniqueid+e5;
        if(ps.getParammap().get(ident)!=null ) // not necessary: && ps.getParammap().get(ident).equals("1") )
        {
            x_class temp = (x_class)actionclasses.get("~x_class");
            temp.x_action(e*);
        }
    ]|
    with  actionident := <get-inputnumber> tc   
        ; x_action := <?ThisCall(name,args);!name> e1
        ; e* := <map(expression-to-java-servlet)> args
        ; _{x_class} := x_action
        ; e5 := <actual-action-args-to-state-enc> args   
    
rules //file download   
    
  call-to-java-servlet :
    exp  |[ e.download() ]| -> java |[ ps.setDownload(e2) ]|
    where SimpleSort("File") := <type-of> e
    with  e2 := <expression-to-java-servlet> e
      
  call-to-java-servlet :
    exp  |[ e.fileName() ]| -> java |[ e2.getFileName() ]|
    where SimpleSort("File") := <type-of> e
    with  e2 := <expression-to-java-servlet> e