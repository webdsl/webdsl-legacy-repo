module org/webdsl/dsl/to-java-servlet/types/string

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
/*
rules
  sort-to-java-type-string : SimpleSort("String") -> "java.lang.String"
  
  builtin-java-type :
    SimpleSort("String") -> type|[ String ]|

  builtin-java-type-default-value :
    SimpleSort("String") -> java|[ "" ]|

  type-default-value :
    SimpleSort("String") -> exp|[ "" ]|
  
  eq-type-of :
    String(x) -> SimpleSort("String")

  check-builtin-signature :
    (_, "toString", []) -> SimpleSort("String")
*/
rules
   expression-to-java-servlet :
     String(x) -> expr|[ "~x" ]|
/*

rules // page parameters 

  arg-to-java-exp :
    String(x) -> expr|[ "~x" ]|
*/
rules 
  java-servlet-element-id : 
    tc@elem|[ inputString(e)[]{} ]| -> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"

  handle-actions-input-to-java-servlet :
    tc@elem|[ inputString(e)[]{} ]| ->
    <for-loop-counter-wrap-code> 
    bstm*|[
          
        ident += "~inputident"+uniqueid;
        
        if(ps.getRequest().getParameter(ident)!=null)
        {
            String x_temp = ps.getRequest().getParameter(ident);
            bstm 
        }
      
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; bstm := <input-assignment-to-java-servlet(|x_temp)> e
    
  elem-to-java-servlet : 
    tc@elem|[ inputString(e)[]{} ]| ->
    <for-loop-counter-wrap-code>
    bstm* |[ 
    String x_temp = ident+"~inputident"+uniqueid;
    out.print("<input name=\""+x_temp+"\"  type=\"text\" value=\"");
    if(inSubmittedForm)
    {
      out.print(ps.getRequest().getParameter(x_temp));
    }
    else
    {
      out.print(e1);
    }
    out.println("\" />"); 
    ]|
    with  inputident := <get-inputnumber> tc
        ; e1 := <arg-to-value-string-java-servlet> e
        ; x_temp := <newname> "temp"
    
  elem-to-java-servlet :
    elem |[ outputString(e)[]{} ]| ->
    java |[ out.println(utils.HTMLFilter.filter(e1)); ]|
    with  e1 := <arg-to-value-string-java-servlet> e

/*
rules // Desugar

  DeriveInput :
    elem|[ input(e){} ]| -> elem|[ inputString(e){} ]|
    where SimpleSort("String") := <type-of> e

  DeriveOutput :
    elem|[ output(e){} ]| -> elem|[ text(e){} ]|
    where SimpleSort("String") := <type-of> e

*/