module org/webdsl/dsl/to-java-servlet/types/secret

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
  
rules

  builtin-java-type :
    SimpleSort("Secret") -> type|[ String ]|
  
rules
  java-servlet-element-id : 
    tc@elem|[ inputSecret(e)[passign*]{elem*} ]|-> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"

  handle-actions-input-to-java-servlet :
    tc@elem|[ inputSecret(e)[passign*]{elem*} ]| ->
    <for-loop-counter-wrap-code> 
    <catch-validation-exception-wrap-code(|passign*)> 
    bstm*|[
      ident += "~inputident"+uniqueid;
      if(ps.getParammap().get(ident)!=null)
      {
        ~*<wrap-validation-context-code-store-inputs> bstm*|[
          ~*<string-length-check-java-servlet(|x_temp,e)>
          bstm* 
        ]|
      }
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; bstm* := <input-assignment-to-java-servlet(|x_temp)> e
    
  elem-to-java-servlet : 
    tc@elem|[ inputSecret(e)[passign*]{elem*} ]| ->
    <wrap-input-render-java-code>
    bstm* |[ 
      String x_temp = ident+"~inputident"+uniqueid;
      ~*<render-error-messages-with-error-template(|java:expr|[ x_temp ]|,<ErrorTemplateInput>)> bstm*|[
        out.print("<input name=\""+x_temp+"\"  type=\"password\""+e_attrs1);
        ~*<connect-with-enclosing-label>
        out.print(" value=\"");
        if(inSubmittedForm)
        {
          out.print(utils.HTMLFilter.filter(ps.getParammap().get(x_temp)));
        }
        else
        {
          bstm_exptostring*
        }
        out.print("\" />"); 
      ]|
    ]|
    with  inputident := <get-inputnumber> tc
        ; bstm_exptostring* := <to-page-string-java-servlet> e
        ; x_temp := <newname> "temp"
        ; e_attrs1 := <to-html-attrs(|"inputSecret")> passign*
        
  elem-to-java-servlet :
    elem |[ outputSecret(e)[passign*]{} ]| ->
    <wrap-common-context-code>
    bstm* |[ out.print("********"); ]|

rules // java

   call-to-java-servlet :
     exp |[ e1.digest() ]| ->
     java|[ org.webdsl.tools.Utils.secretDigest(e2) ]|
     with  e2 := <expression-to-java-servlet> e1

   call-to-java-servlet :
     exp|[ e1.check(e2) ]| ->
     java|[ org.webdsl.tools.Utils.secretCheck(e3,e4) ]|
     with e3 := <expression-to-java-servlet> e1
        ; e4 := <expression-to-java-servlet> e2
