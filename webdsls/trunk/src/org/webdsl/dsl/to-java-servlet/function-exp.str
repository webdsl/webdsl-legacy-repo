module org/webdsl/dsl/to-java-servlet/function-exp

rules

  builtin-java-type : FunctionSort(_,_) -> type|[ org.webdsl.lang.Function ]|
  
rules
  
  expression-to-java-servlet :
    FunctionRefCallPartial(FunctionRef(x,farg*,srt),extraArgs) ->
    java:expr |[ new org.webdsl.lang.Function(new webdsl.generated.functions.x_classname()).partial(new Object[]{e*}) ]|
    with x_classname := <concat-strings> [x,"_"]
    with e* := <map(expression-to-java-servlet)> extraArgs
    
  expression-to-java-servlet :
    FunctionRefCall(FunctionRef(x,farg*,srt),args) ->
    java:expr |[ new org.webdsl.lang.Function(new webdsl.generated.functions.x_classname()).apply(new Object[]{e*}) ]|
    with x_classname := <concat-strings> [x,"_"]
    with e* := <map(expression-to-java-servlet)> args 
    
  call-to-java-servlet :
    ThisCall(f, e1*) -> java:expr |[ (x_type)e.apply(new Object[]{e2*}) ]| 
    where FunctionSort(args,srt) := <get-type-anno> f
    with  e := <expression-to-java-servlet> Var(f)
    with  e2* := <map(expression-to-java-servlet)> e1*
    with  x_type := <java-type-name> srt
    