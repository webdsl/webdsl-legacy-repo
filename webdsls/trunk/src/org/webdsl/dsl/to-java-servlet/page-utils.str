module org/webdsl/dsl/to-java-servlet/page-utils

imports
  libstratego-lib
  libjava-front
  libwebdsl-front

rules // embedding expressions in presentation

  /**
   * Converts an arbitrary WebDSL expression into java statements
   * that produce a string for displaying it on a page.
   *
   * Mainly used to prevent null-pointer exceptions breaking the entire page and applying a filter for HTML related characters.
   */
  to-page-string-java-servlet :
    e -> java:expr|[ utils.RenderUtils.printPageString(e1, out, threadLocalPageCached.isRawoutput()) ]|
    with  e1 := <expression-to-java-servlet> e

  to-page-string-java-servlet-no-filter :
    e -> java:expr|[ utils.RenderUtils.printPageString(e1, out, true) ]|
    with  e1 := <expression-to-java-servlet> e
    
rules

  hide-bstms-on-null-pointer-exception :
    bstm* -> 
    bstm* |[
      java.io.StringWriter x_sw = new java.io.StringWriter();
      out = new java.io.PrintWriter(x_sw); 
      ThreadLocalOut.push(out);
      boolean x_su = false;
      try {
        bstm*
        x_su = true;
      }
      catch(NullPointerException npe) {
        //utils.Warning.warn("Null reference caused template element to be hidden: "+"~ppterm");
        utils.Warning.warn("null reference prevented rendering of template element");
      }
      catch(IndexOutOfBoundsException ine){
        utils.Warning.warn("index out of bounds prevented rendering of template element");
      }
      ThreadLocalOut.popChecked(out);
      out = ThreadLocalOut.peek();
      if(x_su){
        out.print(x_sw.toString());
      }
    ]|
    with x_sw := <newname> "sw"
       ; x_su := <newname> "succeeded"
       //; ppterm := <pp-webdsl-to-string; escape-chars(Escape-double-quote<+Escape-backslash)> term
       