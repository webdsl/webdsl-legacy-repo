module org/webdsl/dsl/to-java-servlet/page-utils

imports
  libstratego-lib
  libjava-front
  libwebdsl-front

rules // embedding expressions in presentation

  /**
   * Converts an arbitrary WebDSL expression into java statements
   * that produce a string for displaying it on a page.
   *
   * Mainly used to prevent null-pointer exceptions breaking the entire page and applying a filter for HTML related characters.
   */
  to-page-string-java-servlet =
    to-page-string-java-servlet(|"utils.HTMLFilter.filter")

  to-page-string-java-servlet(|x_filter) =
    to-page-string-java-servlet(|x_filter,"none","none","none")
    
  to-page-string-java-servlet(|x_filter, e_filter1arg, x_filter2, e_filter2arg) :
    e -> 
    bstm* |[
      String x_tmpstring;
      try {
        if(org.webdsl.tools.Utils.isNullAutoBox(e1)){
          x_tmpstring = "";
        }
        else{
          x_tmpstring = e3;
        }
      }
      catch(NullPointerException npe) {
        x_tmpstring = "";
      }
      catch(IndexOutOfBoundsException ine){
        x_tmpstring = "";
      }
      out.print(x_tmpstring);
    ]|
    with e1 := <expression-to-java-servlet> e
       ; x_tmpstring := <newname> "tmpstring"
       ; if x_filter := "none"
         then e2 := expr |[ String.valueOf(e1) ]|
         else
           if e_filter1arg := "none" 
           then e2 := expr |[ ThreadLocalPage.get().isRawoutput() ? String.valueOf(e1) : x_filter(String.valueOf(e1)) ]| 
           else e2 := expr |[ ThreadLocalPage.get().isRawoutput() ? String.valueOf(e1) : x_filter(String.valueOf(e1),e_filter1arg) ]|
           end
         end
       ; if x_filter2 := "none"
         then e3 := expr |[ String.valueOf(e2) ]|
         else
           if e_filter2arg := "none" 
           then e3 := expr |[ ThreadLocalPage.get().isRawoutput() ? String.valueOf(e2) : x_filter2(String.valueOf(e2)) ]| 
           else e3 := expr |[ ThreadLocalPage.get().isRawoutput() ? String.valueOf(e2) : x_filter2(String.valueOf(e2),e_filter2arg) ]|
           end
         end
         
rules

  hide-bstms-on-null-pointer-exception :
    bstm* -> 
    bstm* |[
      try {
        java.io.StringWriter x_sw = new java.io.StringWriter();
        out = new java.io.PrintWriter(x_sw); 
        ThreadLocalOut.push(out);
        bstm*
        ThreadLocalOut.popChecked(out);
        out = ThreadLocalOut.peek();
        out.print(x_sw.toString());
      }
      catch(NullPointerException npe) {
        //utils.Warning.warn("Null reference caused template element to be hidden: "+"~ppterm");
        utils.Warning.warn("null reference prevented rendering of template element");
      }
      catch(IndexOutOfBoundsException ine){
        utils.Warning.warn("index out of bounds prevented rendering of template element");
      }
    ]|
    with x_sw := <newname> "sw"
       //; ppterm := <pp-webdsl-to-string; escape-chars(Escape-double-quote<+Escape-backslash)> term
       