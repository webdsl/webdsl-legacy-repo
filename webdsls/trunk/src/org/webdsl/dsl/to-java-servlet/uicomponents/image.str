module org/webdsl/dsl/to-java-servlet/uicomponents/image
imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front
    
rules // images

  element-to-java-servlet :
    TemplateCall("image",[e],passign*,TemplateBody([])) ->
    <element-render(|
      bstm* |[
        out.print("<img src=\"");
        bstm_output
        out.print("\"");
        bstm_attr
        out.print(">");
      ]|
    )>
    where String(url) := e
        ; <is-substring(!"://")> url
    with  bstm_output := <to-page-string-java-servlet> e
        ; bstm_attr := <to-html-attrs-include-collection(|"image")> passign*

  element-to-java-servlet :
    TemplateCall("image",[e],passign*,TemplateBody([])) ->
    <element-render(|
      bstm* |[
        out.print("<img src=\""+(e1.toString().startsWith("http://")?e1:threadLocalPageCached.getAbsoluteLocation()+"/"+e1+"\""));
        bstm_attr
        out.print(">");
      ]|
    )>
    where not(String(url) := e)
    with  e1 := <expression-to-java-servlet> e
        ; bstm_attr := <to-html-attrs-include-collection(|"image")> passign*

  element-to-java-servlet :
    TemplateCall("image",[e ],passign*,TemplateBody([])) ->
    <element-render(|
      bstm* |[
        out.print("<img src=\""+threadLocalPageCached.getAbsoluteLocation());
        bstm_output
        out.print("\"");
        bstm_attr
        out.print(">");
      ]|
    )>
    where String(url) := e
        ; not(<is-substring(!"://")> url)
    with  bstm_output := <to-page-string-java-servlet> e
        ; bstm_attr := <to-html-attrs-include-collection(|"image")> passign*

