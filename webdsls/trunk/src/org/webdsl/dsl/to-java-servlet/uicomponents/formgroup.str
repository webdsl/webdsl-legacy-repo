module org/webdsl/dsl/to-java-servlet/uicomponents/formgroup

imports
  libstrategolib

imports
  libwebdsl-front

rules // formgroup, which don't use tables for layout

  elem-to-java-servlet :
    TemplateCall("formgroup", args,passign*, elems) ->
    <wrap-common-context-code>
    bstm* |[
      bstm1*
      out.print("<fieldset "+e_attrs1+"><legend>");
      bstm_exptostring*
      out.print("</legend>");
      ThreadLocalPage.get().enterFormGroupContext();
      bstm*
      ThreadLocalPage.get().leaveFormGroupContext();      
      out.print("</fieldset>");
    ]|
    with  if <fetch(?PropertyAssignment("labelWidth",e1))> passign*
          then e2 := <expression-to-java-servlet> e1; bstm1* := bstm* |[ ThreadLocalPage.get().formGroupLeftSize = String.valueOf(e2); ]|
          else bstm1* := [] end
        ; bstm* := <elems-to-java-servlet> elems
        ; if [arg] := args
          then bstm_exptostring* := <to-page-string-java-servlet> arg
          else bstm_exptostring* := []
          end
        ; e_attrs1 := <to-html-attrs> passign*

  elem-to-java-servlet :
    TemplateCall("formgroupDoubleColumn", [],passign*, elems) ->
    bstm* |[ 
      out.print("<div "+e_attrs1+" style=\"clear:left; float:left;\">");
      if(ThreadLocalPage.get().inFormGroupContext()){ 
        ThreadLocalPage.get().getFormGroupContext().enterDoubleColumnContext(); 
      }
      bstm*
      if(ThreadLocalPage.get().inFormGroupContext()){ 
        ThreadLocalPage.get().getFormGroupContext().leaveDoubleColumnContext(); 
      }
      out.print("</div>");
    ]|
    with  e_attrs1 := <to-html-attrs> passign*
        ; bstm*    := <elems-to-java-servlet> elems

rules

  generate-code-java-servlet-once =
    <emit-java-code; fail> compilation-unit|[
      package utils;
      
      public abstract class PageServlet {
        
        @Partial
        public void commonContextsCheckEnter(PrintWriter out) {
          formGroupContextsCheckEnter(out);
        }
        @Partial
        public void commonContextsCheckLeave(PrintWriter out) {
          formGroupContextsCheckLeave(out);
        }
        
      }
    ]|

rules

  wrap-formgroup-context-code :
    bstm* ->
    bstm* |[
      ThreadLocalPage.get().formGroupContextsCheckEnter(out);
      bstm*
      ThreadLocalPage.get().formGroupContextsCheckLeave(out);
    ]|

  //force display on left, used in label
  wrap-formgroup-left-context-code :
    bstm* ->
    bstm* |[
      ThreadLocalPage.get().formGroupContextsDisplayLeftEnter(out);
      bstm*
      ThreadLocalPage.get().formGroupContextsCheckLeave(out);
    ]|
    
  //force display on right, used in label
  wrap-formgroup-right-context-code :
    bstm* ->
    bstm* |[
      ThreadLocalPage.get().formGroupContextsDisplayRightEnter(out);
      bstm*
      ThreadLocalPage.get().formGroupContextsCheckLeave(out);
    ]|    