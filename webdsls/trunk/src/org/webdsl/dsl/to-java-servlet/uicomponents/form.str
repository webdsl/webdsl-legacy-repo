module org/webdsl/dsl/to-java-servlet/uicomponents/form

imports
  libstratego-lib
  libjava-front
  libwebdsl-front
  org/webdsl/dsl/to-java-servlet/uicomponents/navigate
  org/webdsl/dsl/to-java-servlet/template-render
  org/webdsl/dsl/to-java-servlet/template-action-inputs
  org/webdsl/dsl/to-java-servlet/ajax/html-utils
  org/webdsl/dsl/to-java-servlet/core-to-java-servlet
  org/webdsl/dsl/to-java-servlet/control-flow-to-java-servlet

rules // forms

  elem-to-java-servlet :
    tc@TemplateCall("form", [],passign*, elems) ->
    bstm* |[
      utils.AbstractPageServlet x_threadlocalpage = ThreadLocalPage.get();
      if(x_threadlocalpage.isInForm()){
        org.webdsl.logging.Logger.error("Invalid nested <form> tag detected in DOM at URL: "+x_threadlocalpage.getRequest().getRequestURL()
          +"\n Enclosing form found in "+x_threadlocalpage.getEnclosingForm()
          +"\n Nested form found in "+getTemplateSignature());
      }
      x_threadlocalpage.enterForm(getTemplateSignature());	
    	
      ident = e_ident;
      x_threadlocalpage.setFormIdent(ident);//for actionLink javascript code and ajax actions  //TODO breaks with nested forms, use stack
      if(x_threadlocalpage.getParammap().get(ident)!=null)
      {

        x_threadlocalpage.setInSubmittedForm(true); // ok, because no nested forms, otherwise need to count just like inForLoop variable
      }
      x_threadlocalpage.formRequiresMultipartEnc = false;

      java.io.StringWriter x_stringwrvalid = null;
      if(x_threadlocalpage.inSubmittedForm() && x_threadlocalpage.isValidationFormRerender()){
        x_stringwrvalid = new java.io.StringWriter();
        out = new java.io.PrintWriter(x_stringwrvalid);
        ThreadLocalOut.push(out);
      }

      out.print("<form name=\""+ident+"\" id=\""+ident+
        "\" action=\""+e_resulturl+
        "\" accept-charset=\"UTF-8\" method=\"POST\" "+e_attrs1);
      //create temporary out stream so the decision for multipart enctype can be made after handling the contents of the form
      java.io.StringWriter x_stringwr = new java.io.StringWriter();
      out = new java.io.PrintWriter(x_stringwr);
      ThreadLocalOut.push(out);

      out.print(">");
      out.print("<input type=\"hidden\" name=\""+ident+"\" value=\"1\" />");
      out.print(x_threadlocalpage.getHiddenParams()); // page arguments
      bstm*
      out.print("</form>");

      //set 'out' back to the original out stream
      ThreadLocalOut.popChecked(out);
      out = ThreadLocalOut.peek();
      if(x_threadlocalpage.formRequiresMultipartEnc){
        out.write(" enctype=\"multipart/form-data\"");
      }
      out.write(x_stringwr.toString());

      if(x_threadlocalpage.inSubmittedForm() && x_threadlocalpage.isValidationFormRerender()){
        ThreadLocalOut.pop();
        if(x_threadlocalpage.submittedFormContent==null){ //render phase with changed data, store form output
          x_threadlocalpage.submittedFormContent = x_stringwrvalid.toString();
        }
        else{ //render phase with current persisted data, retrieve stored form output
          out = ThreadLocalOut.peek();
          out.write(x_threadlocalpage.submittedFormContent);
        }
      }

      x_threadlocalpage.formRequiresMultipartEnc = false;
      x_threadlocalpage.setInSubmittedForm(false);
      x_threadlocalpage.setFormIdent("");
      x_threadlocalpage.leaveForm();
    ]|
    with  bstm* := <elems-to-java-servlet> elems
        ; formident := <get-formnumber> tc
        ; e_attrs1 := <to-html-attrs> passign*
        ; x_stringwr := <newname> "sw"
        ; x_stringwrvalid := <newname> "sw"
        ; x_threadlocalpage := <newname> "tlp"
        ; e_url := java:expr |[ utils.HTMLFilter.filter(x_threadlocalpage.getPageUrlWithParams() + x_threadlocalpage.getExtraQueryAruments("?")) ]|
        ; e_resulturl := <convert-abs-url-based-on-secure-modifier(|passign*)> e_url
        ; e_ident := <for-loop-counter-wrap-code-expr> java:expr|["~formident"+uniqueid]|

rules

  handle-actions-to-java-servlet:
    tc@TemplateCall("form", [],passign*, TemplateBody(elems)) ->
    <for-loop-counter-wrap-code>
    bstm*|[
        ident += "~formident"+uniqueid;
        ThreadLocalPage.get().setFormIdent(ident);//for actionLink javascript code and ajax actions
        //if(ThreadLocalPage.get().getParammap().get(ident)!=null)
        //{
        bstm1*
        //}
    ]|
    with // bstm* := <collect-om(handle-actions-input-to-java-servlet)> elems
         bstm1* := <collect-om(handle-actions-to-java-servlet); concat-with-sublists> elems
        ; formident := <get-formnumber> tc

rules

  //set formident in databind phase, so template calls that get initialized during this phase don't result in having broken ajax action links (rerender placeholders)
  handle-actions-input-to-java-servlet :
    tc@TemplateCall("form", [],passign*, TemplateBody(elems)) ->
    <for-loop-counter-wrap-code>
    bstm*|[
        ident += "~formident"+uniqueid;
        ThreadLocalPage.get().setFormIdent(ident);//for actionLink javascript code and ajax actions
        //if(ThreadLocalPage.get().getParammap().get(ident)!=null)
        //{
        bstm1*
        //}
    ]|
    with  bstm1* := <collect-om(handle-actions-input-to-java-servlet ); concat-with-sublists> elems
        ; formident := <get-formnumber> tc
