module org/webdsl/dsl/to-java-servlet/emit-java-local

imports
  libstrategolib
  libjava-transformations
  libjava-front
  libwrite-files
  libback-end-transformations

imports
	org/webdsl/dsl/to-java-servlet/to-java-servlet
	libwebdsl-front			// for log-time
	org/webdsl/dsl/to-java-servlet/emit-java

rules
  
  cached-generate(generate | cache-name) =
    if not(CachingEnabled) <+ not(check-cache-equality(|cache-name)) then
        scope-local-emit(generate | cache-name)
    end
  
rules
		
	// Do not nest local emits for nested templates
	scope-local-emit(s|name) =
			where(InLocalEmit)
		;	s
		
	// Emit complete classes for an AST node
	scope-local-emit(s|name): def -> def
	with 
		{| JavaClassesToEmitLocal, LocalEmitDef, InLocalEmit :
			rules(
				InLocalEmit := True()
				LocalEmitDef := def
			)
			; s
			; log-time(
		    	bagof-JavaClassesToEmitLocal
				; get-java-artifacts-java-servlet
				| "transform java local")
		  ; log-time(
		  		filenames := <output-generated-files>
		  	; where(<stage-newline-once; verbose-msg> ["Writing: ", filenames])
		  	; if CachingEnabled then
		  			<write-cache-file(|filenames)> def
		  		end
		  	| "output java local")
		|}
	
	fail-with-stacktrace = with(fail)
	
	// Fail if in scope-local-emit
	check-not-in-local-emit = where(try(LocalEmitDef; fail-with-stacktrace))
	// Fail if not in scope-local emit
	check-in-local-emit = where(try(not(LocalEmitDef); fail-with-stacktrace))
	
	// Set the owner of a class; only the owner can write to the class
	set-emit-owner: classname -> classname
			where(InLocalEmit)
		; def := <LocalEmitDef>
		; rules(LocalEmitOwner : classname -> def)
	
	// Emit a java class and prevent generation to this class from elsewhere
	emit-java-code-local =
			?cu@CompilationUnit(_,_,_)
				// concat ids before retrieving fully-qualified name
		; classname := <java-concat-ids'; fully-qualified-name> cu
		; thisdef := <LocalEmitDef>
		;	if prevdef := <LocalEmitOwner> classname then
				if <not(eq)> (thisdef, prevdef) then
						msg := <concat-strings> ["Local emit for non-owned target: ", classname]
					; !thisdef; debug(!"This definition: ")
					; !prevdef; debug(!"Prev definition: ")
					; <fail-with-stacktrace> msg
				end
			else
				<set-emit-owner> classname
			end
		; rules(
				JavaClassesToEmitLocal :+= cu
			)
