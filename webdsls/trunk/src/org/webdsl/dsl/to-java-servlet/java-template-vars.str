module org/webdsl/dsl/to-java-servlet/java-template-vars

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules // page and template variables

  GenerateCodeJavaServlet =  where(ThisTemplateName);not(InAction <+ InFunction <+ JavaInEntity); generate-java-servlet-variables-code; fail

  generate-java-servlet-variables-code :
    TemplateVarDecl(x,srt) ->
    <generate-java-servlet-template-partial> class-body-dec*|[
       private t x;
       public t get#x() { return x; }
       public void set#x(t x) { this.x = x; }
       @Partial
       protected void initializeLocalVars(){
         x = e;
       }
    ]|
    with  t     := <java-type> srt
        ; X     := <capitalize-string> x
        ; e     := <java-type-default-value> srt

  generate-java-servlet-variables-code :
    TemplateVarDeclInit(x, srt, e1) ->
    <generate-java-servlet-template-partial> class-body-dec*|[
       private t x;
       public t get#x() { return x; }
       public void set#x(t x) { this.x = x; }
       @Partial
       protected void initializeLocalVars(){
         x = e2;
       }
    ]|
    with  t     := <java-type> srt
        ; X     := <capitalize-string> x
        ; e2 := <expression-to-java-servlet> e1

rules // request var inside template

  generate-java-servlet-variables-code :
    RequestScopeTemplateVarDecl(x,srt) ->
    <generate-java-servlet-template-partial> class-body-dec*|[
       private t x;
       public t get#x() { return x; }
       public void set#x(t x) { this.x = x; }
       @Partial
       protected void initializeLocalVarsOnce(){
         x = e;
       }
    ]|
    with  t     := <java-type> srt
        ; X     := <capitalize-string> x
        ; e     := <java-type-default-value> srt

  generate-java-servlet-variables-code :
    RequestScopeTemplateVarDeclInit(x,srt,e1) ->
    <generate-java-servlet-template-partial> class-body-dec*|[
       private t x;
       public t get#x() { return x; }
       public void set#x(t x) { this.x = x; }
       @Partial
       protected void initializeLocalVarsOnce(){
         x = e2;
       }
    ]|
    with  t     := <java-type> srt
        ; X     := <capitalize-string> x
        ; e2 := <expression-to-java-servlet> e1

rules // placeholder id

  generate-java-servlet-variables-code :
    PlaceholderVar(x) -> <placeholder-template-var-helper> x

  placeholder-template-var-helper:
    x -> <generate-java-servlet-template-partial> class-body-dec*|[
       private t x = null;

       public t get#x() { return x; }

       public void set#x(t x) { this.x = x; }

       @Partial
       protected void initializeLocalVarsOnce(){
         x = "~x" + TemplateServlet.getCurrentTemplate().getUniqueId();
       }
    ]|
    where <is-string> x
    with  srt := SimpleSort("Placeholder")
    	; t   := <java-type> srt
        ; X   := <capitalize-string> x
