module org/webdsl/dsl/to-java-servlet/search

imports
  libstrategolib
  libjava-front

imports
  libwebdsl-front

strategies

  property-to-index-annos :
    Property(x, _, s, anno*) -> [anno|[ @org.hibernate.search.annotations.Field ]|]
    where not([] := <filter(?SimpleAnno("searchable"))> anno*)

  property-to-index-annos :
    Property(x, _, s, anno*) -> []
    where [] := <filter(?SimpleAnno("searchable"))> anno*

  property-to-index-annos :
    DerivedProperty(x, _, s, anno*, e) -> []

strategies

  generate-java-search-functions =
    entities := <bagof-IndexedEntities; make-set>
    ; !<map(entity-name-to-java-search-function)> entities

  entity-name-to-java-search-function :
    x_Class -> class-body-dec |[
      public static java.util.List<x_Class> x#_(org.hibernate.Session hibSession, Environment env, String searchQuery, PrintWriter out)  {
        String[] searchFields = { e_sf* };
        org.apache.lucene.queryParser.QueryParser parser = new org.apache.lucene.queryParser.MultiFieldQueryParser(searchFields, new org.apache.lucene.analysis.standard.StandardAnalyzer());
        org.apache.lucene.search.Query luceneQuery;
        try {
          luceneQuery = parser.parse(searchQuery);
          org.hibernate.search.FullTextSession fts = org.hibernate.search.Search.getFullTextSession(hibSession);
          org.hibernate.Query query = fts.createFullTextQuery(luceneQuery, x_Class.class);
          
          return query.list();
        } catch (org.apache.lucene.queryParser.ParseException pe) {
          return new java.util.ArrayList<x_Class>();
        }
      }
    ]|
    with x := <concat-strings> ["search", x_Class]
       ; e_sf* := <bagof-Properties; concat; filter({name2: \ Property(name, _, _, anno*) -> expr|[ "~name2" ]|
                                        where not([] := <filter(?SimpleAnno("searchable"))> anno*)
                                            ; name2 := <concat-strings> ["_", name] \}); make-set> x_Class

