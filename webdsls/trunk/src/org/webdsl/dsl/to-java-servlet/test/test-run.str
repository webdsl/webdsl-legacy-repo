module org/webdsl/dsl/to-java-servlet/test/test-run

imports
  libstrategolib
  libjava-front

imports
  libwebdsl-front

strategies

  GenerateCodeJavaServlet = if-test(generate-test-run); fail

  generate-test-run :
     Application(_,_) ->
     <emit-java-code> compilation-unit|[
       //package pkgname;
       package utils;
       import pkgname.*;
       import pkgname2.*;
       import pkgname3.*;
       import utils.*;
       import org.webdsl.lang.*;
       import org.webdsl.tools.*;
       import org.hibernate.*;
       
       import org.openqa.selenium.By;
       import org.openqa.selenium.WebDriver;
       import org.openqa.selenium.WebElement;
       import org.openqa.selenium.htmlunit.HtmlUnitDriver;
       
       import org.codehaus.cargo.container.*;
       import org.codehaus.cargo.container.deployable.*;
       import org.codehaus.cargo.container.tomcat.*;
       
       import java.io.*;
       
       public class TestRun extends TestAll
       {
          public TestRun () {

          }

          public static final String contextPath = "~<AppName>";
          public static final boolean isPost = false;
          
          public static void runTests(){
            boolean exitWithError = false;
            
            System.out.println("Tomcat web server started, your web application is "+
              "available at http://localhost:8080/"+"~<AppName>"+". Press Enter to stop the web server.");
            
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    try {
	       br.readLine();
	       System.out.println("Stopping Tomcat.");
	    } catch (IOException ioe) {
	       System.out.println(ioe.getMessage());
	       System.exit(1);
	    }
            
            if(exitWithError){
              System.exit(1);
            }
          }

          public static void main(String[] args) {
            
            DispatchServletHelper d = new DispatchServletHelper(null, isPost, contextPath);
            ThreadLocalServlet.set(d);
          
            String warfile = "./"+"~<AppName>"+".war";
            System.out.println(warfile);
            Deployable war = new WAR(warfile);

            org.codehaus.cargo.container.configuration.LocalConfiguration configuration = new Tomcat6xStandaloneLocalConfiguration("tomcat6x");
            
            configuration.addDeployable(war);
      
            InstalledLocalContainer container = new Tomcat6xInstalledLocalContainer(configuration);
            String tomcathome = "./tomcat/apache-tomcat-6.0.20/";
            System.out.println(tomcathome);
            container.setHome(tomcathome);
            container.setLogger(new org.codehaus.cargo.util.log.SimpleLogger(){     
              protected void doLog(org.codehaus.cargo.util.log.LogLevel level, String message, String category)
     	      {
                //System.out.println("[" + level.getLevel() + "][" + category + "] " + message);
                System.out.println(message);
              } 
            });
      
            container.start(); 
             
            runTests();

            container.stop();            
          }
       }
     ]|
     with pkgname := <TestPackage>
        ; pkgname2 := <BeanPackage>
        ; pkgname3 := <DomainPackage>
