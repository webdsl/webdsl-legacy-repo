module org/webdsl/dsl/to-java-servlet/test/assert-function

imports
  libstrategolib
  libjava-front
  libwebdsl-front

rules //native java operations

 call-to-java-servlet :
   call@exp|[ assert(e1,e_message) ]| -> java |[ utils.ThreadLocalTest.get().assertTrue(e3,e_jmes,e_loc) ]|
   where <anno-bool-type-compatible> e1
       ; <anno-string-type-compatible> e_message
   with  (e3,_,e_jmes,e_loc) := <assert-call-helper> (e1,Null(),e_message,call)

 call-to-java-servlet :
   call@exp|[ assert(e1) ]| -> java |[ utils.ThreadLocalTest.get().assertTrue(e3,e_loc) ]|
   where <anno-bool-type-compatible> e1
   with  (e3,_,_,e_loc) := <assert-call-helper> (e1,Null(),Null(),call)

 call-to-java-servlet :
   call@exp|[ assertEquals(e1,e2,e_message) ]| -> java |[ utils.ThreadLocalTest.get().assertEquals(e3,e4,e_jmes,e_loc) ]|
   where <anno-string-type-compatible> e_message
   with  (e3,e4,e_jmes,e_loc) := <assert-call-helper> (e1,e2,e_message,call)

 call-to-java-servlet :
   call@exp|[ assertEquals(e1,e2) ]| -> java |[ utils.ThreadLocalTest.get().assertEquals(e3,e4,e_loc) ]|
   with  (e3,e4,_,e_loc) := <assert-call-helper> (e1,e2,exp|[""]|,call)

 call-to-java-servlet :
   call@exp|[ assertNotSame(e1,e2,e_message) ]| -> java |[ utils.ThreadLocalTest.get().assertNotSame(e3,e4,e_jmes,e_loc) ]|
   where <anno-string-type-compatible> e_message
   with  (e3,e4,e_jmes,e_loc) := <assert-call-helper> (e1,e2,e_message,call)

 call-to-java-servlet :
   call@exp|[ assertNotSame(e1,e2) ]| -> java |[ utils.ThreadLocalTest.get().assertNotSame(e3,e4,e_loc) ]|
   with  (e3,e4,_,e_loc) := <assert-call-helper> (e1,e2,Null(),call)

  assert-call-helper :
    (e1,e2,e_message,call) -> (e3,e4,e_jmes,e_loc)
    with e3 := <expression-to-java-servlet> e1
       ; e4 := <expression-to-java-servlet> e2
       ; e_jmes := <expression-to-java-servlet> e_message
       ; location := <get-position-anno> call
       ; e_loc := java:expr|[ "~location" ]|
