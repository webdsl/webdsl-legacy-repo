module org/webdsl/dsl/to-java-servlet/data-validation-phase

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  GenerateCodeJavaServlet = where(not(ThisEmail)); data-validation-phase; fail
  
  data-validation-phase =
    ?def |[ define mod* x(farg*) { elem* } ]|
    ; where (    
      bstm1* := <  filter-elements-for-java-servlet-handling
                 ; collect-data-validation-to-java-servlet> elem*
      ; not(bstm1* := []))
    ; with(
      <generate-java-servlet-template-partial> 
        java |[ 
            @Partial
            private void validateInputsInternal() {
              String ident = "";
              int forelementcounter = 0;
              boolean inForLoop=false;
              int forLoopCounter = 0;
              
              boolean inSubmittedForm = false; //to know if validation is needed
                
              bstm1*    
              
              if(!ps.isValidated()){
                ps.clearHibernateCache(variables);      
              }
            }
        ]|)
 
strategies 

  collect-data-validation-to-java-servlet= //alltd because only interested in control flow
    collect-om(data-validation-to-java-servlet)
    ; concat-with-sublists //accept both bstm and bstm*
    
rules

  data-validation-to-java-servlet : 
    tc@TemplateCall("form", [],passign*, elems) ->
    <for-loop-counter-wrap-code> 
    bstm* |[
      {
        ident += "~formident"+uniqueid;
        
        if(ps.getParammap().get(ident)!=null)
        {
          inSubmittedForm = true; 
          bstm*
        }

        inSubmittedForm = false;
      }
    ]|
    with  bstm* := <collect-data-validation-to-java-servlet> elems
        ; formident := <get-formnumber> tc

rules

  data-validation-to-java-servlet : 
    tc@elem|[ validate(e1,e2)[passign*]{} ]| -> bstm* |[
      if(inSubmittedForm && !e3){
        ps.setValidated(false);
      }
    ]|
    with  e3 := <expression-to-java-servlet> e1
        
rules //control flow

  data-validation-to-java-servlet =
    control-flow-tcall(|"validateInputs")
   
  data-validation-to-java-servlet =
    control-flow-if(collect-om(data-validation-to-java-servlet)|)
  
  data-validation-to-java-servlet  =
    control-flow-for(collect-om(data-validation-to-java-servlet)|)

