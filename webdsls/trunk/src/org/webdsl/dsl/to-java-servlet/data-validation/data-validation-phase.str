module org/webdsl/dsl/to-java-servlet/data-validation-phase

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  GenerateCodeJavaServlet = where(not(ThisEmail)); log-time(data-validation-phase|"data-validation-phase"); fail
  
  data-validation-phase =
    ?def |[ define mod* x(farg*) { elem* } ]|
    ; where (    
      bstm1* := <  filter-elements-for-java-servlet-handling
                 ; collect-data-validation-to-java-servlet> elem*
      ; not(bstm1* := [])) //don't generate if no validation elements
    ; with(
      <generate-java-servlet-template-partial> 
        java |[ 
            @Partial
            protected void validateInputsInternal() {
              ~*<java-servlet-template-phase-inits>
              bstm1*  
            }
        ]|)
 
strategies 

  collect-data-validation-to-java-servlet= //alltd because only interested in control flow
    collect-om(data-validation-to-java-servlet)
    ; concat-with-sublists //accept both bstm and bstm*
    
rules

  data-validation-to-java-servlet : 
    tc@TemplateCall("form", [],passign*, TemplateBody(elems)) ->
    <for-loop-counter-wrap-code>
    bstm* |[
        ident += "~formident"+uniqueid;
        if(threadLocalPageCached.getParammap().get(ident)!=null)
        {
          threadLocalPageCached.setInSubmittedForm(true); 
          bstm*
        }
        threadLocalPageCached.setInSubmittedForm(false);
    ]|
    with  bstm* := <collect-data-validation-to-java-servlet> elems
        ; formident := <get-formnumber> tc
