module org/webdsl/dsl/to-java-servlet/data-validation/validation-context

imports 
  libstrategolib  
  Java-15
  libjava-front 
  
imports 
  libwebdsl-front
  
rules //outer validation context, e.g. label takes precedence over inner validation context, e.g. input

  GenerateCodeJavaServlet = generate-java-servlet-validation-context-var; fail

  generate-java-servlet-validation-context-var :
    Application(qid, sections) //match application node to only generate once
    ->
    <emit-java-code> compilation-unit|[
      package utils;
      
      public abstract class PageServlet {

        public java.util.LinkedList<String> validationContext = new java.util.LinkedList<String>();
      
        public String getValidationContext() { 
          //System.out.println("using" + validationContext.peek());
          return validationContext.peek();
        }
      
        public void enterValidationContext(String ident) { 
          validationContext.add(ident);
          //System.out.println("entering" + ident);
        }
      
        public void leaveValidationContext() { 
          String s = validationContext.removeLast();
          //System.out.println("leaving" +s);
        }
      
        public boolean inValidationContext() { 
          return validationContext.size() != 0;
        }
      }
    ]|
    
rules //for use in input element translation

  wrap-validation-context-code-store-inputs :
    bstm* ->
    bstm* |[
      ps.enterValidationContext(ident);
      bstm* 
      ps.leaveValidationContext();
    ]|

  validation-context-wrapper-for-input(s) :
    tc ->
    <for-loop-counter-wrap-code> 
    bstm*|[
      ident = e_id;
      ~*<?[] <+ wrap-validation-context-code-store-inputs> bstm* |[
        bstm* 
      ]|
    ]|
    where TemplateCall(_, [arg],passign*, TemplateBody(elem*)) := tc
       <+ SelectFromList(e1, e7, passign*, elem*) := tc
       <+ Select(x, srt, label, e, passign*, elem*) := tc
    with  inputident := <get-inputnumber> tc
        ; bstm* := <collect-om(s);concat-with-sublists> elem*
        ; e_id := <id-encoding> inputident
    