module org/webdsl/dsl/to-java-servlet/hibernate-util

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  GenerateCodeJavaServlet = generate-java-servlet-hibernate-util; fail

  generate-java-servlet-hibernate-util :
    Application(qid, sections) ->
    <emit-java-code> compilation-unit|[
    package utils;
    
    import java.util.Properties;
    
    import org.hibernate.*;
    import org.hibernate.cfg.*;
    
    import pkgname.*;
    public class HibernateUtilConfigured {
        private static final SessionFactory sessionFactory;
    
        static {
    
            try {
                //Properties prop = HibernateUtil.getProperties();
    
                AnnotationConfiguration annotationConfiguration = new AnnotationConfiguration();
    
                annotationConfiguration.addPackage("~domainpack");
    
                //annotationConfiguration.addAnnotatedClass(User.class);
                bstm*
    
                //annotationConfiguration.addProperties(prop);
                
                bstm1*
    
                sessionFactory = annotationConfiguration.buildSessionFactory();
                
            } catch (Throwable ex) {
                throw new ExceptionInInitializerError(ex);
            }
        }
    
        public static SessionFactory getSessionFactory() {
            return sessionFactory;
        }
    
    }
    ]|
    with pkgname := <DomainPackage>
       ; domainpack := <pp-java5-to-string> <DomainPackage>
       ; bstm* := <map({\ 
                           x -> bstm |[ annotationConfiguration.addAnnotatedClass(x_class); ]| 
                           where x_class := <concat-strings> [<DomainPackage;pp-java5-to-string>,".",x,".class"]
                       \})> 
                       <bagof-Entities;make-set>
       ; if not([] := <AllGlobalVars>) 
         then bstm1* := [ bstm |[ annotationConfiguration.addAnnotatedClass(ApplicationContextProperty.class); ]| ]
         else bstm1* := [] end
 
