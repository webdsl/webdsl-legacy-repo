[
   Times                           -- _1 KW["*"] _2,
   Div                             -- _1 KW["/"] _2,
   Mod                             -- _1 KW["%"] _2,
   Plus                            -- _1 KW["+"] _2,
   Minus                           -- _1 KW["-"] _2,
   And                             -- _1 KW["and"] _2,
   Or                              -- _1 KW["or"] _2,
   Eq                              -- _1 KW["=="] _2,
   NotEq                           -- _1 KW["!="] _2,
   LargerThan                      -- _1 KW[">"] _2,
   LargerThanOrEqual               -- _1 KW[">="] _2,
   SmallerThan                     -- _1 KW["<"] _2,
   SmallerThanOrEqual              -- _1 KW["<="] _2,
   Not                             -- KW["not"] _1,
   Var                             -- _1,
   Int                             -- _1,
   ListIndex                       -- _1 KW["["] _2 KW["]"],
   ListLiteral                     -- KW["["] _1 KW["]"],
   ListLiteral.1:iter-star-sep     -- _1 KW[", "],
   TupleLiteral                    -- KW["("] _1 KW[","] _2 KW[")"],
   TupleLiteral.2:iter-star-sep    -- _1 KW[", "],
   TupleLiteralOne                 -- KW["("] _1 KW[","] KW[")"],
   FieldAccess                     -- H hs=0[ _1 KW["."] _2],
   Application                     -- _1,
   Application.1:iter-star         -- V[_1],
   Statement                       -- H[_1],
   FromImport                      -- KW["from"] _1 KW["import"] _2,
   Import                          -- KW["import"] _1,
   ClassDef                        -- V[ _1 V is=4[ H[ KW["class"] H hs=0[_2 KW["("] _3 KW[")"] KW[":"]]] _4]],
   ClassDef.1:iter-star            -- _1,
   ClassDef.3:iter-star-sep        -- _1 KW[", "],
   FunctionDef                     -- V[ _1 V is=4[ H[ KW["def"] H hs=0[_2 KW["("] _3 KW[")"] KW[":"]]] _4]],
   FunctionDef.1:iter-star         -- _1,
   FunctionDef.3:iter-star-sep     -- _1 KW[", "],
   IfNoElse                        -- V is=4[ H[ KW["if"] _1 KW[":"]] _2],
   If                              -- V [V is=4[ H[ KW["if"] _1 KW[":"]] _2] V is=4[ H hs=0[ KW["else"] KW[":"]] _3]],
   For                             -- V is=4[ H[ KW["for"] _1 KW["in"] _2 KW[":"]] _3],
   Assignment                      -- _1 KW["="] _2,
   ExpStm                          -- _1,
   Call                            -- H hs=0[_1 KW["("]] _2 KW[")"],
   Call.2:iter-star-sep            -- _1 KW[", "],
   String                          -- _1,
   NamedParam                      -- _1 KW["="] _2,
   Param                           -- _1,
   Block                           -- _1,
   Block.1:iter-star               -- _1,
   Decorator                       -- V[ H hs=0[KW["@"] _1] ],
   Return                          -- KW["return"] _1,
   In                              -- _1 KW["in"] _2
]
