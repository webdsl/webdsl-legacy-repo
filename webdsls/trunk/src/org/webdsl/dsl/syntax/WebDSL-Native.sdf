module WebDSL-Native

imports
  WebDSL-Lexical

exports

  sorts Derive DeriveType DeriveProperty

context-free syntax

  "native" "function" Id "(" {FormalArg ","}* ")" ":" Sort ";" -> NativeFunctionDeclaration {cons("NativeFunction")}

context-free syntax

  "native" "class" QId NativeClassAlias "{" NativeClassElement* "}" -> NativeClassDeclaration {cons("NativeClass")}
  
  "as" Id -> NativeClassAlias{cons("NativeClassAlias"),prefer}
  -> NativeClassAlias{cons("None")}
  
  Id ":" Id -> NativeClassElement{cons("NativeClassProperty")}
  
  Id "(" {Id ","}* ")" NativeClassFunctionReturn -> NativeClassElement{cons("NativeClassFunction")}
  "constructor" "(" {Id ","}* ")" NativeClassFunctionReturn -> NativeClassElement{reject}

  ":" Id ->  NativeClassFunctionReturn{cons("NativeClassFunctionReturn"),prefer}
  ->  NativeClassFunctionReturn{cons("None")}

  "constructor" "(" {Id ","}* ")" -> NativeClassElement{cons("NativeClassConstructor")}