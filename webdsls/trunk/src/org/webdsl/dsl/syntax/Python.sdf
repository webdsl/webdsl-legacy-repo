module Python
imports
  Python-Expression

exports 
  sorts Application Statement
  context-free start-symbols Application

  context-free syntax
    Statement*                                -> Application {cons("Application")}
    Stat ";"                                  -> Statement {cons("Statement")}
    "from" Exp "import" Exp                   -> Stat {cons("FromImport")}
    "import" Exp                              -> Stat {cons("Import")}

    Decorator* "class" Id "(" {Exp ","}* ")" ":" Block   -> Stat {cons("ClassDef")}
    Decorator* "def" Id "(" {Exp ","}* ")" ":" Block     -> Stat {cons("FunctionDef")}

    Exp "=" Exp                               -> Stat {cons("Assignment")}
    Exp                                       -> Stat {cons("ExpStm")}
    Exp "(" {Param ","}* ")"                  -> Exp {cons("Call")}
    String                                    -> Exp {cons("String")}
    Id "=" Exp                                -> Param {cons("NamedParam")}
    Exp                                       -> Param {cons("Param")}
    "@" Exp                                   -> Decorator {cons("Decorator")}

  context-free syntax
    "{" Statement* "}" -> Block {cons("Block")}
