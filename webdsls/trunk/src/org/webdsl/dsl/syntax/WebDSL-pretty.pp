[
   HqlQuery -- _1,
   DslExp -- _1,

   Module                             -- V[H[KW["module"] _1] _2],
   Module.2:iter-star                 -- _1,
   ModuleDefs                         -- V[H[KW["module"] _1] _2 _3],
   ModuleDefs.2:iter-star             -- _1,
   ModuleDefs.3:iter-star             -- _1,

   Imports                            -- H[KW["imports"] _1],

   Qualified                          -- H hs=0[_1 KW["."] _2],
   ApplicationDefs                    -- V vs=1[H[KW["application"] _1] _2 _3],
   ApplicationDefs.2:iter-star        -- _1,
   ApplicationDefs.3:iter-star        -- _1,
   Application                        -- V vs=1[H[KW["application"] _1] _2],
   Application.2:iter-star            -- _1,
   Section                            -- V is=2 vs=1 [H[KW["section"] _1 KW["."]] _2],
   Section.1:iter                     -- _1,
   Section.2:iter-star                -- _1,
   Description                        -- V[V is=2[H[KW["description"] KW["{"]] HV[_1]] KW["}"]],
   Note                               -- V[V is=2[KW["note"] HV[_1]] KW["end"]],
   GlobalsDefinition                  -- KW["globals"] KW["{"] _1 KW["}"],
   Entity                             -- V[V is=2[H[KW["entity"] _1 KW[":"] _2 KW["{"]] _3 _4] KW["}"]],
   Entity.4:iter-star                 -- _1,
   EntityNoSuper                      -- V[V is=2[H[KW["entity"] _1 KW["{"]] _2 _3] KW["}"]],
   EntityNoSuper.3:iter-star          -- _1,
   SessionEntity                      -- V[V is=2[H[KW["session"] _1 KW["{"]] _2 _3] KW["}"]],
   SessionEntity.2:iter-star          -- _1,
   SessionEntity.3:iter-star          -- _1,
   ExtendEntity                       -- V[V is=2[H[KW["extend"] KW["entity"] _1 KW["{"]] _2 _3] KW["}"]],
   ExtendSessionEntity                -- KW["extend"] KW["session"] _1 KW["{"] _2 _3 KW["}"],
   Property                           -- H[_1 _2 _3 KW["("] _4 KW[")"]],
   Property.4:iter-star-sep           -- H hs=0[_1 KW[","]],
   PropertyNoAnno                     -- H[_1 _2 _3],
   DerivedProperty                    -- H[_1 _2 _3 KW["("] _4 KW[")"] KW[":="] _5],
   DerivedProperty.4:iter-star-sep    -- H hs=0[_1 KW[","]],
   DerivedPropertyNoAnno              -- H[_1 _2 _3 KW[":="] _4],
   Enum                               -- H[ KW["enum"] _1 KW["{"] _2 KW["}"] ],
   Enum.2:iter-star-sep               -- H hs=0[_1 "(" _2 ")" KW[","]],
   Simple                             -- KW["::"],
   Ref                                -- KW["->"],
   Comp                               -- KW["<>"],
   SimpleSort                         -- _1,
   GenericSort                        -- H hs=0[_1 KW["<"] _2 KW[">"]],
   GenericSort.2:iter-sep             -- H hs=0[_1 KW[","]],
   SimpleAnno                         -- _1,
   InverseAnno			      -- KW["inverse"] KW["="] _1 KW["."] _2,
   InverseSlaveAnno		      -- KW["inverseSlave"] KW["="] _1 KW["."] _2,
   InlineAnno		              	      -- KW["inline"] KW["("] _1 KW[")"],
   InlineAnno.1:iter-stat-sep         -- _1 KW[","],
   SelectAnno                         -- KW["select"] KW["="] _1,
   ParamAnno                          -- _1 KW["("] _2 KW[")"],
   ParamAnno.2:iter-star-sep          -- _1 KW[","],
   Define                             -- V[ V is=2[H[KW["define"] _1 _2 H hs=0[KW["("] H[_3] KW[")"]] KW["{"]] _4] KW["}"] ],
   Define.1:iter-star                 -- _1,
   Define.3:iter-star-sep             -- H hs=0[_1 KW[","]],
   Define.4:iter-star                 -- _1,
   Page                               -- KW["page"],
   Email                              -- KW["email"],
   Template                           -- KW["template"],
   Local                              -- KW["local"],
   Feed                               -- KW["feed"],
   Arg                                -- H[_1 KW[":"] _2],
   Text                               -- H hs=0[ "\"" _1 "\"" ],

   ForSep                                          
      -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4KW[")"] 
                      KW["{"]]
                   _5 ]
            H[ KW["}"] KW[ "separated-by" ] KW["{"] _6  KW["}"] ]
          ],
   ForSep.5:iter-star                              -- _1,
   ForSep.6:iter-star                              -- _1,

   ForSepNoFilter                                          
      -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] 
                      KW["{"]] _4 ] 
            H[ KW["}"] KW[ "separated-by" ] KW["{"] _5 KW["}"] ]
          ],
   ForSepNoFilter.4:iter-star                              -- _1,
   ForSepNoFilter.5:iter-star                              -- _1,

   For                                          
     -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"] 
                     KW["{"]] _5 ] KW["}"] ],
   For.5:iter-star                              -- _1,
   ForNoFilter                                  -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] KW["{"]] _4 ] KW["}"] ],
   ForNoFilter.4:iter-star                      -- _1,
   ForAll                                       -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"] KW["{"]] _4 ] KW["}"] ],
   ForAll.4:iter-star                           -- _1,
   ForAllNoFilter                               -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW[")"] KW["{"]] _3 ] KW["}"] ],
   ForAllNoFilter.3:iter-star                   -- _1,
   PagedForAll                                  -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"]] _4 ] KW["}"] ],
   PagedForAll.4:iter-star                      -- _1,
   PagedFor                                  -- V[ V is=2[ H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW["per"] _4 KW[")"] KW["{"]] _5 ] KW["}"] ],
   PagedFor.5:iter-star                      -- _1,

   Subtable                           -- V[ V is=2[ H[KW["subtable"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] KW["{"] ] _4 ] KW["}"]],
   IfTempl                            -- V[ V is=2[ H[KW["if"] KW["("] _1 KW[")"] KW["{"] ] _2 ] KW["}"] KW["else"] KW["{"] _3 KW["}"] ],
   IfTempl.2:iter-star                -- _1,
   IfTempl.3:iter-star                -- _1,
   IfNoElseTempl                      -- V[ V is=2[ H[KW["if"] KW["("] _1 KW[")"] KW["{"] ] _2 ] KW["}"]],
   IfNoElseTempl.2:iter-star          -- _1,
   Select                             -- H[KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"]] "[" _5 "]",
   SelectNoProps                      -- H[KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"]],
   SelectFromList                     -- H[KW["select"] KW["("] _1 KW["from"] _2 KW[")"]] "[" _3 "]",
   SelectFromListNoProps              -- H[KW["select"] KW["("] _1 KW["from"] _2 KW[")"]],
   TemplateCallNoArgs                 -- _1,
   True				                        -- KW["true"],
   False			                        -- KW["false"],
   Null                               -- KW["null"],
   TemplateBody                       -- _1,
   TemplateCallNoBody                 -- H hs=0[_1 KW["("] H[_2] KW[")"]],
   TemplateCallNoBody.2:iter-star-sep -- H hs=0[_1 KW[","]],
   TemplateCallNoBody.2:iter-star			-- _1,
   TemplateCallBody                   -- V[ V is=2[H[_1 KW["{"]] _2] KW["}"]],
   TemplateCallBody.2:iter-star       -- _1,
   TemplateCallBody.2:iter-star-sep -- H hs=0[_1 KW[" "]],   
   TemplateCall                       -- V[ V is=2[ H hs=0[ _1 KW["("] H[_2] KW[")"] KW["["] H[_3] KW["]"] KW["{"]] _4] KW["}"]],
   TemplateCall.2:iter-star-sep       -- H hs=0[_1 KW[","]],
   TemplateCall.3:iter-star-sep       -- H hs=0[_1 KW[","]],
   TemplateCall.4:iter-star-sep       -- H hs=0[_1 KW[" "]],
   TemplateCall.2:iter-star           -- _1,
   TemplateCall.3:iter-star           -- _1,
   TemplateCall.4:iter-star           -- _1,
   TemplateCallPropsNoArgs.3:iter-star  -- _1,
   TemplateCallPropsNoArgs.3:iter-star-sep -- H hs=0[_1 KW[" "]],
   TemplateCallPropsNoArgs.2:iter-star  -- _1,
   TemplateCallPropsNoArgs.2:iter-star-sep -- H hs=0[_1 KW[","]],
   TemplateCallPropsNoArgs						-- V[V is=2[ H hs=0 [ _1 KW["["] H[_2] KW["]"] KW["{"] H[_3] KW["}"]]]],
   TemplateCallProps.2:iter-star-sep   -- H hs=0[_1 KW[","]],
   TemplateCallProps.2:iter-star      -- _1,    
   TemplateCallProps									-- V[ V is=2[ H hs=0[ _1 KW["["] H[_2] KW["]"]]]],
   TemplateCallPropsNoBody.3:iter-star-sep -- H hs=0[_1 KW[","]],
   TemplateCallPropsNoBody.3:iter-star -- _1, 
   TemplateCallPropsNoBody.2:iter-star-sep -- H hs=0[_1 KW[","]],
   TemplateCallPropsNoBody.2:iter-star -- _1,
   TemplateCallPropsNoBody						-- V[ V is=2[ H hs=0[ _1 KW["("] H[_2] KW[")"] KW["["] H[_3] KW["]"]]]],
   TemplateCallNoAssigns.3:iter-star  -- _1,
   TemplateCallNoAssigns.3:iter-star-sep -- H hs=0[_1 KW[" "]],
   TemplateCallNoAssigns.2:iter-star  -- _1,
   TemplateCallNoAssigns.2:iter-star-sep -- H hs=0[_1 KW[","]],
   TemplateCallNoAssigns							-- V[ V is=2[ H hs=0[ _1 KW["("] H[_2] KW[")"] KW["{"] H[_3] KW["}"]]]],
   TemplateCallNoArgs									-- _1,
 
   TemplateCallDeclaredType.4:iter-star -- _1,
   TemplateCallDeclaredType           -- _1 _2 _3 _4,
   Action                             -- V[ H[KW["action"] _1 KW["("] _2 KW[")"]] _3 ],
   Action.2:iter-star-sep             -- H hs=0[_1 KW[","]],
   AjaxAction													-- H[ _1 _2 KW["<<"] _3 KW[";"]],
   AjaxActionIdParam								  -- H[ _1 _2 KW["<<"] _3 KW[";"]],
   AjaxActionNoParam									-- H[ _1 _2 KW["<<"] KW[";"]],
   AjaxActionNoTarget									-- H[ _1 KW["<<"] _2 KW[";"]],
   InlineAction												-- H[ KW["{"] _1 KW["}"] ],
   InlineAction.1:iter-star           -- _1,
   InlineTemplateCall									-- H[ KW["template"] KW ["{"] _1 KW["}"]],
   InlineTemplateCall.1:iter-star-sep -- H hs=0[_1 KW[","]],
   InlineTemplateCall.1:iter-star     -- _1,
   InitAction                         -- V[ H[KW["init"]] _1],
   Function                           -- V[ H[KW["function"] _1 KW["("] _2 KW[")"] KW[":"] _3] _4 ],
   Function.3:iter-star-sep           -- H hs=0[_1 KW[","]],
   FunctionNoReturn                   -- V[ H[KW["function"] _1 KW["("] _2 KW[")"]] _3 ],
   FunctionNoReturn.2:iter-star-sep   -- H hs=0[_1 KW[","]],
   NativeFunction                     -- H[KW["native"] KW["function"] _1 KW["("] _2 KW[")"] KW[":"] _3 KW[";"]],
   ExtendFunction                     -- KW["extend"] _1,
   Block                              -- V  [V is=2 [KW["{"] _1] KW["}"]],
   Block.1:iter-star                  -- _1,
   Assign                             -- H hs=0[H[_1] KW[";"]],
   Stat                               -- H hs=0[H[_1] KW[";"]],
   Return                             -- H[KW["return"] H hs=0[H[_1] KW[";"]]],
   ReturnEmpty												-- H[KW["return"] KW[";"]],
   Cancel                             -- H[KW["cancel"] H hs=0[H[_1] KW[";"]]],
   GoTo							              	  -- H[KW["goto"] H hs=0[H[_1] KW[";"]]],
   Schedule	          							  -- KW["schedule"] _1 KW["for"] _2,
   ScheduleNoFor       							  -- KW["schedule"] _1,
   VarDeclInit                        -- H[KW["var"] _1 KW[":"] _2 KW[":="] _3 KW[";"]],
   VarDeclInitInferred                -- KW["var"] _1 KW[":="] _2 KW[";"],
   VarDecl                            -- H[KW["var"] _1 KW[":"] _2 KW[";"]],
   If                                 -- V[H[KW["if"] KW["("] _1 KW[")"]] _2 KW["else"] _3],
   IfNoElse                           -- H[KW["if"] KW["("] _1 KW[")"]] _2,

   Case                               -- V[V is=2[ H[KW["case"] KW["("] _1 KW[")"] KW["{"]] _2] KW["}"]],
   Case.2:iter-star                   -- _1,
   CaseAlt                            -- _1 _2,
   CaseDefault                        -- KW["default"] _1,
  

   Filter                             -- KW["where"] _1 KW["order"] KW["by"] _2 _3,
   FilterNoOrderByNoLimit             -- KW["where"] _1,
   FilterNoWhereNoLimit               -- KW["order"] KW["by"] _1, 
   FilterNoLimit                      -- KW["where"] _1 KW["order"] KW["by"] _2,
   FilterNoOrderBy                    -- KW["where"] _1 _2,
   Filter                             -- KW["order"] KW["by"] _1 _2,
   Filter                             -- _1,
   OrderNonSpecific                   -- _1,
   OrderAscending                     -- _1 KW["asc"],
   OrderDescending                    -- _1 KW["desc"],
   Limit                              -- KW["limit"] _1 KW["offset"] _2,

   ForStmt                            -- V[H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"] ] _5],
   ForStmt.5:iter-star                -- _1,
   ForStmtNoFilter                    -- V[H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] ] _4],
   ForAllStmt                         -- V[H[KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"] ] _4],
   ForAllStmt.4:iter-star             -- _1,
   ForAllStmtNoFilter                 -- V[H[KW["for"] KW["("] _1 KW[":"] _2 KW[")"] ] _3],

   ForExp                             -- H[KW["["] _1 KW["|"] _2 KW[":"] _3 KW["in"] _4 _5 KW["]"]],
   ForExpNoFilter                     -- H[KW["["] _1 KW["|"] _2 KW[":"] _3 KW["in"] _4 KW["]"]],
   AndForExp                          -- KW["And"] _1,
   OrForExp                           -- KW["Or"] _1,
   Rules                              -- V  [H  [KW["rules"]] _1],
   Rules.1:iter-star                  -- _1,
   Equation                           -- H[_1 KW["="] _2],
   Int                                -- _1,
   Long                               -- _1,
   Float                              -- _1,
   String                             -- H hs=0[ _1 ],
   Var                                -- _1,
   ExternalScopeVar                   -- KW["externalscope"] KW["."] _1,
   FieldAccess                        -- H hs=0[_1 KW["."] _2],
   ObjectCreation                     -- H hs=0[_1 KW["{"] H[_2] KW["}"]],
   ObjectCreation.2:iter-star         -- _1,
   Assignment                         -- H[_1 KW[":="] _2],
   PropertyAssignment								  -- H[_1 KW[":="] _2],
   PropertyValue											-- _1,
   PropertyValueList									-- H[KW["["] _1 KW["]"]],
   PropertyValueList.1:iter-star			-- _1,
   PropertyValueList.1:iter-star-sep				--    H hs=0[_1 KW[","]],
   ObjectPropertyAssignment					  -- H[_1 KW[":="] _2],
   MapCreation                        -- V  [V vs=2 [KW["["] _1] KW["]"]],
   MapCreation.1:iter-star            -- _1,
   Mapping                            -- _1 KW["->"] _2,
   ListCreation                       -- H hs=0[KW["["] H[_1] KW["]"]],
   ListCreation.1:iter-star-sep       -- H hs=0[_1 KW[","]],
   SetCreation                        -- H hs=0[KW["{"] H[_1] KW["}"]],
   SetCreation.1:iter-star-sep        -- H hs=0[_1 KW[","]],
   TypedListCreation                  -- H hs=0[KW["List"] KW["<"] H[_1] KW[">"] KW["("] _2 KW[")"]],
   TypedListCreation.2:iter-star-sep  -- H hs=0[_1 KW[","]],
   TypedSetCreation                   -- H hs=0[KW["Set"] KW["<"] H[_1] KW[">"] KW["("] _2 KW[")"]],
   TypedSetCreation.2:iter-star-sep   -- H hs=0[_1 KW[","]],
   ThisCall                           -- H hs=0[_1 KW["("] H[_2] KW[")"]],
   ThisCall.2:iter-star-sep           -- H hs=0[_1 KW[","]],
   Call                               -- H hs=0[_1 KW["."] _2 KW["("] H[_3] KW[")"]],
   Call.3:iter-star-sep               -- H hs=0[_1 KW[","]],
   InColl                             -- _1 KW["in"] _2,
   Eq                                 -- _1 KW["=="] _2,
   NotEq                              -- _1 KW["!="] _2,
   LargerThan                         -- _1 KW[">"] _2,
   LargerThanOrEqual                  -- _1 KW[">="] _2,
   SmallerThan                        -- _1 KW["<"] _2,
   SmallerThanOrEqual                 -- _1 KW["<="] _2,
   Add                                -- _1 KW["+"] _2,
   Sub                                -- _1 KW["-"] _2,
   Mul                                -- _1 KW["*"] _2,
   Mod                                -- _1 KW["%"] _2,
   Div                                -- _1 KW["/"] _2,
   And                                -- _1 KW["&&"] _2,
   Or                                 -- _1 KW["||"] _2,
   Not                                -- KW["!"] _1,
   IsA                                -- _1 KW["is"] KW["a"] _2,
   Cast                               -- H[_1 KW["as"] _2],
   None                               -- KW["None()"], %% Shoudl never apear


    %%access control syntax
   ValidationAnnoLength                         -- KW["length"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoMinLength                      -- KW["minlength"] KW["("] _1 KW[")"],
   ValidationAnnoMaxLength                      -- KW["maxlength"] KW["("] _1 KW[")"],
   ValidationAnnoNotEmpty                       -- KW["notempty"],
   ValidationAnnoEmail                          -- KW["email"],
   ValidationAnnoCreditCardNumber               -- KW["creditcardnumber"],
   ValidationAnnoEAN                            -- KW["EAN"],
   ValidationAnnoPattern                        -- KW["pattern"] KW["("] _1 KW[")"],
   ValidationAnnoPatternWithFlags               -- KW["pattern"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoPatternWithFlags.2:iter-star   -- _1,
   FlagCanonEq                                  -- KW["canonicalequivalence"],
   FlagCaseInsensitive                          -- KW["caseinsensitive"],
   FlagComments                                 -- KW["comments"],
   FlagDotAll                                   -- KW["dotall"],
   FlagLiteral                                  -- KW["literal"],
   FlagMultiline                                -- KW["multiline"],
   FlagUnicodeCase                              -- KW["unicodecase"],
   FlagUnixLines                                -- KW["unixlines"],
   ValidationAnnoMax                            -- KW["max"] KW["("] _1 KW[")"],
   ValidationAnnoMin                            -- KW["min"] KW["("] _1 KW[")"],
   ValidationAnnoRange                          -- KW["range"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoMinRange                       -- KW["minrange"] KW["("] _1 KW[")"],
   ValidationAnnoMaxRange                       -- KW["maxrange"] KW["("] _1 KW[")"],
   ValidationAnnoDigits                         -- KW["digits"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoPast                           -- KW["past"],
   ValidationAnnoFuture                         -- KW["future"],
   ValidationAnnoSize                           -- KW["size"] KW["("] _1 KW[","] _2 KW[")"],
   ValidationAnnoMinSize                        -- KW["minsize"] KW["("] _1 KW[")"],
   ValidationAnnoMaxSize                        -- KW["maxsize"] KW["("] _1 KW[")"],
   ValidationAnnoNotNull                        -- KW["notnull"],
   ValidationAnnoAssertTrue                     -- KW["asserttrue"],
   ValidationAnnoAssertFalse                    -- KW["assertfalse"],
   ValidationAnnoValid                          -- KW["valid"],
   AccessControlDefinition                      -- V is=2[ H[KW["access"] KW["control"] KW["rules"]] _1 _2],
   AccessControlDefinition.1:opt                -- _1,
   AccessControlDefinition.2:iter-star          -- _1,
   AccessControlDefinition                      -- V [ V is=2[H[KW["access"] KW["control"] KW["rules"] KW["{"]] _1 _2] KW["}"] ],
   AccessControlDefinition.1:opt                -- _1,
   AccessControlDefinition.2:iter-star          -- _1,
   AccessControlPrincipal                       -- KW["principal"] KW["is"] _1 KW["with"] KW["credentials"] _2,
   AccessControlPrincipal.2:iter-sep            -- _1 KW[","],
   AccessControlPrincipal                       -- KW["principal"] KW["is"] _1 KW["with"] KW["credentials"] _2,
   AccessControlPrincipal.2:iter-sep            -- _1 KW[","],
   AccessControlRule                            -- V[ V is=2[H[KW["rule"] _1 _2 KW["("] _3 KW[")"] KW["{"]] H[_4] H[_5]] KW["}"]],
   AccessControlRule.5:iter-star                -- _1,
   AccessControlRule                            -- V[ V is=2[H[KW["rules"] _1 _2 KW["("] _3 KW[")"] KW["{"]] H[_4] H[_5]] KW["}"]],
   AccessControlRule.5:iter-star                -- _1,
   MatchArgs                                    -- H[_1 _2],
   MatchArgs.1:iter-star-sep                    -- _1 KW[","],
   MatchArgs.2:opt                              -- _1,
   MatchArgs                                    -- H[_1 _2],
   MatchArgs.1:iter-star-sep                    -- _1 KW[","],
   MatchArgs.2:opt                              -- _1,
   Predicate                                    -- KW["predicate"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   Predicate.2:iter-star-sep                    -- _1 KW[","],
   Predicate                                    -- KW["predicate"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   Predicate.2:iter-star-sep                    -- _1 KW[","],
   AccessControlPointcutElement                 -- _1 _2 KW["("] _3 _4 KW[")"],
   AccessControlPointcutElement.3:iter-star-sep -- _1 KW[","],
   AccessControlPointcutElement.4:opt           -- _1,
   AccessControlPointcut                        -- KW["pointcut"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   AccessControlPointcut.2:iter-star-sep        -- _1 KW[","],
   AccessControlPointcut.3:iter-star-sep        -- _1 KW[","],
   ACPolicy                                     -- KW["access"] KW["control"] KW["policy"] _1,
   PolicyAnd                                    -- _1 KW["AND"] _2,
   PolicyOr                                     -- _1 KW["OR"] _2,
   Name                                         -- _1,
   
   %%input validation
   Validator                                    -- KW["validator"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"] KW[":"] _4,
   Validator.2:iter-star-sep                    -- _1 KW[","],
   Validator.3:iter-star                        -- _1,
   ValidateCall                                 -- KW["validate"] _1 KW["("] _2 KW[")"],
   
   %%styling
   ThemeDefinition                              -- KW["theme"] _1 _2 KW["("] KW[")"] KW["{"] _3 KW["}"],
   ThemeDefinition.3:iter-star                  -- _1,
   StyleSection                                 -- KW["style"] _1 _2,
   StyleSection.2:iter-star                     -- _1,
   StyleDefinition                              -- V[ V is=2[ H[ _1 KW["{"] ] _2 ] KW["}" ] ],
   StyleDefinition.2:iter-star                  -- _1,
   Selector                                     -- H hs=1[ _1 _2 ],
   Selector.2:iter-star                         -- _1,
   Selector.2:iter-star.1:seq                   -- H hs=1[ _1 _2 _3 ],
   Selector.2:iter-star.1:seq.3:opt             -- _1,
   SimpleSelector                               -- H hs=1[ _1 _2 ],
   IdSimpleSelector                             -- H hs=0[ KW["#"] _1 ],
   ElemSimpleSelector                           -- _1,
   ElemSimpleAttrSelector												-- _1 _2,
   ElemSimpleAttrSelector.2:iter-star					 	-- _1,
   ElemClassAttrSelector												-- _1 _2 _3,
   ElemClassAttrSelector.3:iter-star					 	-- _1,
   ClassSimpleSelector                          -- H hs=0[ KW["."] _1 ],
   UniversalSimpleSelector					    -- KW["*"],
   SimpleSelector                               -- _1,
   SelectorAttribute                            -- H hs=0[ KW[":"] _1 ],
   ChildCombinator                              -- KW[">"],
   DescendantCombinator                         -- KW[">>"],
   MatchDefinition                              -- H hs=0[ _1 KW["("] _2 KW[")"] ],
   StyleVarDecl                                 -- H hs=1[ KW["const"] _1 KW[":"] _2 KW[";"] ],
   StyleVarDeclInit                             -- H hs=1[ KW["const"] _1 KW[":"] _2 KW[":="] _3 KW[";"] ],
   StyleDeclaration                             -- H[ H hs=0[ _1 ] KW[":="] H hs=0[ _2 KW[";"] ] ],
   StyleProperty                                -- _1,
   StylePropertyValue                           -- H hs=0[ _1 KW["."] _2 ],
   StyleVar                                     -- _1,
   StyleValueExpression                         -- H hs=0[ H hs=0[ KW["("] _1 KW[")"] ] KW["."] _2 ],
   StyleAdd                                     -- H hs=1[ _1 KW["+"] _2],
   StyleSub                                     -- H hs=1[ _1 KW["-"] _2],
   StyleMul                                     -- H hs=1[ _1 KW["*"] _2],
   StyleDiv                                     -- H hs=1[ _1 KW["/"] _2],
   StyleValue                                   -- H hs=0[ _1 _2 ],
   StyleValue                                   -- _1,
   StyleValue                                   -- H hs=0[ _1 _2 ],
   StyleValue.2:iter                            -- _1,
   StyleValue                                   -- _1,
   StyleValue                                   -- _1,
   StyleValue                                   -- _1,
   StyleValueExtension                          -- H hs=0[ KW["."] _1 ],
   StyleSort                                    -- H hs=0[ _1 _2],
   StyleSort                                    -- _1,
   Uri                                          -- KW["url"] KW["("] _1 KW[")"],
   Hash                                         -- KW["#"] _1,
   LayoutSection                                -- V  [H  [KW["layout"]] _1],
   LayoutSection.1:iter-star                    -- _1,
   LayoutDefinition                             -- _1 _2 KW["{"] _3 KW["}"],
   LayoutDefinition.3:iter-star                 -- _1,
   LayoutDefinition                              -- V[ V is=2[ H[ _1 KW["{"] ] _2 ] KW["}" ] ],
   LayoutDefinition.2:iter-star                 -- _1,
   FloatStatement                               -- H hs=1[ KW["float"] KW["{"] _1 KW["}"] ],
   FloatStatement.1:iter-star                   -- _1,
   LayoutStatement                              -- _1 KW[";"],
   NamedLayoutExpression                        -- H hs=1[ H hs=0[ _1 KW[":"] ] KW["["] _2 KW["]"] ],
   LayoutExpression                             -- _1,
   LayoutExpression                             -- _1,

   %% Procedures 
   Procedures                                   -- V is=2 vs=1 [H[KW["procedures"] _1] _2],
   Procedure                                    -- V[V is=2[H[KW["procedure"] _1 KW["("] _2 KW[")"] KW["{"]] _3 ] KW["}"]],
   AutoProcedure                                -- V[V is=2[H[KW["auto"] KW["procedure"] _1 KW["("] _2 KW[")"] KW["{"]] _3 ] KW["}"]],
   Procedure.2:iter-star-sep                    -- _1 KW[","],
   Procedure.3:iter-star                        -- _1,
   ProcedureWho                                 -- V[V is=2[H[KW["who"] KW["{"]] _1] KW["}"]],
   ProcedureWhen                                -- V[V is=2[H[KW["when"] KW["{"]] _1] KW["}"]],
   ProcedureDo                                  -- V[V is=2[H[KW["do"] KW["{"]] _1] KW["}"]],
   ProcedureDone                                -- V[V is=2[H[KW["done"] KW["{"]] _1] KW["}"]],
   ProcedureProcessed                           -- V[KW["processed"] _1],
   ProcedureEnabled                             -- V[V is=2[H[KW["enabled"] KW["{"]] _1] KW["}"]],
   ProcedureDisabled                            -- V[V is=2[H[KW["disabled"] KW["{"]] _1] KW["}"]],
   ProcedureView                                -- V[V is=2[H[KW["view"] KW["{"]] _1] KW["}"]],

   %% Procedure Process
   ProcedureProcess                             -- V[ V is=2[ H[KW["process"] KW["{"] _1] ] KW["}"] ],
   ProcCall                                     -- _1 KW["("] _2 KW[")"],
   ProcSeq                                      -- _1 KW[";"] _2,
   ProcWhile                                    -- KW["while"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   ProcIfNoElse                                 -- KW["if"] KW["("] _1 KW[")"] _2,
   ProcIf                                       -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"] KW["else"] KW["{"] _3 KW["}"],
   ProcXor                                      -- _1 KW["xor"] _2,
   ProcAnd                                      -- _1 KW["and"] _2,
   ProcPlus                                     -- _1 KW["+"] _2,
   ProcRepeatUntil                              -- KW["repeat"] KW["{"] _1 KW["}"] KW["until"] _2,
   RemoveMe                                     -- KW["RemoveMe"],
   ExtendProcedure                              -- V[V is=2[H[KW["extend"] KW["procedure"] _1 KW["("] _2 KW[")"] KW["{"]] _3 ] KW["}"]],
   
   %% Derive
   Derive                                       -- H[KW["derive"] _1 KW["for"] _2 KW["("] _3 KW[")"]],
   Derive.3:iter-star-sep                       -- H[_1 KW[","]],
   Derive                                       -- H[KW["derive"] _1 KW["for"] _2],
   DeriveDefault                                -- _1,
   DeriveMode                                   -- H[_1 KW["("] _2 KW[")"]],
   EditPage                                     -- KW["editPage"],
   EditRows                                     -- KW["editRows"],
   ViewPage                                     -- KW["viewPage"],
   ViewRows                                     -- KW["viewRows"],

   %% string-select-entity
   StringSelectEntity                           -- KW["string-select-entity"] _1 KW["{"] _2 KW["}"],
   StringSelectEntity.2:iter-star-sep           -- _1 KW[","],
   
   None																					-- _1,
   Some																					-- _1,

   %% needs sorting, generated by update-pp.sh
   
   Note.1:iter-star                             -- _1,
   Description.1:iter-star                      -- _1,
   SelectFromListNoProps.3:iter-star            -- _1,
   SelectFromListNoPropsNoElems                 -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"],
   SelectFromListNoProps                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["{"] _3 KW["}"],
   SelectFromListNoProps.3:iter-star            -- _1,
   SelectFromList.4:iter-star                   -- _1,
   SelectFromList.3:iter-star-sep               -- _1 KW[","],
   SelectFromListNoPropsNoElems                 -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"],
   SelectFromListNoElems                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"],
   SelectFromListNoElems.3:iter-star-sep        -- _1 KW[","],
   SelectFromList                               -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"] KW["{"] _4 KW["}"],
   SelectFromList.3:iter-star-sep               -- _1 KW[","],
   SelectFromList.4:iter-star                   -- _1,
   SelectFromListNoProps                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["{"] _3 KW["}"],
   SelectFromListNoProps.3:iter-star            -- _1,
   SelectFromListNoElems.3:iter-star-sep        -- _1 KW[","],
   SelectFromListNoElems                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"],
   SelectFromListNoElems.3:iter-star-sep        -- _1 KW[","],
   SelectFromListNoPropsNoElems                 -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"],
   SelectNoProps.5:iter-star                    -- _1,
   SelectNoPropsNoElems                         -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"],
   SelectNoProps                                -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["{"] _5 KW["}"],
   SelectNoProps.5:iter-star                    -- _1,
   Select.6:iter-star                           -- _1,
   Select.5:iter-star-sep                       -- _1 KW[","],
   SelectFrom                                   -- _1 _2,
   SelectFrom.1:opt                             -- _1,
   Select                                       -- KW["select"] _1 _2,
   Select.1:opt                                 -- _1,
   SelectObject                                 -- KW["object"] KW["("] _1 KW[")"],
   StringSelectEntity                           -- KW["string-select-entity"] _1 KW["{"] _2 KW["}"],
   StringSelectEntity.2:iter-star-sep           -- _1 KW[","],
   Selector                                     -- _1 _2,
   Selector.2:iter-star                         -- _1,
   Selector.2:iter-star.1:seq                   -- _1 _2 _3,
   Selector.2:iter-star.1:seq.3:opt             -- _1,
   SimpleSelector                               -- _1 _2,
   IdSimpleSelector                             -- KW["#"] _1,
   ElemSimpleSelector                           -- _1,
   ElemSimpleAttrSelector                       -- _1 _2,
   ElemSimpleAttrSelector.2:iter                -- _1,
   ElemClassAttrSelector                        -- _1 KW["."] _2 _3,
   ElemClassAttrSelector.3:iter                 -- _1,
   ClassSimpleSelector                          -- KW["."] _1,
   SimpleSelector                               -- _1,
   UniversalSimpleSelector                      -- KW["*"],
   SelectorAttribute                            -- KW[":"] _1,
   SelectAnno                                   -- KW["select"] KW["="] _1,
   SelectNoPropsNoElems                         -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"],
   SelectNoElems                                -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["["] _5 KW["]"],
   SelectNoElems.5:iter-star-sep                -- _1 KW[","],
   Select                                       -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["["] _5 KW["]"] KW["{"] _6 KW["}"],
   Select.5:iter-star-sep                       -- _1 KW[","],
   Select.6:iter-star                           -- _1,
   SelectNoProps                                -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["{"] _5 KW["}"],
   SelectNoProps.5:iter-star                    -- _1,
   SelectFromListNoPropsNoElems                 -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"],
   SelectFromListNoElems                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"],
   SelectFromListNoElems.3:iter-star-sep        -- _1 KW[","],
   SelectFromList                               -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"] KW["{"] _4 KW["}"],
   SelectFromList.3:iter-star-sep               -- _1 KW[","],
   SelectFromList.4:iter-star                   -- _1,
   SelectFromListNoProps                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["{"] _3 KW["}"],
   SelectFromListNoProps.3:iter-star            -- _1,
   SelectNoElems.5:iter-star-sep                -- _1 KW[","],
   SelectNoElems                                -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["["] _5 KW["]"],
   SelectNoElems.5:iter-star-sep                -- _1 KW[","],
   SelectNoPropsNoElems                         -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"],
   LimitNoLimit                                 -- KW["offset"] _1,
   LimitNoOffset                                -- KW["limit"] _1,
   FilterNoWhereNoOrderBy                       -- _1,
   FilterNoWhereNoLimit                         -- KW["order"] KW["by"] _1,
   FilterNoWhere                                -- KW["order"] KW["by"] _1 _2,
   FilterNoWhereNoOrderBy                       -- _1,
   HqlQuery.1:parameterized-sort                -- _1 _2,
   HqlQueryLimit                                -- _1 KW["limit"] _2,
   HqlQueryLimitOffset                          -- _1 KW["limit"] _2 KW[","] _3,
   WhileStmt                                    -- KW["while"] KW["("] _1 KW[")"] _2,
   ForCountStmt                                 -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] _4,
   Function.2:iter-star-sep                     -- _1 KW[","],
   ExtendSessionEntity.3:iter-star              -- _1,
   ExtendSessionEntity.2:iter-star              -- _1,
   ExtendEntity.3:iter-star                     -- _1,
   ExtendEntity.2:iter-star                     -- _1,
   EntityNoSuper.2:iter-star                    -- _1,
   Entity.3:iter-star                           -- _1,
   SessionEntity.3:iter-star                    -- _1,
   ExtendEntity.3:iter-star                     -- _1,
   ExtendSessionEntity.3:iter-star              -- _1,
   GlobalsDefinition.1:iter-star                -- _1,
   ValidationErrors                             -- KW["validationErrors"] KW["("] _1 KW[")"],
   ValidationErrors                             -- KW["validationErrors"] KW["("] KW[")"],
   ValidationErrors                             -- KW["validationErrors"] KW["("] _1 KW[")"],
   ValidationErrors                             -- KW["validationErrors"] KW["("] KW[")"],
   NamedValidateStatement                       -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"] KW[";"],
   ValidateStatement                            -- KW["validate"] KW["("] _1 KW[","] _2 KW[")"] KW[";"],
   NamedValidateStatement                       -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"] KW[";"],
   NamedValidateAnno                            -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"],
   ValidateAnno                                 -- KW["validate"] KW["("] _1 KW[","] _2 KW[")"],
   NamedValidateAnno                            -- _1 KW[":"] KW["validate"] KW["("] _2 KW[","] _3 KW[")"],
   ValidateDeleteAnno                           -- KW["validatedelete"] KW["("] _1 KW[","] _2 KW[")"],
   ValidateUpdateAnno                           -- KW["validateupdate"] KW["("] _1 KW[","] _2 KW[")"],
   ValidateCreateAnno                           -- KW["validatecreate"] KW["("] _1 KW[","] _2 KW[")"],
   IgnoreAccessControl                          -- KW["ignore-access-control"],
   EnumValue                                    -- _1 KW["("] _2 KW[")"],
   PagedForNoFilter.5:iter-star                 -- _1,
   PagedForNoFilter                             -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForNoFilter.5:iter-star                 -- _1,
   PagedFor.6:iter-star                         -- _1,
   PagedForAll                                  -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForAll.5:iter-star                      -- _1,
   PagedForAllNoFilter                          -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star              -- _1,
   PagedFor                                     -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW["per"] _5 KW[")"] KW["{"] _6 KW["}"],
   PagedFor.6:iter-star                         -- _1,
   PagedForNoFilter                             -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForNoFilter.5:iter-star                 -- _1,
   PagedForAllNoFilter.4:iter-star              -- _1,
   PagedForAllNoFilter                          -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star              -- _1,
   PagedForAll.5:iter-star                      -- _1,
   PagedForAll                                  -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForAll.5:iter-star                      -- _1,
   PagedForAllNoFilter                          -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star              -- _1,
   DeriveBodyElement.2:iter-star                -- _1,
   DeriveBodyElement                            -- _1 KW["{"] _2 KW["}"],
   DeriveBodyElement.2:iter-star                -- _1,
   DeriveBody.1:iter-star                       -- _1,
   DeriveBody                                   -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   DeriveBody.1:iter-star                       -- _1,
   DeriveBodyElement                            -- _1 KW["{"] _2 KW["}"],
   DeriveBodyElement.2:iter-star                -- _1,
   Derive                                       -- KW["derive"] _1 KW["from"] _2 KW["for"] KW["("] _3 KW[")"],
   Derive.3:iter-star-sep                       -- _1 KW[","],
   Derive                                       -- KW["derive"] _1 KW["from"] _2,
   Derive                                       -- KW["derive"] _1 KW["from"] _2 KW["for"] KW["("] _3 KW[")"] _4,
   Derive.3:iter-star-sep                       -- _1 KW[","],
   Derive                                       -- KW["derive"] _1 KW["from"] _2 _3,
   Derive                                       -- KW["derive"] _1 _2,
   DeriveDefault                                -- _1,
   DeriveMode                                   -- _1 KW["("] _2 KW[")"],
   DeriveBody                                   -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   DeriveBody.1:iter-star                       -- _1,
   DeriveBodyElement                            -- _1 KW["{"] _2 KW["}"],
   DeriveBodyElement.2:iter-star                -- _1,
   DerivedProperty                              -- _1 _2 _3 KW["("] _4 KW[")"] KW[":="] _5,
   DerivedProperty.4:iter-star-sep              -- _1 KW[","],
   DerivedPropertyNoAnno                        -- _1 _2 _3 KW[":="] _4,
   ProcedureView.1:iter-star                    -- _1,
   ExtendProcedure.3:iter-star                  -- _1,
   AutoProcedure.3:iter-star                    -- _1,
   MDNavigate.1:opt                             -- _1,
   MDCol.1:opt                                  -- _1,
   MDRowNoCols.1:opt                            -- _1,
   MDRow.1:opt                                  -- _1,
   MDBlock.1:opt                                -- _1,
   MDHeader.1:opt                               -- _1,
   MDSpacer.1:opt                               -- _1,
   MDListItemMulti.1:opt                        -- _1,
   MDListItem.1:opt                             -- _1,
   Path.1:iter-sep                              -- _1 KW["."],
   Path                                         -- _1,
   Path.1:iter-sep                              -- _1 KW["."],
   Empty                                        -- KW["empty"],
   ValidationAnnoNotEmpty                       -- KW["notempty"],
   ReturnEmpty                                  -- KW["return"] KW[";"],
   Paren.1:iter-sep                             -- _1 KW[","],
   Paren                                        -- KW["("] _1 KW[")"],
   Paren.1:iter-sep                             -- _1 KW[","],
   Indices                                      -- KW["indices"] KW["("] _1 KW[")"],
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   Elements                                     -- KW["elements"] KW["("] _1 KW[")"],
   Sum                                          -- KW["sum"] KW["("] _1 KW[")"],
   NumParam                                     -- _1,
   IdParam                                      -- _1,
   AjaxActionIdParam                            -- _1 _2 KW["<<"] _3 KW[";"],
   UMinus                                       -- KW["-"] _1,
   Divide                                       -- _1 KW["/"] _2,
   Multiply                                     -- _1 KW["*"] _2,
   Minus                                        -- _1 KW["-"] _2,
   UMinus                                       -- KW["-"] _1,
   Plus                                         -- _1 KW["+"] _2,
   ProcPlus                                     -- _1 KW["+"] _2,
   Concat                                       -- _1 KW["||"] _2,
   NotMemberOf                                  -- _1 KW["not"] KW["member"] KW["of"] _2,
   MemberOf                                     -- _1 KW["member"] KW["of"] _2,
   NotMemberOf                                  -- _1 KW["not"] KW["member"] KW["of"] _2,
   NotIn                                        -- _1 KW["not"] KW["in"] _2,
   InnerJoin                                    -- KW["inner"],
   InClassDeclaration                           -- _1 KW["in"] KW["class"] _2,
   InCollection                                 -- KW["in"] KW["("] _1 KW[")"] _2,
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   In                                           -- _1 KW["in"] _2,
   NotIn                                        -- _1 KW["not"] KW["in"] _2,
   Indices                                      -- KW["indices"] KW["("] _1 KW[")"],
   FlagCaseInsensitive                          -- KW["caseinsensitive"],
   StyleVarDeclInit                             -- KW["const"] _1 KW[":"] _2 KW[":="] _3 KW[";"],
   InverseAnno                                  -- KW["inverse"] KW["="] _1 KW["."] _2,
   InverseSlaveAnno                             -- KW["inverseSlave"] KW["="] _1 KW["."] _2,
   InlineAnno                                   -- KW["inline"] KW["("] _1 KW[")"],
   InlineAnno.1:iter-star-sep                   -- _1 KW[","],
   VarDeclInit                                  -- KW["var"] _1 KW[":"] _2 KW[":="] _3 KW[";"],
   VarDeclInitInferred                          -- KW["var"] _1 KW[":="] _2 KW[";"],
   VarDeclInit                                  -- KW["var"] _1 KW[":"] _2 KW[":="] _3,
   VarDeclInitInferred                          -- KW["var"] _1 KW[":="] _2,
   ForCountStmt                                 -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] _4,
   Int                                          -- _1,
   InColl                                       -- _1 KW["in"] _2,
   InlineAction                                 -- KW["action"] _1,
   InlineTemplateCall                           -- KW["template"] KW["{"] _1 KW["}"],
   InlineTemplateCall.1:iter-star               -- _1,
   InitAction                                   -- KW["init"] _1,
   LT                                           -- _1 KW["<"] _2,
   GT                                           -- _1 KW[">"] _2,
   NOTLIKE                                      -- _1 KW["not"] KW["like"] _2,
   LIKE                                         -- _1 KW["like"] _2,
   NOTLIKE                                      -- _1 KW["not"] KW["like"] _2,
   SQLNE                                        -- _1 KW["<>"] _2,
   NE                                           -- _1 KW["!="] _2,
   SQLNE                                        -- _1 KW["<>"] _2,
   IS                                           -- _1 KW["is"] _2,
   EQ                                           -- _1 KW["="] _2,
   QueryNot                                     -- KW["not"] _1,
   QueryAnd                                     -- _1 KW["and"] _2,
   QueryOr                                      -- _1 KW["or"] _2,
   AliasedExpression.2:opt                      -- _1,
   AliasedExpression                            -- _1 _2,
   AliasedExpression.2:opt                      -- _1,
   WhereClause                                  -- KW["where"] _1,
   HavingClause                                 -- KW["having"] _1,
   Descending                                   -- KW["desc"],
   Descending                                   -- KW["descending"],
   OrderDescending                              -- _1 KW["desc"],
   Ascending                                    -- KW["asc"],
   Ascending                                    -- KW["ascending"],
   OrderAscending                               -- _1 KW["asc"],
   OrderElement.2:opt                           -- _1,
   OrderElement                                 -- _1 _2,
   OrderElement.2:opt                           -- _1,
   OrderByClause.1:iter-sep                     -- _1 KW[","],
   OrderByClause                                -- V  [H  [KW["order"] KW["by"]] _1],
   OrderByClause.1:iter-sep                     -- _1 KW[","],
   GroupBy.2:opt                                -- _1,
   GroupBy.1:iter-sep                           -- _1 KW[","],
   GroupBy                                      -- KW["group"] KW["by"] _1 _2,
   GroupBy.1:iter-sep                           -- _1 KW[","],
   GroupBy.2:opt                                -- _1,
   PropertyFetch                                -- KW["fetch"] KW["all"] KW["properties"],
   AsAlias                                      -- KW["as"] _1,
   Alias                                        -- _1,
   AliasedExpression                            -- _1 _2,
   AliasedExpression.2:opt                      -- _1,
   AsAlias                                      -- KW["as"] _1,
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   InCollection                                 -- KW["in"] KW["("] _1 KW[")"] _2,
   InCollectionElements                         -- _1 KW["in"] KW["elements"] KW["("] _2 KW[")"],
   InClassDeclaration                           -- _1 KW["in"] KW["class"] _2,
   FromClass.3:opt                              -- _1,
   FromClass.2:opt                              -- _1,
   FromClass                                    -- _1 _2 _3,
   FromClass.2:opt                              -- _1,
   FromClass.3:opt                              -- _1,
   WithClause                                   -- KW["with"] _1,
   Fetch                                        -- KW["fetch"],
   PropertyFetch                                -- KW["fetch"] KW["all"] KW["properties"],
   FromJoin.6:opt                               -- _1,
   FromJoin.5:opt                               -- _1,
   FromJoin.4:opt                               -- _1,
   FromJoin.2:opt                               -- _1,
   FromJoin.1:opt                               -- _1,
   FromJoin                                     -- _1 KW["join"] _2 _3 _4 _5 _6,
   FromJoin.1:opt                               -- _1,
   FromJoin.2:opt                               -- _1,
   FromJoin.4:opt                               -- _1,
   FromJoin.5:opt                               -- _1,
   FromJoin.6:opt                               -- _1,
   InnerJoin                                    -- KW["inner"],
   FullJoin                                     -- KW["full"],
   RightOuterJoin                               -- KW["right"] KW["outer"],
   LeftOuterJoin                                -- KW["left"] KW["outer"],
   RightJoin                                    -- KW["right"],
   LeftJoin                                     -- KW["left"],
   FromRangeJoin.2:opt                          -- _1,
   FromRangeJoin                                -- _1 _2,
   FromRangeJoin.2:opt                          -- _1,
   FromClause.1:iter-sep                        -- _1 KW[","],
   FromClause                                   -- V  [H  [KW["from"]] _1],
   FromClause.1:iter-sep                        -- _1 KW[","],
   SelectObject                                 -- KW["object"] KW["("] _1 KW[")"],
   NewExpression                                -- KW["new"] _1 KW["("] _2 KW[")"],
   Distinct                                     -- KW["distinct"],
   Select.1:opt                                 -- _1,
   SelectFrom                                   -- _1 _2,
   SelectFrom.1:opt                             -- _1,
   Select                                       -- KW["select"] _1 _2,
   Select.1:opt                                 -- _1,
   SelectObject                                 -- KW["object"] KW["("] _1 KW[")"],
   StringSelectEntity                           -- KW["string-select-entity"] _1 KW["{"] _2 KW["}"],
   StringSelectEntity.2:iter-star-sep           -- _1 KW[","],
   Selector                                     -- _1 _2,
   Selector.2:iter-star                         -- _1,
   Selector.2:iter-star.1:seq                   -- _1 _2 _3,
   Selector.2:iter-star.1:seq.3:opt             -- _1,
   SimpleSelector                               -- _1 _2,
   IdSimpleSelector                             -- KW["#"] _1,
   ElemSimpleSelector                           -- _1,
   ElemSimpleAttrSelector                       -- _1 _2,
   ElemSimpleAttrSelector.2:iter                -- _1,
   ElemClassAttrSelector                        -- _1 KW["."] _2 _3,
   ElemClassAttrSelector.3:iter                 -- _1,
   ClassSimpleSelector                          -- KW["."] _1,
   SimpleSelector                               -- _1,
   UniversalSimpleSelector                      -- KW["*"],
   SelectorAttribute                            -- KW[":"] _1,
   SelectAnno                                   -- KW["select"] KW["="] _1,
   SelectNoPropsNoElems                         -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"],
   SelectNoElems                                -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["["] _5 KW["]"],
   SelectNoElems.5:iter-star-sep                -- _1 KW[","],
   Select                                       -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["["] _5 KW["]"] KW["{"] _6 KW["}"],
   Select.5:iter-star-sep                       -- _1 KW[","],
   Select.6:iter-star                           -- _1,
   SelectNoProps                                -- KW["select"] KW["("] _1 KW[":"] _2 KW[","] _3 KW[","] _4 KW[")"] KW["{"] _5 KW["}"],
   SelectNoProps.5:iter-star                    -- _1,
   SelectFromListNoPropsNoElems                 -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"],
   SelectFromListNoElems                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"],
   SelectFromListNoElems.3:iter-star-sep        -- _1 KW[","],
   SelectFromList                               -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"] KW["{"] _4 KW["}"],
   SelectFromList.3:iter-star-sep               -- _1 KW[","],
   SelectFromList.4:iter-star                   -- _1,
   SelectFromListNoProps                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["{"] _3 KW["}"],
   SelectFromListNoProps.3:iter-star            -- _1,
   SelectFrom.1:opt                             -- _1,
   SelectFrom                                   -- _1 _2,
   SelectFrom.1:opt                             -- _1,
   SelectFromListNoPropsNoElems                 -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"],
   SelectFromListNoElems                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"],
   SelectFromListNoElems.3:iter-star-sep        -- _1 KW[","],
   SelectFromList                               -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["["] _3 KW["]"] KW["{"] _4 KW["}"],
   SelectFromList.3:iter-star-sep               -- _1 KW[","],
   SelectFromList.4:iter-star                   -- _1,
   SelectFromListNoProps                        -- KW["select"] KW["("] _1 KW["from"] _2 KW[")"] KW["{"] _3 KW["}"],
   SelectFromListNoProps.3:iter-star            -- _1,
   QueryRule.4:opt                              -- _1,
   QueryRule.3:opt                              -- _1,
   QueryRule.2:opt                              -- _1,
   QueryRule                                    -- _1 _2 _3 _4,
   QueryRule.2:opt                              -- _1,
   QueryRule.3:opt                              -- _1,
   QueryRule.4:opt                              -- _1,
   QueryUnion                                   -- _1 KW["union"] _2,

   Attribute                                    -- _1 KW["="] _2,
   XMLElement                                   -- KW["<"] _1 _2 KW[">"] _3 KW["</"] _4 KW[">"],
   XMLElement.2:iter-star                       -- _1,
   XMLElement.3:iter-star                       -- _1,
   XMLEmptyElement                              -- KW["<"] _1 _2 KW["/>"],
   XMLEmptyElement.2:iter-star                  -- _1,


%% Webdsl-Regex

   RegexId                   -- H hs=0 [ _1],
   DoubleQuote               -- H hs=0 [ KW["\""]],
   QuotedAtom                -- H hs=0 [ KW["\\Q"] _1 KW["\\E"]],
   Quoted                    -- H hs=0 [ KW["\\"] _1],
   Newline                   -- H hs=0 [ KW["\\n"]],
   Newline                   -- H hs=0 [ KW["\\n"]],
   Tab                       -- H hs=0 [ KW["\\t"]],
   Tab                       -- H hs=0 [ KW["\\t"]],
   WhiteSpace                -- H hs=0 [ KW["Space"]],
   WhiteSpaceChar            -- H hs=0 [ KW["\\s"]],
   NonWhiteSpaceChar         -- H hs=0 [ KW["\\S"]],
   Space                     -- H hs=0 [ KW["\\ "]],
   WhiteSpaceChar            -- H hs=0 [ KW["\\s"]],
   NonWhiteSpaceChar         -- H hs=0 [ KW["\\S"]],
   Space                     -- H hs=0 [ KW["\\ "]],
   BackReference             -- H hs=0 [ KW["\\"] _1],
   EndInputFinalBoundry      -- H hs=0 [ KW["\\z"]],
   EndInputBoundry           -- H hs=0 [ KW["\\Z"]],
   PrevMatchEndBoundry       -- H hs=0 [ KW["\\G"]],
   InputBeginBoundry         -- H hs=0 [ KW["\\A"]],
   NonWordBoundry            -- H hs=0 [ KW["\\B"]],
   WordBoundry               -- H hs=0 [ KW["\\b"]],
   NonWordBoundry            -- H hs=0 [ KW["\\B"]],
   WordBoundry               -- H hs=0 [ KW["\\b"]],
   NonWordBoundry            -- H hs=0 [ KW["\\B"]],
   ControlCharacter          -- H hs=0 [ KW["\\c"] _1],
   NonDigitChar              -- H hs=0 [ KW["\\D"]],
   DigitChar                 -- H hs=0 [ KW["\\d"]],
   NonDigitChar              -- H hs=0 [ KW["\\D"]],
   DigitChar                 -- H hs=0 [ KW["\\d"]],
   NonDigitChar              -- H hs=0 [ KW["\\D"]],
   NonWhiteSpaceChar         -- H hs=0 [ KW["\\S"]],
   WhiteSpaceChar            -- H hs=0 [ KW["\\s"]],
   NonWordChar               -- H hs=0 [ KW["\\W"]],
   WordChar                  -- H hs=0 [ KW["\\w"]],
   NonWordChar               -- H hs=0 [ KW["\\W"]],
   WordChar                  -- H hs=0 [ KW["\\w"]],
   NonWordChar               -- H hs=0 [ KW["\\W"]],
   Escape                    -- H hs=0 [ KW["\\e"]],
   Alarm                     -- H hs=0 [ KW["\\a"]],
   Formfeed                  -- H hs=0 [ KW["\\f"]],
   Return                    -- H hs=0 [ KW["\\r"]],
   DecHexChar                -- H hs=0 [ KW["\\u"] _1],
   HexHexChar                -- H hs=0 [ KW["\\x"] _1],
   OctalChar                 -- H hs=0 [ KW["\\0"] _1],
   CurrencySymbol            -- H hs=0 [ KW["Sc"]],
   UppercaseLetter           -- H hs=0 [ KW["Lu"]],
   GreekBlock                -- H hs=0 [ KW["InGreek"]],
   JavaIsMirrored            -- H hs=0 [ KW["javaMirrored"]],
   JavaIsWhitespace          -- H hs=0 [ KW["javaWhitespace"]],
   JavaIsLowerCase           -- H hs=0 [ KW["javaLowerCase"]],
   JavaIsLowerCase           -- H hs=0 [ KW["javaUpperCase"]],
   WhiteSpace                -- H hs=0 [ KW["Space"]],
   XDigitClass               -- H hs=0 [ KW["XDigit"]],
   CntrlClass                -- H hs=0 [ KW["Cntrl"]],
   BlankClass                -- H hs=0 [ KW["Blank"]],
   PrintClass                -- H hs=0 [ KW["Print"]],
   GraphClass                -- H hs=0 [ KW["Graph"]],
   PunctClass                -- H hs=0 [ KW["Punct"]],
   AlnumClass                -- H hs=0 [ KW["Alnum"]],
   DigitClass                -- H hs=0 [ KW["Digit"]],
   XDigitClass               -- H hs=0 [ KW["XDigit"]],
   AlphaClass                -- H hs=0 [ KW["Alpha"]],
   ASCIIClass                -- H hs=0 [ KW["ASCII"]],
   UpperClass                -- H hs=0 [ KW["Upper"]],
   LowerClass                -- H hs=0 [ KW["Lower"]],
   BracketCharacter          -- H hs=0 [ _1],
   BracketLiteral            -- H hs=0 [ _1],
   Union                     -- H hs=0 [ _1],
   Range.2:alt               -- H hs=0 [_1 _2],
   Range.1:alt               -- H hs=0 [_1 _2],
   Range                     -- H hs=0 [_1 KW["-"] _2],
   NegatedBracketList.1:iter -- H hs=0 [ _1],
   NegatedBracketList        -- H hs=0 [ KW["[^"] _1 KW["]"]],
   BracketList.1:iter        -- H hs=0 [ _1],
   BracketList               -- H hs=0 [ KW["["] _1 KW["]"]],
   QuotedAtom                -- H hs=0 [ KW["\\Q"] _1 KW["\\E"]],
   AtomCharacter             -- H hs=0 [ _1],
   AtomLiteral               -- H hs=0 [ _1],
   CharacterClass            -- H hs=0 [ _1],
   LineEnd                   -- H hs=0 [ KW["$"]],
   LineStart                 -- H hs=0 [ KW["^"]],
   SingleCharacter           -- H hs=0 [ KW["."]],
   RegexCapture              -- H hs=0 [ KW["("] _1 KW[")@{"] _2 KW["}"]],
   PythonCapture             -- H hs=0 [ KW["(?P<"] _1 KW[">"] _2 KW[")"]],
   NegativeLookbehind        -- H hs=0 [ KW["(?<!"] _1 KW[")"]],
   PositiveLookbehind        -- H hs=0 [ KW["(?<="] _1 KW[")"]],
   NegativeLookahead         -- H hs=0 [ KW["(?!"] _1 KW[")"]],
   PositiveLookahead         -- H hs=0 [ KW["(?="] _1 KW[")"]],
   NonCapture                -- H hs=0 [ KW["(?:"] _1 KW[")"]],
   Capture                   -- H hs=0 [ KW["("] _1 KW[")"]],
   NonCapture                -- H hs=0 [ KW["(?:"] _1 KW[")"]],
   PythonCapture             -- H hs=0 [ KW["(?P<"] _1 KW[">"] _2 KW[")"]],
   RegexCapture              -- H hs=0 [ KW["("] _1 KW[")@{"] _2 KW["}"]],
   PossessiveOneOrMore       -- H hs=0 [ KW["++"]],
   PossessiveZeroOrMore      -- H hs=0 [ KW["*+"]],
   PossessiveOnceOrNot       -- H hs=0 [ KW["?+"]],
   PossessiveLowerUpperBound -- H hs=0 [ KW["{"] _1 KW["],"] _2 KW["}+"]],
   PossessiveLowerBound      -- H hs=0 [ KW["{"] _1 KW["],"] KW["}+"]],
   PossessiveExactBound      -- H hs=0 [ KW["{"] _1 KW["}+"]],
   ReluctantOneOrMore        -- H hs=0 [ KW["+?"]],
   ReluctantZeroOrMore       -- H hs=0 [ KW["*?"]],
   ReluctantOnceOrNot        -- H hs=0 [ KW["??"]],
   ReluctantLowerUpperBound  -- H hs=0 [ KW["{"] _1 KW["],"] _2 KW["}?"]],
   ReluctantLowerBound       -- H hs=0 [ KW["{"] _1 KW["],"] KW["}?"]],
   ReluctantExactBound       -- H hs=0 [KW["{"] _1 KW["}?"]],
   GreedyOneOrMore           -- H hs=0 [KW["+"]],
   GreedyZeroOrMore          -- H hs=0 [KW["*"]],
   GreedyOnceOrNot           -- H hs=0 [KW["?"]],
   GreedyLowerUpperBound     -- H hs=0 [KW["{"] _1 KW["],"] _2 KW["}"]],
   GreedyLowerBound          -- H hs=0 [KW["{"] _1 KW["],"] KW["}"]],
   GreedyExactBound          -- H hs=0 [KW["{"] _1 KW["}"]],
   QuantifiedAtom            -- H hs=0 [_1 _2],
   SingleAtom                -- H hs=0 [_1],
   Pieces.1:iter             -- H hs=0 [_1],
   Pieces                    -- H hs=0 [_1],
   TupleBranch               -- H hs=0 [_1 KW["|"] _2],
   SingleBranch              -- H hs=0 [_1],
   RegexPattern              -- H hs=0 [ KW["/"] _1 KW["/"] ],

   ArgDefine.3:iter-star                                  -- _1,
   ArgDefine.2:iter-star-sep                              -- _1 KW[","],
   ArgDefine                                              -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   ArgDefine.2:iter-star-sep                              -- _1 KW[","],
   ArgDefine.3:iter-star                                  -- _1,
   TemplateWith.1:iter-star                               -- _1,
   TemplateWith                                           -- KW["with"] KW["{"] _1 KW["}"],
   TemplateWith.1:iter-star                               -- _1,
   TemplateBody.1:iter-star                               -- _1,
   TemplateBody                                           -- V  [V vs=2 [KW["{"] _1] KW["}"]],
   TemplateBody.1:iter-star                               -- _1,
   TemplateCaseAltDefault.1:iter-star                     -- _1,
   TemplateCaseAltDefault                                 -- KW["default"] KW["{"] _1 KW["}"],
   TemplateCaseAltDefault.1:iter-star                     -- _1,
   TemplateCaseAlt.2:iter-star                            -- _1,
   TemplateCaseAlt                                        -- _1 KW["{"] _2 KW["}"],
   TemplateCaseAlt.2:iter-star                            -- _1,
   TemplateCaseAltDefault                                 -- KW["default"] KW["{"] _1 KW["}"],
   TemplateCaseAltDefault.1:iter-star                     -- _1,
   TemplateCase.2:iter-star                               -- _1,
   TemplateCase                                           -- KW["case"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   TemplateCase.2:iter-star                               -- _1,
   TemplateCaseAlt                                        -- _1 KW["{"] _2 KW["}"],
   TemplateCaseAlt.2:iter-star                            -- _1,
   TemplateCaseAltDefault                                 -- KW["default"] KW["{"] _1 KW["}"],
   TemplateCaseAltDefault.1:iter-star                     -- _1,
   ForCount.4:iter-star                                   -- _1,
   ForCountStmt                                           -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] _4,
   ForCount                                               -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] KW["{"] _4 KW["}"],
   ForCount.4:iter-star                                   -- _1,
   NoSpan                                                 -- KW["no-span"],
   TemplateArg.2:iter-star-sep                            -- _1 KW[","],
   TemplateArgs                                           -- V  [H  [KW["requires"]] _1],
   TemplateArgs.1:iter-star-sep                           -- _1 KW[","],
   TemplateArg                                            -- _1 KW["("] _2 KW[")"],
   TemplateArg.2:iter-star-sep                            -- _1 KW[","],
   TemplateArgs.1:iter-star-sep                           -- _1 KW[","],
   TemplateArgs                                           -- V  [H  [KW["requires"]] _1],
   TemplateArgs.1:iter-star-sep                           -- _1 KW[","],
   Define.5:iter-star                                     -- _1,
   Define                                                 -- KW["define"] _1 _2 KW["("] _3 KW[")"] _4 KW["{"] _5 KW["}"],
   Define.1:iter-star                                     -- _1,
   Define.3:iter-star-sep                                 -- _1 KW[","],
   Define.5:iter-star                                     -- _1,
   ArgDefine                                              -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   ArgDefine.2:iter-star-sep                              -- _1 KW[","],
   ArgDefine.3:iter-star                                  -- _1,
   Placeholder.2:iter-star                                -- _1,
   Placeholder                                            -- KW["placeholder"] _1 KW["{"] _2 KW["}"],
   Placeholder.2:iter-star                                -- _1,
   AjaxClear                                              -- KW["clear"] KW["("] _1 KW[")"],
   AjaxRestyle                                            -- KW["restyle"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxRelocate                                           -- KW["relocate"] KW["("] _1 KW[")"],
   Hide                                                   -- KW["hide"],
   Toggle                                                 -- KW["toggle"],
   Show                                                   -- KW["show"],
   AjaxVisibility                                         -- KW["visibility"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxAppend                                             -- KW["append"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxReplace                                            -- KW["replace"] KW["("] _1 KW[","] _2 KW[")"],
   AjaxStatement                                          -- _1 KW[";"],
   HqlQueryLimitOffset.1:parameterized-sort               -- _1 _2,
   HqlQueryLimit.1:parameterized-sort                     -- _1 _2,
   JSElement                                              -- KW["<"] KW["script"] _1 KW[">"] _2 KW["</"] KW["script"] KW[">"],
   JSString -- _1,
   JSExp -- KW["~"] _1,
   JSTilde -- KW["\\~"],
  
   NativeFunction.2:iter-star-sep                         -- _1 KW[","],
   
   TemplateCaseAlt.1:iter-star-sep                        -- _1 KW[","],
   TemplateCase.1:iter-star-sep                           -- _1 KW[","],
   ForSeparator.1:iter-star                               -- _1,
   ForSeparator                                           -- KW["separated-by"] KW["{"] _1 KW["}"],
   ForSeparator.1:iter-star                               -- _1,
   ForCountStmt                                           -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] _4,
   ForCount                                               -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] KW["{"] _4 KW["}"] _5,
   ForCount.4:iter-star                                   -- _1,
   PagedForAllNoFilter                                    -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star                        -- _1,
   ForAllNoFilter                                         -- KW["for"] KW["("] _1 KW[":"] _2 KW[")"] KW["{"] _3 KW["}"] _4,
   ForAllNoFilter.3:iter-star                             -- _1,
   PagedForAll                                            -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForAll.5:iter-star                                -- _1,
   PagedForAllNoFilter                                    -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star                        -- _1,
   ForAllStmt                                             -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"] _4,
   ForAllStmtNoFilter                                     -- KW["for"] KW["("] _1 KW[":"] _2 KW[")"] _3,
   ForAll                                                 -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"] KW["{"] _4 KW["}"] _5,
   ForAll.4:iter-star                                     -- _1,
   ForAllNoFilter                                         -- KW["for"] KW["("] _1 KW[":"] _2 KW[")"] KW["{"] _3 KW["}"] _4,
   ForAllNoFilter.3:iter-star                             -- _1,
   PagedForNoFilter                                       -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForNoFilter.5:iter-star                           -- _1,
   ForNoFilter                                            -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] KW["{"] _4 KW["}"] _5,
   ForNoFilter.4:iter-star                                -- _1,
   PagedForAll                                            -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForAll.5:iter-star                                -- _1,
   PagedForAllNoFilter                                    -- KW["for"] KW["("] _1 KW[":"] _2 KW["per"] _3 KW[")"] KW["{"] _4 KW["}"],
   PagedForAllNoFilter.4:iter-star                        -- _1,
   PagedFor                                               -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW["per"] _5 KW[")"] KW["{"] _6 KW["}"],
   PagedFor.6:iter-star                                   -- _1,
   PagedForNoFilter                                       -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW["per"] _4 KW[")"] KW["{"] _5 KW["}"],
   PagedForNoFilter.5:iter-star                           -- _1,
   Formfeed                                               -- KW["\\f"],
   ScheduleNoFor                                          -- KW["schedule"] _1 KW[";"],
   ForStmt                                                -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"] _5,
   ForStmtNoFilter                                        -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] _4,
   ForAllStmt                                             -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"] _4,
   ForAllStmtNoFilter                                     -- KW["for"] KW["("] _1 KW[":"] _2 KW[")"] _3,
   ForCountStmt                                           -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] _4,
   ForExp                                                 -- KW["["] _1 KW["for"] KW["("] _2 KW[":"] _3 KW["in"] _4 _5 KW[")"] KW["]"],
   ForExpNoFilter                                         -- KW["["] _1 KW["for"] KW["("] _2 KW[":"] _3 KW["in"] _4 KW[")"] KW["]"],
   ForExp                                                 -- KW["["] _1 KW["|"] _2 KW[":"] _3 KW["in"] _4 _5 KW["]"],
   ForExpNoFilter                                         -- KW["["] _1 KW["|"] _2 KW[":"] _3 KW["in"] _4 KW["]"],
   AndForExp                                              -- KW["And"] _1,
   OrForExp                                               -- KW["Or"] _1,
   For                                                    -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 _4 KW[")"] KW["{"] _5 KW["}"] _6,
   For.5:iter-star                                        -- _1,
   ForNoFilter                                            -- KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] KW["{"] _4 KW["}"] _5,
   ForNoFilter.4:iter-star                                -- _1,
   ForAll                                                 -- KW["for"] KW["("] _1 KW[":"] _2 _3 KW[")"] KW["{"] _4 KW["}"] _5,
   ForAll.4:iter-star                                     -- _1,
   ForAllNoFilter                                         -- KW["for"] KW["("] _1 KW[":"] _2 KW[")"] KW["{"] _3 KW["}"] _4,
   ForAllNoFilter.3:iter-star                             -- _1,
   ForCount                                               -- KW["for"] KW["("] _1 KW[":"] KW["Int"] KW["from"] _2 KW["to"] _3 KW[")"] KW["{"] _4 KW["}"] _5,
   ForCount.4:iter-star                                   -- _1,
   ForSeparator                                           -- KW["separated-by"] KW["{"] _1 KW["}"],
   ForSeparator.1:iter-star                               -- _1,
   DispatchNavigateCallNoArg                              -- _1,
   DispatchNavigateCall.2:iter-star-sep                   -- _1 KW[","],
   DispatchNavigateCall                                   -- _1 KW["("] _2 KW[")"],
   DispatchNavigateCall.2:iter-star-sep                   -- _1 KW[","],
   DispatchNavigateCallNoArg                              -- _1,
   DispatchNavigateButton.2:iter-sep                      -- _1 KW["/"],
   DispatchNavigateButton                                 -- KW["navigate"] KW["("] _1 KW[","] _2 KW[")"],
   DispatchNavigateButton.2:iter-sep                      -- _1 KW["/"],
   DispatchNavigate.2:iter-star                           -- _1,
   DispatchNavigate.1:iter-sep                            -- _1 KW["/"],
   DispatchNavigate                                       -- KW["navigate"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   DispatchNavigate.1:iter-sep                            -- _1 KW["/"],
   DispatchNavigate.2:iter-star                           -- _1,
   DispatchNavigateButton                                 -- KW["navigate"] KW["("] _1 KW[","] _2 KW[")"],
   DispatchNavigateButton.2:iter-sep                      -- _1 KW["/"],
   DispatchNavigateCall                                   -- _1 KW["("] _2 KW[")"],
   DispatchNavigateCall.2:iter-star-sep                   -- _1 KW[","],
   DispatchNavigateCallNoArg                              -- _1,
   DispatchDefault.1:iter-star                            -- _1,
   DispatchDefault                                        -- KW["default"] KW["{"] _1 KW["}"],
   DispatchDefault.1:iter-star                            -- _1,
   DispatchEntity.3:iter-star                             -- _1,
   DispatchEntity                                         -- _1 KW[":"] _2 KW["{"] _3 KW["}"],
   DispatchEntity.3:iter-star                             -- _1,
   DispatchEntryNoArg.2:iter-star                         -- _1,
   DispatchEntryNoArg                                     -- _1 KW["{"] _2 KW["}"],
   DispatchEntryNoArg.2:iter-star                         -- _1,
   DispatchEntry.3:iter-star                              -- _1,
   DispatchEntry.2:iter-star-sep                          -- _1 KW[","],
   DispatchEntry                                          -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   DispatchEntry.2:iter-star-sep                          -- _1 KW[","],
   DispatchEntry.3:iter-star                              -- _1,
   DispatchEntryNoArg                                     -- _1 KW["{"] _2 KW["}"],
   DispatchEntryNoArg.2:iter-star                         -- _1,
   Dispatch.1:iter-star                                   -- _1,
   Dispatch                                               -- KW["dispatch"] KW["{"] _1 _2 KW["}"],
   Dispatch.1:iter-star                                   -- _1,
   DispatchEntry                                          -- _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"],
   DispatchEntry.2:iter-star-sep                          -- _1 KW[","],
   DispatchEntry.3:iter-star                              -- _1,
   DispatchEntryNoArg                                     -- _1 KW["{"] _2 KW["}"],
   DispatchEntryNoArg.2:iter-star                         -- _1,
   DispatchEntity                                         -- _1 KW[":"] _2 KW["{"] _3 KW["}"],
   DispatchEntity.3:iter-star                             -- _1,
   DispatchDefault                                        -- KW["default"] KW["{"] _1 KW["}"],
   DispatchDefault.1:iter-star                            -- _1,
   DispatchNavigate                                       -- KW["navigate"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   DispatchNavigate.1:iter-sep                            -- _1 KW["/"],
   DispatchNavigate.2:iter-star                           -- _1,
   DispatchNavigateButton                                 -- KW["navigate"] KW["("] _1 KW[","] _2 KW[")"],
   DispatchNavigateButton.2:iter-sep                      -- _1 KW["/"],
   DispatchNavigateCall                                   -- _1 KW["("] _2 KW[")"],
   DispatchNavigateCall.2:iter-star-sep                   -- _1 KW[","],
   DispatchNavigateCallNoArg                              -- _1,
   
   ElseTempl.1:iter-star                                  -- _1,
   IfNoElseTempl                                          -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   IfNoElseTempl.2:iter-star                              -- _1,
   ElseTempl                                              -- KW["else"] KW["{"] _1 KW["}"],
   ElseTempl.1:iter-star                                  -- _1,
   IfElseIfTempl.2:iter-star                              -- _1,
   ElseIfTempl.2:iter-star                                -- _1,
   IfElseIfTempl                                          -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"] _3 _4,
   IfElseIfTempl.2:iter-star                              -- _1,
   IfElseIfTempl.3:iter                                   -- _1,
   IfElseIfTempl.4:opt                                    -- _1,
   ElseIfTempl                                            -- KW["else"] KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"],
   ElseIfTempl.2:iter-star                                -- _1,
   IfElseIfTempl.4:opt                                    -- _1,
   IfElseIfTempl.3:iter                                   -- _1,
   IfElseIfTempl.2:iter-star                              -- _1,
   IfElseIfTempl                                          -- KW["if"] KW["("] _1 KW[")"] KW["{"] _2 KW["}"] _3 _4,
   IfElseIfTempl.2:iter-star                              -- _1,
   IfElseIfTempl.3:iter                                   -- _1,
   IfElseIfTempl.4:opt                                    -- _1,
   ValidationContext.1:iter-star                          -- _1,
   ValidationContext                                      -- KW["validationContext"] KW["{"] _1 KW["}"],
   ValidationContext.1:iter-star                          -- _1,
   Catch                                                  -- KW["catch"] KW["("] _1 KW[":"] _2 KW[")"] _3,
   TryTemplate.2:iter                                     -- _1,
   TryTemplate                                            -- KW["try"] _1 _2,
   TryTemplate.2:iter                                     -- _1,
   TryStatement.2:iter                                    -- _1,
   TryStatement                                           -- KW["try"] _1 _2,
   TryStatement.2:iter                                    -- _1,
   ThrowTemplate.1:iter-sep                               -- _1 KW[","],
   ThrowTemplate                                          -- V  [H  [KW["throw"]] _1],
   ThrowTemplate.1:iter-sep                               -- _1 KW[","],
   ThrowStatement.1:iter-sep                              -- _1 KW[","],
   ThrowStatement                                         -- KW["throw"] _1 KW[";"],
   ThrowStatement.1:iter-sep                              -- _1 KW[","],
   TypeValidate.2:iter-star                               -- _1,
   TypeValidate                                           -- KW["type"] _1 KW["{"] _2 KW["}"] KW["validate"] KW["("] _3 KW[","] _4 KW[")"],
   TypeValidate.2:iter-star                               -- _1,
   
   TestStart -- _1,
   
   TypeValidate                                           -- KW["validate"] KW["("] _1 KW[","] _2 KW[")"],
   TypeDef.2:iter-star                                    -- _1,
   TypeDef                                                -- KW["type"] _1 KW["{"] _2 KW["}"],
   TypeDef.2:iter-star                                    -- _1,
   
   CountStar                                              -- KW["count"] KW["("] KW["*"] KW[")"],
   Count                                                  -- KW["count"] KW["("] _1 KW[")"],
   Max                                                    -- KW["max"] KW["("] _1 KW[")"],
   Min                                                    -- KW["min"] KW["("] _1 KW[")"],
   Avg                                                    -- KW["avg"] KW["("] _1 KW[")"],
   
   DeriveCrud -- KW["derive"] KW["crud"] _1,
   
   HqlStatement -- _1 KW[";"]


]
