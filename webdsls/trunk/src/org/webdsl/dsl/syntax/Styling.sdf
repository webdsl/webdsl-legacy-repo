module Styling

%% syntax for styling of WebDSL applications

exports

  sorts
    Ident Name Num String UnaryOperator

  lexical syntax
    "-"? [\_a-z][\_a-z0-9\-]*      -> Ident
    [\_a-z0-9\-]+                  -> Name
    [0-9]+                         -> Num
    [0-9]* "." [0-9]+              -> Num
    "\"" ~[\"\n]* "\""             -> String
    "'" ~[\"\n]* "'"               -> String

exports

  sorts
     Number Percentage Ems Exs Length Angle Time Freq Dimension Uri Hash

  lexical syntax
    Num                     -> Number
    Num "%"                 -> Percentage {prefer}
    Num "em"                -> Ems {prefer}
    Num "ex"                -> Exs {prefer}
    Num "px"                -> Length {prefer}
    Num "cm"                -> Length {prefer}
    Num "mm"                -> Length {prefer}
    Num "in"                -> Length {prefer}
    Num "pt"                -> Length {prefer}
    Num "pc"                -> Length {prefer}
    Num "deg"               -> Angle {prefer}
    Num "rad"               -> Angle {prefer}
    Num "grad"              -> Angle {prefer}
    Num "ms"                -> Time {prefer}
    Num "s"                 -> Time {prefer}
    Num "hz"                -> Freq {prefer}
    Num "khz"               -> Freq {prefer}
    Num Id                  -> Dimension {prefer}

    "url" "(" String ")"    -> Uri {prefer}

    "#" Name                -> Hash {prefer}


context-free syntax

  "style" Id StyleDefinition*                                   -> Section {cons("StyleSection")}

context-free syntax

  "theme" Modifier Id "(" ")" "{" StyleDeclaration* "}"         -> Definition {cons("ThemeDefinition")}

context-free syntax

  "layout" Id "{" VertLayoutDeclaration "}"                     -> Definition {cons("LayoutDefinition")}

context-free syntax

%%  Id "(" MatchTemplateArgs ")"
  Id "{" StyleDeclaration* "}"                                     -> StyleDefinition {cons("StyleDescription")}

  {Exp ","}*                                                    -> MatchTemplateArgs {cons("MatchTemplateArgs")}

%%  StyleDeclaration*												-> StyleBody
%%  LayoutDeclaration*											-> StyleBody
  
  StyleProperty ":=" StyleValue                                 -> StyleDeclaration {cons("StyleDeclaration")}
  
  (HorLayoutDeclaration ";")*                                  -> VertLayoutDeclaration {cons("VertLayoutDeclaration")}
%%  Id+       												    -> VertLayoutDeclaration {cons("VertLayoutDeclaration"), prefer}
  Id "(" HorLayoutDeclaration ")"                               -> HorLayoutDeclaration {cons("HorLayoutDeclaration")}
  {Id "|"}+       												-> HorLayoutDeclaration {cons("HorLayoutDeclaration")}


  Name															-> StyleProperty {cons("StyleProperty")}

  Number
      | Percentage
      | Length 
      | Ems 
      | Exs
      | Angle 
      | Time 
      | Freq
      | String
      | Ident
      | Uri
      | Hexcolor
      | Function                                                -> StyleValue {cons("StyleValue")}
