module WebDslMix[E]

imports 
  WebDSL
  
exports

  context-free syntax
    "webdsl" "|[" Application "]|" -> E {cons("ToMetaExpr")}
             "|[" Application "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Section     "]|" -> E {cons("ToMetaExpr")}
             "|[" Section     "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Section*    "]|" -> E {cons("ToMetaExpr")}
             "|[" Section*    "]|" -> E {cons("ToMetaExpr")}

    "def"   "|[" Definition  "]|" -> E {cons("ToMetaExpr")}
    "def*"  "|[" Definition* "]|" -> E {cons("ToMetaExpr")}
    "sdef"  "|["  SecurityDefinition   "]|" -> E {cons("ToMetaExpr")}
    "sdef*" "|["  SecurityDefinition*  "]|" -> E {cons("ToMetaExpr")}

    "webdsl" "|[" Description "]|" -> E {cons("ToMetaExpr")}
             "|[" Description "]|" -> E {cons("ToMetaExpr")}

  variables

    "app" [0-9]*     -> Application {prefer}
    "sec" [0-9]*     -> Section     {prefer}
    "sec" [0-9]* "*" -> Section*    {prefer}
    "def" [0-9]*     -> Definition  {prefer}
    "def" [0-9]* "*" -> Definition* {prefer}
    "desc"[0-9]*     -> Description {prefer}
    "mod" [0-9]*     -> Modifier    {prefer}
    "mod" [0-9]* "*" -> Modifier*   {prefer}
    
  context-free syntax

    "webdsl" "|[" Entity            "]|" -> E {cons("ToMetaExpr")}
             "|[" Entity            "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Property          "]|" -> E {cons("ToMetaExpr")}
             "|[" Property          "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Property*         "]|" -> E {cons("ToMetaExpr")}
             "|[" Property*         "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Sort              "]|" -> E {cons("ToMetaExpr")}
             "|[" Sort              "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" {Sort ","}*       "]|" -> E {cons("ToMetaExpr")}
             "|[" {Sort ","}*       "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Annotation        "]|" -> E {cons("ToMetaExpr")}
             "|[" Annotation        "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" {Annotation ","}* "]|" -> E {cons("ToMetaExpr")}
             "|[" {Annotation ","}* "]|" -> E {cons("ToMetaExpr")}

  variables
    "ent" [0-9]*     -> Entity            {prefer}
    "prop"[0-9]*     -> Property          {prefer}
    "prop"[0-9]* "*" -> Property*         {prefer}
    "srt" [0-9]*     -> Sort              {prefer}
    "srt" [0-9]* "*" -> {Sort ","}*       {prefer}
    "ann" [0-9]*     -> Annotation        {prefer}
    "ann" [0-9]* "*" -> {Annotation ","}* {prefer}
    "k"   [0-9]*     -> PropKind          {prefer}
    
  context-free syntax
    "tdef" "|[" TemplateDefinition "]|" -> E {cons("ToMetaExpr")}
    "farg" "|[" FormalArg          "]|" -> E {cons("ToMetaExpr")}
    "farg*""|[" {FormalArg ","}*   "]|" -> E {cons("ToMetaExpr")}
    "elem" "|[" TemplateElement    "]|" -> E {cons("ToMetaExpr")}
    "elem*""|[" TemplateElement*   "]|" -> E {cons("ToMetaExpr")}

  variables
    "tdef"[0-9]*     -> TemplateDefinition {prefer}
    "farg"[0-9]*     -> FormalArg          {prefer}
    "farg"[0-9]* "*" -> {FormalArg ","}*   {prefer}
    "elem"[0-9]*     -> TemplateElement    {prefer}
    "elem"[0-9]* "*" -> TemplateElement*   {prefer}
    
  context-free syntax
    "webdsl" "|[" Action     "]|" -> E {cons("ToMetaExpr")}
             "|[" Action     "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Statement  "]|" -> E {cons("ToMetaExpr")}
             "|[" Statement  "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Statement* "]|" -> E {cons("ToMetaExpr")}
             "|[" Statement* "]|" -> E {cons("ToMetaExpr")}

  variables
  
    "_act"[0-9]*      -> Action     {prefer}
    "stat"[0-9]*     -> Statement  {prefer}
    "stat"[0-9]* "*" -> Statement* {prefer}
    
  context-free syntax
  
    "|[" Exp         "]|" -> E {cons("ToMetaExpr")}
    "|[" Assignment  "]|" -> E {cons("ToMetaExpr")}
    "|[" Assignment* "]|" -> E {cons("ToMetaExpr")}
    
  variables
  
    "e"   [0-9]*     -> Exp         {prefer}
    "e"   [0-9]* "*" -> {Exp ","}*  {prefer}
    "fltr"[0-9]*     -> Filter      {prefer}    
    "asgn"[0-9]*     -> Assignment  {prefer}
    "asgn"[0-9]* "*" -> Assignment* {prefer}
    
  variables
  
    "qid"[0-9]* -> QId {prefer}
    [xyz][0-9]* -> Id {prefer}
    "str"[0-9]* -> String {prefer}
    
  lexical syntax
  
    [\$][A-Za-z0-9]* -> IdVar 
    [\$][A-Za-z0-9]* -> Id[[StrategoHost]]
    
  lexical restrictions
  
    IdVar -/- [A-Za-z0-9]
    
  variables
  
    IdVar -> Id {prefer}
