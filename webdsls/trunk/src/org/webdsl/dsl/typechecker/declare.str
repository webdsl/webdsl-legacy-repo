module org/webdsl/dsl/typechecker/declare

imports
  libstrategolib

imports
  libwebdsl-front
  
strategies 

  declare-all = alltd(declare-any) //initial declaration of globally visible elements
    
overlays

  NameProperty =
    Property("name", Simple(), SimpleSort("String"), [])

      
strategies

  /*
  declare-globals =
    ?gd@GlobalsDefinition(decls)
    ; <map(declare-global-vars <+ declare-global-funcs)> decls
    ; !gd

  declare-global-vars =
    ?VarDeclInit(ident,sort,_)
    ; rules (
        TypeOf : ident -> sort
        IsGlobal : ident )

*/
    
  //given a list of property assignmenst and a corresponding templatecall, it declares HtmlEntityId if a "id" property exists
  declare-template-html-id(|tc) =
     all({x, y : 
         ?PropertyAssignment("id", x) ;rules( HtmlEntityId :+ x -> tc )
         <+ !"something" //build something
         })
  

rules // typechecking

  constraint-error-ui : 
    GoTo(ThisCall(p, args)) -> <add-error(|["page ", <pp-webdsl> p, " does not exist."])>
    where not(<IsPage> p)
