module org/webdsl/dsl/typechecker/utils

imports
  libstrategolib

imports
  libwebdsl-front

strategies

  type-of = eq-type-of

rules

  is-webdsl-type = is-entity-type <+ is-simple-sort <+ is-generic-sort
  is-builtin-type = is-simple-sort <+ is-generic-sort

/* ANCIENT
rules

  type-of :
    e{t*} -> t
    where t := <fetch-elem(?Type(<id>))> t*

*/

rules // type compatibility

  /**
   *  understandable alias of type-compatible
   */
  first-is-super-or-same-type = type-compatible

  /**
   * <type-compatible> (t1, t2) if a value of type t2 can be assigned
   * to a variable of type t1
   */

  type-compatible =
    ?(t, t)

  type-compatible =
    ?(supertype, subtypetobechecked) //(supertype,subtype to be checked)
    ; where(<subtype-of> (subtypetobechecked, supertype))
    
  subtype-of =
    eq

  subtype-of =
    ?(SimpleSort(subtypetobechecked), SimpleSort(supertype))
    ; where( <extends>(subtypetobechecked, supertype) )

  extends-check = Extends
  extends-check = extends-builtin
  extends-check = extends-genericsorts
  
rules // (front-end) types to (back-end) annotations

  extends =
    while-not(eq, (extends-check, id))

  types-to-annotations =
    topdown(try(type-to-annotation))
  
  type-to-annotation =
      where(sort := <type-of; topdown(try(add-extra-annotations))>)
    ; add-anno(|TypeAnno(sort))
    
  type-to-annotation = add-extra-annotations
    
  /* Entities */
  add-extra-annotations =
      ?type@SimpleSort(name)
    ; is-entity-type
    ; with(
        idname := <EntityIdName <+ !None()> name
      ; hasnatural := <HasNaturalId; !True() <+ !False()> name
      ; anno := EntityAnno(idname, hasnatural)
      ; <add-anno(|anno)> type
      ; ?x
    )
    ; !x
  
  // Annotate entities with type information.
  get-entity-class = ?Entity(<id>,_,_) <+ ?EntityNoSuper(<id>,_) <+ ?SessionEntity(<capitalize-string>,_)
  
  type-to-annotation =  
      ?entity
    ; class := <get-entity-class> entity
    ; <add-entity-anno(|class)> entity
   
  add-entity-anno(|class) =
        ?entity
      ; <try(add-extra-annotations)> SimpleSort(class)
      ; anno := TypeAnno(<id>)
      ; <add-anno(|anno)> entity
     
  /* For SimpleSort(name) remember whether name represents a native class */
  add-extra-annotations =
      ?type@SimpleSort(name)
    ; class := <NativeClassQualifiedName> name         // fails if name is not a native class
    ; <add-anno(|NativeClassAnno(name, class))> type

