module org/webdsl/dsl/typechecker/error

imports
  libstrategolib
  Java-15 
  libjava-front

imports
  libwebdsl-front

strategies

  add-error(|msgs) =
    rules(
      FoundErrors := <inc> <FoundErrors <+ !0>
    )
  ; try(AddError(|msgs))
  ; default-report-error(|msgs)
  
  default-report-error(|msgs) =
    with(
      ?t
      ; context := <error-context>
      ; msg     := <error-to-string> msgs
      //; info(|["Error: ", msg, context, " in: ", <pp-webdsl-to-string <+ strip-annos> t])
      ; if 1 := <FoundErrors> then <error> [""] end //print new line before first error, normally time information is appended without newline
      ; <error>["* ", <trim-initial-dots-slashes> context, ": error: ", msg, "\n", <pp-webdsl-to-string <+ strip-annos> t]
    ) 
    
  add-warning(|msgs) =
    AddWarning(|msgs) <+ default-report-warning(|msgs)
  
  default-report-warning(|msgs) =
    with(
      ?t
      ; context := <error-context>
      ; msg     := <error-to-string> msgs
      //; info(|["Warning: ", msg, context, " in: ", <pp-webdsl-to-string <+ strip-annos> t])
      ; <error>[context, ": warning: ", msg, " ", <pp-webdsl-to-string <+ strip-annos> t]
    )
  
  error-to-string =
    map(is-string <+ pp-webdsl)
  ; concat-strings
  <+
    (is-string <+ pp-webdsl)

  error-context =
    oncetd(get-annos; getfirst(?At(filename, r, c)))
    ; if !filename => "" then
        <conc-strings> (<as-string> r, "/", <inc; as-string> c)
      else
        <conc-strings> (filename, ":", <as-string> r, "/", <inc; as-string> c)
      end
    <+
      !""

  error-context-old =
    oncetd(get-annos; getfirst(?At(filename, r, c)))
    ; if !filename => "" then
        <conc-strings> (" at line ", <as-string> r, " column ", <inc; as-string> c)
      else
        <conc-strings> (" at ", filename, ":", <as-string> r, ":", <inc; as-string> c)
      end
    <+
      !""

  pp-webdsl =
    pp-webdsl-to-string
  <+
    rules(
      FoundErrors := <inc> <FoundErrors <+ !0>
    )
  ; write-to-string
