module org/webdsl/dsl/generation/xhtml-email

imports 
  libstrategolib 
  
imports 
  org/webdsl/dsl/syntax/WebDSL
  org/webdsl/dsl/utils/-
    
rules
  
  email-to-xml : 
    def@Define([Email()], x, args, elems1) ->
      XmlFile(["view"], <concat-strings>[x, ".xhtml"], 
		%>
		<?xml version="1.0" encoding="UTF-8"?>
		
		<m:message xmlns="http://www.w3.org/1999/xhtml"
		           xmlns:m="http://jboss.com/products/seam/mail"
		           xmlns:h="http://java.sun.com/jsf/html">
		    <%= elems2 ::*%>
		</m:message>
		<%)
  where elems2 := <email-elems-to-xhtml> elems1


  email-elems-to-xhtml =
    filter-concat-warn(email-elem-to-xhtml <+ undefined-template-call | "email-elem-to-xhtml undefined: ")
  
  email-elem-to-xhtml :
    TemplateCall("to", [elem], []) ->
    %>
      <m:to address="<%= email_address %>" />
    <%
    where email_address := <arg-to-value-string> elem
 
 //  name="<%= name %>" address="<%= email %>"
 
  email-elem-to-xhtml :
    TemplateCall("from", [String(name), String(email)], []) ->
    %>
      <m:from name="<%= name %>" address="<%= email %>" />
    <%
    
  email-elem-to-xhtml :
    TemplateCall("subject", [String(subject)], []) ->
    %>
      <m:subject>
        <%= subject::cdata %>
      </m:subject>
    <%
  
  email-elem-to-xhtml :
    TemplateCall("body", [], elems) ->
    %>
      <m:body>
        bladiebla
      </m:body>
    <%
