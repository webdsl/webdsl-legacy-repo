module org/webdsl/dsl/to-py-gae/types/string

imports 
  libwebdsl-front
  
rules // typechecker

  python-property-type(|e_name) :
    SimpleSort("String") -> py-exp|[ db.StringProperty(default='', name=e_name) ]|

  python-type :
    SimpleSort("String") -> py-exp|[ unicode ]|

  python-type-default-value :
    SimpleSort("String") -> py-exp|[ '' ]|

rules
  py-page-elem-to-render :
    elem|[ inputString(e)[passign*]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          out.write('<input type="text" name="' + field_id + '" class="inputString" value="');
          out.write(cgi.escape(unicode(e_target), True));
          out.write('"/>');
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e

  py-page-elem-to-databind :
    elem|[ inputString(e)[passign*]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          if is_submitted_form: {
              e_target = self.rh.request.get(field_id);
          };
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e

  py-page-elem-to-render :
    elem|[ inputSelectString(e)[passign*]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          field_id_select = field_id + '_select';
 
          out.write('<select name="' + field_id_select + '">');
          out.write('<option value=""></option>');
          for item in webdsl.querylist.AllDbQuerySet(data.x_type): {
              out.write('<option ');
              out.write('value="' + cgi.escape(unicode(item.name), True) + '">');
              out.write(cgi.escape(unicode(item.name), True));
              out.write('</option>');
          };
          out.write('</select>');

          out.write('<input type="text" name="' + field_id + '" class="inputString" value="');
          out.write(cgi.escape(unicode(e_target), True));
          out.write('"/>');
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e
       ; SelectAnno(selectEnt) := <get-select-anno> e
       ; x_type := <concat-strings> [selectEnt, "Value"]

  py-page-elem-to-render :
    elem|[ outputString(e)[passign*]{} ]| -> python*|[
          out.write(cgi.escape(unicode(e_target), True));
    ]|
    with e_target := <expression-to-python> e

  expression-to-python :
   exp|[ e.contains(e1) ]| -> py-exp|[ e3 in e2 ]|
   where SimpleSort("String") := <type-of> e
   with  e2    := <expression-to-python> e
      ;  e3    := <expression-to-python> e1

