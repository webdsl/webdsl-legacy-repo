module org/webdsl/dsl/modules/enum

imports
  libstrategolib
  libwebdsl-front

rules

  enum-generate-vardecl(|x) :
    EnumValue(y, str) -> |[ var y : srt := x { name := str }; ]|
    where srt := SimpleSort(x)

  desugar :
    Enum(x, value*) -> <rename-all> def|[
      entity x {
        name :: String
      }
    ]|
    where <emit-webdsl-code> GlobalsDefinition(<map(enum-generate-vardecl(|x))> value*)

  rename :
    Enum(x, value*) -> Enum(x, value*)
    where declare-enum

  declare-enum :
    Enum(x, value*) -> <id>
    where <declare-entity> def|[
            entity x {
              name :: String
            }
          ]|
          ; <map(declare-enum-value(|x))> value*

  declare-enum-value(|srt) :
    EnumValue(y, str) -> <id>
    where rules ( TypeOf : y -> srt )
