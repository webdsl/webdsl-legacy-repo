module org/webdsl/dsl/modules/types/data-validation

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front

rules //validate template call

  built-in-template-rule-setup = <declare-built-in-template-rules> ("validate",[SimpleSort("Bool"),SimpleSort("String")]);fail
 
/*rules //validate function

  check-builtin-signature :
    (None(), "validate", [s1,s2]) -> None()
    where <type-compatible> (SimpleSort("Bool"),s1)
        ; <type-compatible> (SimpleSort("String"),s2)*/
        
rules //error template

  built-in-template-rule-setup = /*<declare-built-in-template-rules> ("validatedInput",[])       ;*/ validated-input-template;fail
  built-in-template-rule-setup = /*<declare-built-in-template-rules> ("validatedInputWrapper",[]);*/ setup-message-templates;fail //used internally to represent input with validations, declared as wrapper to reuse back-end code for each different input type

  validated-input-template =
    <emit-webdsl-code> Define([],"validatedInput",[],[])
    ; <emit-webdsl-section>
      webdsl |[ 
        access control rules anonymous
          rule template validatedInput() {
            true
          }
      ]| 

  setup-message-templates = 
    (get-error-template-input  <+ default-error-template-input)
  ; (get-error-template-form   <+ default-error-template-form)
  ; (get-error-template-action <+ default-error-template-action)
  ; (get-template-success      <+ default-template-success)
  
  get-error-template-input  = !<TemplateDefinition> "errorTemplateInput"
  get-error-template-form   = !<TemplateDefinition> "errorTemplateForm"
  get-error-template-action = !<TemplateDefinition> "errorTemplateAction"

  default-error-template-input =
    <emit-webdsl-code> def|[
      define ignore-access-control errorTemplateInput(messages : List<String>){
        block()[style := "clear:left; float:left; border: 1px solid #FF0000; margin-left: -5px; margin-top: 5px; margin-bottom: 5px; padding: 4px"]{
          validatedInput
          for(ve: String in messages){
            block()[style := "width:100%; clear:left; float:left; color: #FF0000; margin-top: 5px;"]{
              output(ve)
            }     
          }
        }
      } 
    ]|
    
  default-error-template-form =
    <emit-webdsl-code> def|[    
      define ignore-access-control errorTemplateForm(messages : List<String>){
        block()[style := "clear:left; float:left; border: 1px solid #FF0000; margin-left: -5px; margin-top: 5px; margin-bottom: 5px; padding: 4px"]{
          for(ve: String in messages){
            block()[style := "width:100%; clear:left; float:left; color: #FF0000; margin-top: 5px;"]{
              output(ve)
            }     
          }
        }
      }
    ]|

  default-error-template-action =
    <emit-webdsl-code> def|[    
      define ignore-access-control errorTemplateAction(messages : List<String>){
        block()[style := "clear:left; float:left; border: 1px solid #FF0000; margin-left: -5px; margin-top: 5px; margin-bottom: 5px; padding: 4px"]{
          for(ve: String in messages){
            block()[style := "width:100%; clear:left; float:left; color: #FF0000; margin-top: 5px;"]{
              output(ve)
            }     
          }
          validatedInput
        }
      }
    ]|
