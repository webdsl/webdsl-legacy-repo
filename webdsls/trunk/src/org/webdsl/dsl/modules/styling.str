/**

 Styling rules for WebDSL

*/

module org/webdsl/dsl/modules/styling

imports
  libstrategolib

imports
  org/webdsl/dsl/modules/styling/to-css/-
  org/webdsl/dsl/modules/styling/transformation/-
  org/webdsl/dsl/modules/styling/typechecker/-
  org/webdsl/dsl/modules/styling/default-style/-

strategies

  desugar = desugar-styling

strategies

//  desugar =
//    <do-once(process-style|"process-style")> None()

/*  desugar-styling :
    Application(qid, sections1) -> Application(qid, sections2)
    where <debug> ["__desugar"] ; not( ProcessedStyle ); <debug> ["__not processed"]
        ; sections2 := <process-style-stages> sections1
        ; rules ( ProcessedStyle := True() )*/

  desugar-styling =
    ?Application(qid, sections)
    ; where ( not( ProcessedStyle ) )
    ; process-style-stages
    ; rules ( ProcessedStyle := True() )

  process-style-stages = 
    rename-all-layout

//    ; insert-default-style MW: Solved, this seems to have worked never completely
        ; topdown-l(repeat(add-style-emits))

    ; resolve-style-properties
    ; translate-style-properties

    ; weave-hooks
        ; topdown-l(repeat(add-style-emits))
    
    ; rules ( AfterProcessStyle := True() )
    
//    ; topdown-l(repeat(resolve))

//    ; weave-all-style
