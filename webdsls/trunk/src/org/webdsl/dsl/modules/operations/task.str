module org/webdsl/dsl/modules/operations/task

imports
  libstrategolib
  libwebdsl-front

rules // Generate tasks pages
  operation-generate-task-pages = 
    <map(operation-emit-entity-task-page)> <bagof-OperationEntities; make-set>
    ; emit-all-tasks-page

  operation-emit-entity-task-page =
    ?SimpleSort(ent)
    ; operations := <bagof-Operations; make-set> SimpleSort(ent)
    ; x_page := <concat-strings> [<decapitalize-string> ent, "Tasks"]
    ; x_ent := <decapitalize-string> ent
    ; srt := SimpleSort(ent)
    ; str := <make-human-readable> ent
    ; e := Var(x_ent)
    ; x_op := <concat-strings> [<decapitalize-string> x_ent, "OperationsList"]
    ; x2 := <concat-strings> [<decapitalize-string> x_ent, "TaskList"]
    ; x3 := <concat-strings> [<decapitalize-string> x_ent, "HasOperations"]
    ; es := <map(\ x_op -> <operation-rename-var(|<OperationArg> x_op, x_ent)> And(<OperationWho> x_op, <OperationWhen> x_op) \)> operations
    ; e1 := <foldr(!False, exp-or)> es
    ; <emit-webdsl-code> def|[
        globals {
          function x3(x_ent : srt) : Bool {
            return e1;
          }
        }
      ]|
    ; <emit-webdsl-code> def|[
        define x2() {
          header{ str }
          list {
            for(x_ent : srt) {
              if(x3(x_ent)) {
                listitem {
                  output(e)
                  x_op(e)
                }
              }
            }
          }
        }
      ]|
    ; <emit-webdsl-code> def|[
        define page x_page() {
          title{ str }
          main()
          define body() {
            header{"Tasks"}
            x2()
          }
        }
      ]|

  emit-all-tasks-page =
    elem* := <map({x: \ SimpleSort(ent) -> elem|[ x() ]| where x := <concat-strings> [<decapitalize-string> ent, "TaskList"] \})> <bagof-OperationEntities; make-set>
    ; <emit-webdsl-code> def|[
        define page allTasks() {
          title{ "All tasks" }
          main()
          define body() {
            header{ "All tasks" }
            section {
              elem*
            }
          }
        }
      ]|
