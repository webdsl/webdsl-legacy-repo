module org/webdsl/dsl/modules/operations/normalize

imports
  libstrategolib
  libwebdsl-front

rules // Normalization

  Desugar :
    def|[ operation x_id (x_o : srt) { opelem* }]| -> def|[ operation x_id(x_o : srt) { opelem2* } ]|
    where [] := <filter(?opelem|[ who { e } ]|)> opelem*
        ; opelem2* := [opelem|[ who { true } ]| | opelem*]

  Desugar :
    def|[ operation x_id (x_o : srt) { opelem* }]| -> def|[ operation x_id(x_o : srt) { opelem2* } ]|
    where [] := <filter(?opelem|[ when { e } ]|)> opelem*
        ; opelem2* := [opelem|[ when { true } ]| | opelem*]

  Desugar :
    def|[ operation x_id (x_o : srt) { opelem* }]| -> def|[ operation x_id(x_o : srt) { opelem2* } ]|
    where [] := <filter(?opelem|[ do { stat* } ]|)> opelem*
        ; opelem2* := [opelem|[ do {} ]| | opelem*]

rules // Further desugarings

  Desugar :
    def|[ operation x_id (x_o : srt) { opelem* }]| -> def|[ operation x_id(x_o : srt) { opelem2* } ]|
    where {| OpArg
           : rules ( OpArg := x_o )
           ; opelem2* := <manytd(desugar-status)> opelem*
           |}

  desugar-status :
    Var("status") -> Var(oparg)
    where oparg := <OpArg>

  desugar-status :
    Qualified("status", f) -> Qualified(oparg, f)
    where oparg := <OpArg>

  Desugar :
    def|[ status x_id { prop* fun* } ]| -> def|[ extend entity x_id { prop* fun* } ]|

  Desugar : // make the doAction() callable as do()
    exp|[ do() ]| -> exp|[ doAction() ]|

