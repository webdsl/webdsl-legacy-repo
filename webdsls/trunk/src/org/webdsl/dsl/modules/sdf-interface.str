module sdf-interface

imports
  libstrategolib
  libwebdsl-front
  aterm-interface

strategies
  
  call-to-java :
    exp  |[ e.parse() ]| ->
    java |[
      org.webdsl.tools.strategoxt.SDF
        .get("~language", getClass())
        .parseToTerm(e2)
    ]|
    where GenericSort("SDFInput", [SimpleSort(language)]) := <type-of> e
    with e2    := <expression-to-java> e
       ; x_sdf := <new>
  
  check-builtin-signature :
    (GenericSort("SDFInput", [SimpleSort(_)]), "parse", []) -> SimpleSort("ATerm")

strategies

  // TODO: input SDF<T> should do automatic validation

  DeriveInput :
    elem |[ input(e) {} ]| -> elem |[ inputString(e) {} ]|
    where GenericSort("SDFInput", _) := <type-of> e

strategies // Basic type definitions
  
  builtin-java-type :
    GenericSort("SDFInput", [SimpleSort(_)]) -> type |[ java.lang.String ]|

  builtin-java-type-default-value :
    GenericSort("SDFInput", [SimpleSort(_)]) -> java |[ "" ]|
      
  sort-to-java-type-string :
    SimpleSort("SDFInput") -> "java.lang.String"

  type-compatible =
    ?(GenericSort("SDFInput", _), SimpleSort("String"))

  type-compatible =
    ?(GenericSort("String", _), GenericSort("SDFInput", _))
    