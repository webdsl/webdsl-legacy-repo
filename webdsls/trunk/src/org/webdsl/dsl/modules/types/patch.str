module org/webdsl/dsl/modules/types/patch

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
  
rules
  is-simple-sort = ?SimpleSort("Patch")  
  extends-builtin : "Patch" -> "Object"
  //built-in-template-rule-setup = <declare-built-in-template-rules> ("inputPatch",[SimpleSort("Patch")]);fail
  //built-in-template-rule-setup = <declare-built-in-template-rules> ("outputPatch",[SimpleSort("Patch")]);fail  
  
rules // types

  type-default-value :
    SimpleSort("Patch") -> exp|[ "" ]|

  after-tc-declare-hook = 
    <map(declare-type-def)> 
    def* |[ 
      type Patch {
        name.fraser.neil.plaintext.patch_factory.patchApply  as applyPatch(String):String
      }
      type String {
        name.fraser.neil.plaintext.patch_factory.patchMake   as makePatch(String):Patch
        name.fraser.neil.plaintext.patch_factory.diff        as diff(String):List<String>
      }
    ]|
  ; fail
        
rules // desugar

  DeriveInput :
    elem|[ input(e)[passign*]{elem*} ]| -> elem|[ inputText(e)[passign*]{elem*} ]|
    where SimpleSort("Patch") := <type-of> e

  DeriveOutput :
    elem|[ output(e)[passign*]{} ]| -> elem|[ outputText(e)[passign*]{} ]|
    where SimpleSort("Patch") := <type-of> e

rules //compatibility with String

  built-in-template-rule-setup = <make-string-compatible> "Patch"; fail
  