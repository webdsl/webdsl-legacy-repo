module org/webdsl/dsl/modules/styling/default-style/table

imports
  libstrategolib

imports
  libwebdsl-front

rules

  default-style =
    ?call |[ table() { elem* } ]|
    ; where (
//      ; stsel00 := <ThisSelector> ;
      {| ThisSelector, TableScope
       : stsel0 := stsel |[ table() ]|
       ; rules (
           ThisSelector := stsel0
           TableScope := True()
         )

       ; <alltd(default-style)> elem*         
       ; not( <elem> ("table", <bagof-ProcessedElements> ) )
       
       ; ststat0* := <map(set-style-property); flatten-list>
                     [ ststat |[ border-spacing := 0; ]|,
                       ststat |[ border-collapse := collapse; ]| ]
       ; <declare-style-definition; emit-style-definition> stdef |[ stsel0 { ststat0* } ]|
       
       ; rules ( ProcessedElements :+= "table" )
       |}
      )

  default-style =
    ?call |[ header() { elem* } ]|
    ; where ( TableScope
      ; stsel00 := <ThisSelector> ;
      {| ThisSelector
       : stsel0 := <add-simple-selector> (stsel00, |[ >> tr ]| )
       ; stsel1 := <add-simple-selector> (stsel0, |[ > th ]| )
       
       ; rules ( ThisSelector := stsel1 )
  
       ; <alltd(default-style)> elem*
       ; not( <elem> ("tableheader", <bagof-ProcessedElements> ) )
       
       ; ststat0* := <map(set-style-property); flatten-list>
                     [ ststat |[ border-width := 1px; ]|,
                       ststat |[ border-style := BorderStyle.solid; ]|,
                       ststat |[ border-color := #c0c0c0; ]|,
                       ststat |[ padding-top := 0.2em; ]|,
                       ststat |[ padding-right := 2em; ]|,
                       ststat |[ padding-bottom := 0.2em; ]|,
                       ststat |[ padding-left := 0.6em; ]|,
                       ststat |[ text-align := left; ]| ]
       ; <declare-style-definition; emit-style-definition> stdef |[ stsel1 { ststat0* } ]|
       
       
       ; rules ( ProcessedElements :+= "tableheader" )
       |}
      )

  default-style =
    ?call |[ row() { elem* } ]|
    ; where ( TableScope
      ; stsel00 := <ThisSelector> ;
      {| ThisSelector
       : stsel0 := <add-simple-selector> (stsel00, |[ >> tr ]| )
       ; stsel1 := <add-simple-selector> (stsel0, |[ > td ]| )
       
       ; rules ( ThisSelector := stsel1 )
       
       ; <alltd(default-style)> elem*
       ; not( <elem> ("tablerow", <bagof-ProcessedElements> ) )
       
       ; ststat0* := <map(set-style-property); flatten-list>
                     [ ststat |[ padding-top := 0.3em; ]|,
                       ststat |[ padding-right := 2em; ]|,
                       ststat |[ padding-bottom := 0.3em; ]|,
                       ststat |[ padding-left := 0.6em; ]|,
                       ststat |[ vertical-align := top; ]|,
                       ststat |[ border-bottom-width := 1px; ]|,
                       ststat |[ border-bottom-style := BorderStyle.solid; ]|,
                       ststat |[ border-bottom-color := #c0c0c0; ]| ]
       ; <declare-style-definition; emit-style-definition> stdef |[ stsel1 { ststat0* } ]|
       
       ; rules ( ProcessedElements :+= "tablerow" )
       |}
      )
