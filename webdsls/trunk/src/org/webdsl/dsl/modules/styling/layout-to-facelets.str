module org/webdsl/dsl/modules/styling/layout-to-facelets

imports 
  libstrategolib  
  libjava-front 
  libwebdsl-front

rules

/*  process-theme =
    ?ThemeDefinition(mod, name, declarations)
    ; <style-declarations-to-code> declarations */
    
/*  process-theme =
    ?LayoutDefinition(name, definition)
    ; layout-to-facelet
    
  style-declarations-to-code =
    map(style-declaration-to-code)

  style-declaration-to-code :
    StyleDeclaration(StyleProperty("layout"), val) -> StyleDeclaration(StyleProperty("layout"), val)*/

strategies

//  process-layout :
//    Application(qid, sections) -> <collect(layout-to-facelet)> sections


rules
  /**
   * Generate facelet template based on layout definition
   */
  GenerateCode = layout-to-facelet; fail
  
  layout-to-facelet :
    LayoutDefinition(name, declaration) ->
    <emit-facelets>
%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:s="http://jboss.com/products/seam/taglib"
      xmlns:wdsl="http://www.webdsl.org/el">

  <head>
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<title><ui:insert name="title">Title</ui:insert></title>
	<link href="<%= <AppRoot> %>/stylesheets/<%= name %>.css" rel="stylesheet" type="text/css" />
	<%= stylesheets::* %>
  </head>

  <body>
    <%= <layout-to-xhtml> declaration::* %>
  </body>

</html>
<%
  where stylesheets := <mapconcat(css-include-to-xhtml)> <bagof-StylesheetsToInclude>
 
  layout-to-xhtml :
    VertLayoutDeclarations(declarations) -> <mapconcat(layout-to-xhtml)> declarations
    
  layout-to-xhtml :
    VertLayoutDeclaration(declaration) -> <layout-to-xhtml> declaration
    
  layout-to-xhtml :
    HorLayoutDeclaration(names) -> <mapconcat(layout-to-xhtml)> names

  layout-to-xhtml :
    HorLayoutDeclaration(name, declaration) ->
    %>
      <div id="<%= name %>">
        <ui:insert name="<%= name %>">
          <%= <layout-to-xhtml> declaration::*  %>
        </ui:insert>
        <%= clear::* %>
      </div>
    <% 
  where if HorLayoutDeclaration(names) := declaration then
          clear := %> <div class="clear" /> <%
        else
          clear := []
        end

  layout-to-xhtml :
    name -> 
    %>
      <div id="<%= name %>">
          <ui:insert name="<%= name %>">
            <%= standard-template::* %>
          </ui:insert>
      </div>
    <% 
    where standard-template := <template-to-xhtml> <TemplateDefinition> name
