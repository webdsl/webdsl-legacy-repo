module org/webdsl/dsl/modules/styling/to-css/layout-to-css

imports 
  libstrategolib  
  libjava-front 
  libwebdsl-front

rules
  /**
   * Generate css for layout definition
   */
  GenerateCode = generate-layout-css; fail
  
  generate-layout-css =
    ?LayoutDefinition(type, m@MatchDefinition(n, arg*), stat*)
    ; {| ThisPage, ThisSelector
       : name := <concat-strings> [n, "Layout"]
       ; rules (
           ThisPage := name
           ThisSelector := m
         )
       ; <emit-css> Stylesheet(<mapconcat(layout-to-css)> stat*)
       |}

  generate-layout-css =
    ?LayoutDefinition(m@MatchDefinition(n, arg*), stat*)
    ; {| ThisPage, ThisSelector
       : name := <concat-strings> [n, "Layout"]
       ; rules (
           ThisPage := name
           ThisSelector := m
         )
       ; <emit-css> Stylesheet(<mapconcat(layout-to-css)> stat*)
       |}

  layout-to-css :
    LayoutStatement(expr) -> <layout-to-css> expr

  layout-to-css :
    NamedLayoutExpression(name, expr*) -> []

  layout-to-css :
    LayoutExpression(MatchDefinition(ident, args)) ->
      rule* |(
        sel2 {
          clear: both;
          float: left;
        }
      )|
    where sel0 := <match-definition-to-class> <ThisSelector>
        ; (( sel1 := <resolve; selector-to-css> SimpleSelector(MatchDefinition(ident, args)) ) <+
          ( sel1 := <match-definition-to-class> MatchDefinition(ident, args) ))
        ; sel2 := <add-simple-selectors> (sel0, sel1)

  layout-to-css :
    FloatStatement(def*) -> <map(float-to-css)> def*

  float-to-css:
    MatchDefinition(ident, args) ->
      rule* |(
        sel2 {
          float: left;
          clear: none;
        }
      )|
    where sel0 := <match-definition-to-class> <ThisSelector>
        ; (( sel1 := <resolve; selector-to-css> SimpleSelector(MatchDefinition(ident, args)) ) <+
          ( sel1 := <match-definition-to-class> MatchDefinition(ident, args) ))
//        ; sel1 := <resolve; (match-definition-to-class <+ selector-to-css)> MatchDefinition(ident, args)
        ; sel2 := <add-simple-selectors> (sel0, sel1)

