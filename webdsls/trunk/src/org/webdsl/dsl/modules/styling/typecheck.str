/**

 Styling typechecker

*/

module org/webdsl/dsl/modules/styling/typecheck

imports
  libstrategolib

imports
  libwebdsl-front
  org/webdsl/dsl/transformation/-
  org/webdsl/dsl/modules/styling/-

rules // StyleDefinitions

  constraint-error : 
    d@StyleDefinition(checktype, matchstring, farg*, decl*) -> <add-error(|["unknown style rule type: ", <pp-webdsl> d])>
    where <not(elem)> ( checktype,[ "page"
                                   ,"template" ])

  constraint-error : 
    d@StyleDefinition("page", matchstring, farg*, decl*) -> <add-error(|["style rule target does not exist: ", <pp-webdsl> d])>
    where MatchTemplateArgs(args) := farg*
        ; not( <TemplateSignature> (matchstring, <map(?Arg(_,<id>))> args) ) <+ not( <IsPage> matchstring )
  
  constraint-error : 
    d@StyleDefinition("template", matchstring, farg*, decl*) -> <add-error(|["style rule target does not exist: ", <pp-webdsl> d])>
    where MatchTemplateArgs(args) := farg*
        ; not( <TemplateSignature> (matchstring, <map(?Arg(_,<id>))> args) ) <+ not( <is-toplevel-template> matchstring )
                                         
  constraint-error : 
    d@StyleDefinition(g, s, decl*) -> <add-error(|["unknown style rule type: ",<pp-webdsl> d])>
    where not("global" := g) <+ not("style" := s)

rules // StyleStatements

/*  constraint-error : 
    s@StyleStatement(prop, val) -> <add-error(|["style types not compatible: ",<pp-webdsl> s])>
    where not( <style-type-compatible> (prop, val) )
*/