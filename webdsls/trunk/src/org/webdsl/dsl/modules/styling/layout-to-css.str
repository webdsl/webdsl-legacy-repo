module org/webdsl/dsl/modules/styling/layout-to-css

imports 
  libstrategolib  
  libjava-front 
  
imports 
  org/webdsl/dsl/syntax/WebDSL
  org/webdsl/dsl/utils/-

rules
  /**
   * Generate facelet template based on layout definition
   */
  ProcessLayout = layout-to-css; fail
  
  layout-to-css :
    LayoutDefinition(name, declaration) ->
    <emit-css> Stylesheet(<layout-to-css> declaration)

  layout-to-css :
    VertLayoutDeclarations(declarations) -> <mapconcat(layout-to-css)> declarations
    
  layout-to-css :
    VertLayoutDeclaration(declaration) -> <layout-to-css> declaration

  layout-to-css :
    HorLayoutDeclaration(name, declaration) -> <layout-to-css> declaration
            
  layout-to-css:
    HorLayoutDeclaration([s1, s2]) ->
      rul* |(
        sel0 {
          float: left;
        }
        sel1 {
          float: right;
        }
      )|
    where sel0 := <concat-strings> [".", s1]
        ; sel1 := <concat-strings> [".", s2]
  
  layout-to-css :
    HorLayoutDeclaration([name]) ->
    rul* |(
        sel0 {}
    )|
  where sel0 := <concat-strings> [".", name]
    
    
  two-column-layout-to-css:
    [col1, col2] ->
    rul* |(
      
    )|
    
  three-column-layout-to-css:
    [col1, col2, col3] ->
    rul* |(
      
    )|
  
  webdsl-element-to-css-element :
    "block" -> "div"
        
