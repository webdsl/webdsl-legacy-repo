module org/webdsl/dsl/modules/styling/typechecker/rename

imports
  libstrategolib

imports
  libwebdsl-front

rules 

  rename :
    StyleSection(name, def1*) -> <declare-style-section> StyleSection(name, def2*)
    where {| InSection
           : rules ( InSection := name )
           ; def2* := <rename-all> def1*
           |}
    

  rename :
    StyleDefinition(selector, stat1*) -> <declare-style-definition> StyleDefinition(selector, stat2*)
    where InSection
        ; {| ThisSelector
           : sel := <remove-position-annos> selector
           ; rules ( ThisSelector := sel )
//           ; arg2* := <map(rename)> arg1*
           ; stat2* := <rename-all> stat1*
           |}

  rename :
    StyleDeclaration(prop1, val1) -> <declare-style-declaration> StyleDeclaration(prop2, val2)
    where ThisSelector
        ; prop2 := <rename-all> prop1
        ; val2 := <rename-all> val1
//                ; <debug> [".........decl:", prop1, val1, prop2, val2]
        

  rename :
    StyleVarDecl(x, srt) -> StyleVarDecl(y, srt)
    where InSection
        ; y := <rename-bound(|srt)> x
        ; rules ( Rename : StyleVar(x) -> StyleVar(y) )

  rename :
    StyleVarDeclInit(x, srt, e) -> <declare-style-var-decl> StyleVarDeclInit(y, srt, e')
    where InSection
        ; e' := <rename-all> e
        ; y := <rename-bound(|srt)> x
        ; rules ( Rename : StyleVar(x) -> StyleVar(y) )


rules

  rename :
    LayoutSection(def1*) -> LayoutSection(def2*)
    where {| Rename, InSection
           : rules ( InSection := True() )
           ; def2* := <rename-all> def1*
           |}
        
  rename :
    LayoutDefinition(type, matchdef, stat1*) -> <declare-layout-definition> LayoutDefinition(type, matchdef, stat2*)
    where {| InDef
           : MatchDefinition(name, arg*) := matchdef
           ; t* := <map(?Arg(_,<id>))> arg*
           ; rules ( InDef := (name, t*) )
           ; stat2* := <rename-all> stat1*
           |}

  rename :
    NamedLayoutExpression(name, expr*) -> <declare-layout-expression> NamedLayoutExpression(name, expr*)
    where InDef

    
//  rename :
//    HorLayoutDeclaration(name, )
