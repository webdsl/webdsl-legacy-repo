module org/webdsl/dsl/modules/styling/style-to-css

imports 
  libstrategolib  
  libjava-front 
  libwebdsl-front

rules
  /**
   * Generate css based on style definition
   */
  GenerateCode = stylesection-to-css; fail
  
  stylesection-to-css:
    StyleSection(name, definitions) -> s
    where {| ThisPage
           : rules ( ThisPage := name )
           ; s := <emit-css> Stylesheet(<collect(styledefinition-to-css); flatten-list> definitions)
           |}
     
  styledefinition-to-css:
    StyleDefinition(type, name, MatchTemplateArgs(args), declarations) -> 
      rule |(
         sel0 {
           decl0*
         }
      )|
    where <?"page" <+ "template"> type
        ; x := <ThisPage>
        ; rules ( StylesheetIncludes :+ name -> x )
        ; sel0 := <name-to-css-id> name
        ; decl0* := <map(styledeclaration-to-css)> declarations

        
  styledeclaration-to-css:
    StyleDeclaration(property, value) ->
      decl |(
        prop: val;
      )|
    where StyleProperty(prop) := property
        ; StyleValue(val) := value
