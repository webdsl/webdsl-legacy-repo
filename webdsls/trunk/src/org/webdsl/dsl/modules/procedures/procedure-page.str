module org/webdsl/dsl/modules/procedures/procedure-page

imports
  libstrategolib
  libwebdsl-front

rules // Translate to pages and stuff

  Desugar :
    def|[ procedure x_id (x_o : srt) { procelem* } ]| -> def|[ define page x_id(x_o : srt) { elem* } ]|
    where <IsProcedure> x_id
        ; stat* := <filter(procedure-get-action-statements);concat;add-procedure-performed(|x_id, x_o, srt)> procelem*
        ; SimpleSort(s) := srt
        ; x_view := <decapitalize-string> s
        ; if <IsDoProcedure> x_id then
            stat2* := <add-view-page-goto(|x_view, Var(x_o))> stat*
            ; elem* := elem*|[ init { stat2* } ]|
          else
            stat2* := <add-view-page-return(|x_view, Var(x_o))> stat*
            ; viewelem* := <filter(procedure-get-view-elements);concat> procelem*
            ; actionelem* := webdsl*|[ action doAction() { stat2* } ]|
            ; elem* := [viewelem*, actionelem*]
          end
        ; e2 := <procedure-get-access-exp> procelem*
        ; <emit-webdsl-section> |[
            access control rules {
              rules page x_id(x_o : srt) {
                e2
                rules action doAction() {
                  e2
                }
              }
            }
          ]|
        ; x_ent := s
        ; <emit-webdsl-code> def|[
            extend entity x_ent {
              x_id <> ProcedureStatus
            }
          ]|

  add-procedure-performed(|op, arg, srt) =
    ?stats
    //; e := exp|[ status ]|
    ; qid1 := Qualified(Qualified(arg, op), "performed")
    ; qid2 := Qualified(Qualified(arg, op), "date")
//    ; stat* := <map(procedure-to-check-performed(|arg))> <bagof-Workflows;make-set> srt
    ; <concat> [
        webdsl|[
          qid1 := true;
          qid2 := now();
//          stat*
        ]|
        , stats]

  procedure-to-check-performed(|arg) :
    nm -> webdsl|[ x_check(e); ]|
    where x_check := <concat-strings> ["check", <capitalize-string> nm, "Performed"]
        ; e := Var(arg)



