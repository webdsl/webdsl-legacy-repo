module org/webdsl/dsl/modules/procedures/extend

imports
  libstrategolib
  libwebdsl-front

rules 

  procedure-extend-procelems :
    def|[ extend procedure x_id (x_o : srt) { procelem* }]| -> RemoveMe()
    where info(|["Extending procedure: ", x_id])
      ; <map(procedure-extend-procelem(|x_id, x_o, srt))> procelem*

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ enabled { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function enabled(x_o : srt) {
          stat*
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ processed { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function processed(x_o : srt) {
          stat*
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ done { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function done(x_o : srt) {
          stat*
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ disabled { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function disabled(x_o : srt) {
          stat*
        }
      ]|

/* Double definitions?
  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ processed { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function processed(x_o : srt) {
          stat*
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ done { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function done(x_o : srt) {
          stat*
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ disabled { stat* } ]|
    ; <emit-webdsl-code> def|[
        extend function disabled(x_o : srt) {
          stat*
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ processed { stat* } ]|
    ; x := <concat-strings> [<decapitalize-string> proc, "Processed"]
    ; <emit-webdsl-code> def|[
        globals {
          extend function x(x_o : srt) {
            stat*
          }
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ done { stat* } ]|
    ; x := <concat-strings> [<decapitalize-string> proc, "Done"]
    ; <emit-webdsl-code> def|[
        globals {
          extend function x(x_o : srt) {
            stat*
          }
        }
      ]|

  procedure-extend-procelem(|proc, x_o, srt) =
    ?procelem|[ disabled { stat* } ]|
    ; x := <concat-strings> [<decapitalize-string> proc, "Disabled"]
    ; <emit-webdsl-code> def|[
        globals {
          extend function x(x_o : srt) {
            stat*
          }
        }
      ]|
*/
