/**
 * Derive procedureViewPage
 * 
 * Addition for deriving procedureViewPages which have a sidebar containing a tasklist
 */

module org/webdsl/dsl/modules/procedures/derive

imports
  libstrategolib
  libwebdsl-front

rules // typechecking derive statements

/*nog niet verzonnen  constraint-error =
    ?elem|[ derive x_deriveType from e for (dprop*) ]|
    ; SimpleSort(srt) := <type-of> e
    ; <map(try(check-derive-property-exists(|srt)))> dprop*
    ; fail*/

rules // actual derive

  // derive procedurePage from e for (property1, property2)
  derive-page : 
    elem|[ derive procedureViewPage from e for (dprop*) ]| ->
    <rename-all> elem|[ 
      dummy() {
        main()
        define body() {
          header{text(e.name) } 
          table { 
            derive viewRows from e for (dprop*)
          }
        } 
        define contextSidebar() {
          x1(e)
        }
      }
    ]| 
    where SimpleSort(srt) := <type-of> e
        ; x_view := <decapitalize-string> srt
        ; x1 := <concat-strings>[x_view, "Procedures"]

  is-derive-view-type =
    ?"procedureViewPage"
