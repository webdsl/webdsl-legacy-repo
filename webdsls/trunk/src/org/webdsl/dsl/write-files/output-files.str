module org/webdsl/dsl/write-files/output-files

imports
  libstrategolib
  libjava-front
  libstratego-gpp
  libstratego-xtc // TODO: XTC detox
  libwebdsl-front

imports
	org/webdsl/dsl/write-files/-

strategies

	// Output the files in the current term, and return generated filenames
  output-generated-files =
    if-pretty-printing(
      collect(output-generated-file)
    , <WriteToTextFile>("yyy", <id>); !["yyy"]
    )
    
  output-generated-file =
    java-file-to-file

  output-generated-file =
    xml-file-to-file

strategies

  text-file-to-file: TextFile(name, text) -> name
    where(
      file := <fopen> (name, "w")
      ; <fputs> (text, file)
      ; <fclose> file
    )

strategies
   
   // TODO: Only dump ASTs if verbosity is 2
   // TODO: Use rtg-format-check(true, true| <import-term of rtg.af>) instead
   pp-format-checker-error(|msg, rtg) =
      err-msg(|msg)
    ; write-to => FILE(file)
    ; !rtg; write-to => FILE(rtgfile)
    ; <debug> ["--vis", "-i", file, "--rtg", rtgfile]
    ; try(<xtc-command(!"format-check")> ["--vis", "-i", file, "--rtg-nf", rtgfile | <pass-verbose>])
    ; fatal-err-msg(|"Internal error: fatal errors encountered in generated code")
     
   // TODO: use rtg library instead of xtcx
     
  get-java-rtg-file = 
    <memo(import-term(Java-EBlock.rtg.af))> "Java-EBlock.rtg.af"
    
  get-xml-rtg-file = 
    <memo(import-term(xml-doc.rtg.af))> "xml-doc.rtg.af"
    
	