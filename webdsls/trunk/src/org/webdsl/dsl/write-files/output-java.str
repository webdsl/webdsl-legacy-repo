module org/webdsl/dsl/write-files/output-java

imports
  libstrategolib
  libjava-front
  libstratego-gpp
  libwebdsl-front
  libstratego-xtc
  libjava-transformations

imports
  org/webdsl/dsl/write-files/-
  org/webdsl/dsl/write-files/pp-java-to-string/main

strategies

  file-to-filename: JavaFile(prefix,cu) -> filename
    with pkg      := <package-name> cu
       ; name     := <class-name> cu
       ; path		 	:= <conc; create-dirs> (prefix, pkg)
       ; filename := <concat-strings> [path, "/", name, ".java"]

  output-generated-file(|filename) =
    ? JavaFile(name, doc)
    ; (  java-file-to-text-file(|filename)
      <+ <pp-format-checker-error(|"Internal error: generated Java AST is malformed", <get-java-rtg-file>)> doc
      )

  java-file-to-text-file(|filename) =
      ?JavaFile(prefix, cu1)
    ; java  := <post-process-class-for-jrebel-if-enabled> cu1
    ; pjava := <log-time(parenthesize-Java5|"parenthesize-Java5")> java
    ; if-box-pretty-printing(  log-time(pp-java5-to-box(|filename)|"pp-java5-to-box")
                             , log-time(pp-java5-to-string-no-indents(|filename)|"pp-java5-to-string-no-indents"))

  pp-java5-to-box(|filename) =
    ?pjava
  ; box  := <topdown(try(very-special-conflict); repeat(java-to-box))> pjava
  ; file := <fopen> (filename, "w")
  ; <box2text-stream(|80, file)> box
  ; <fclose> file
  
  pp-java5-to-string-no-indents(|filename) =
    java-to-string
  ; ?javastring
  ; file := <fopen> (filename, "w")
  ; <fputs> (javastring, file)
  ; <fclose> file
