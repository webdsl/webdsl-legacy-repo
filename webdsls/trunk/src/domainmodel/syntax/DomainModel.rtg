
regular tree grammar
  start Domain
  productions
    ListStarOfAnnotation0    -> ListPlusOfAnnotation0
    ListStarOfAnnotation0    -> <nil>()
    ListStarOfAnnotation0    -> <conc>(ListStarOfAnnotation0,ListStarOfAnnotation0)
    ListPlusOfAnnotation0    -> <conc>(ListStarOfAnnotation0,ListPlusOfAnnotation0)
    ListPlusOfAnnotation0    -> <conc>(ListPlusOfAnnotation0,ListStarOfAnnotation0)
    ListPlusOfAnnotation0    -> <conc>(ListPlusOfAnnotation0,ListPlusOfAnnotation0)
    ListPlusOfAnnotation0    -> <cons>(Annotation,ListStarOfAnnotation0)
    ListStarOfAllUpper0      -> ListPlusOfAllUpper0
    ListStarOfAllUpper0      -> <nil>()
    ListStarOfAllUpper0      -> <conc>(ListStarOfAllUpper0,ListStarOfAllUpper0)
    ListPlusOfAllUpper0      -> <conc>(ListStarOfAllUpper0,ListPlusOfAllUpper0)
    ListPlusOfAllUpper0      -> <conc>(ListPlusOfAllUpper0,ListStarOfAllUpper0)
    ListPlusOfAllUpper0      -> <conc>(ListPlusOfAllUpper0,ListPlusOfAllUpper0)
    ListPlusOfAllUpper0      -> <cons>(AllUpper,ListStarOfAllUpper0)
    ListStarOfConceptMember0 -> ListPlusOfConceptMember0
    ListStarOfConceptMember0 -> <nil>()
    ListStarOfConceptMember0 -> <conc>(ListStarOfConceptMember0,ListStarOfConceptMember0)
    ListPlusOfConceptMember0 -> <conc>(ListStarOfConceptMember0,ListPlusOfConceptMember0)
    ListPlusOfConceptMember0 -> <conc>(ListPlusOfConceptMember0,ListStarOfConceptMember0)
    ListPlusOfConceptMember0 -> <conc>(ListPlusOfConceptMember0,ListPlusOfConceptMember0)
    ListPlusOfConceptMember0 -> <cons>(ConceptMember,ListStarOfConceptMember0)
    ListStarOfConceptDecl0   -> ListPlusOfConceptDecl0
    ListStarOfConceptDecl0   -> <nil>()
    ListStarOfConceptDecl0   -> <conc>(ListStarOfConceptDecl0,ListStarOfConceptDecl0)
    ListPlusOfConceptDecl0   -> <conc>(ListStarOfConceptDecl0,ListPlusOfConceptDecl0)
    ListPlusOfConceptDecl0   -> <conc>(ListPlusOfConceptDecl0,ListStarOfConceptDecl0)
    ListPlusOfConceptDecl0   -> <conc>(ListPlusOfConceptDecl0,ListPlusOfConceptDecl0)
    ListPlusOfConceptDecl0   -> <cons>(ConceptDecl,ListStarOfConceptDecl0)
    ListStarOfId0            -> <string>
    ListPlusOfId0            -> <string>
    Annotation               -> ParameterizedAnnotation(Id,ListStarOfAnnotation0)
    Annotation               -> SimpleAnnotation(Id)
    Concept                  -> CollectionConcept(UpperId)
    Concept                  -> SimpleConcept(UpperId)
    Concept                  -> EnumConcept(ListStarOfAllUpper0)
    ConceptMember            -> Concept(Id,Concept)
    ConceptMember            -> Concept(Id,Concept,ListStarOfAnnotation0)
    ConceptDecl              -> ConceptDecl(UpperId,ListPlusOfConceptMember0)
    Domain                   -> Domain(QualifiedId,ListStarOfConceptDecl0)
    QualifiedId              -> <string>
    AllUpper                 -> <string>
    UpperId                  -> <string>
    Id                       -> <string>
