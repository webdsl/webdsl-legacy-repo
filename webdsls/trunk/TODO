
* refactor generator modules to a module per generated file

* support viewing and editing of associations

* embed composite associations?
  perform an analysis of entity declarations and find out
  which entities are always used in composites
  does hibernate support selective embedded entities?
  (that would mean that some objects for the type are in
   separate table and others are embedded in the rows
   of the parent objects)
   
* import and export of data to/from XML (?)

* initialize the database via statements in the DSL

* consider special syntax for special value types such
  as URLs and dates
  (but how important are constant values in application
   definitions?)
   
* make URL and Email builtin types

* code for inline editing of value lists

	// new homepage

	private String newHomepage = "";

	/*
	 * (non-Javadoc)
	 * 
	 * @see org.webdsl.serg.domain.EditPerson#getNewHomepage()
	 */
	public String getNewHomepage() {
		return newHomepage;
	}

	public void setNewHomepage(String newHomepage) {
		this.newHomepage = newHomepage;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see org.webdsl.serg.domain.EditPerson#addHomepage()
	 */
	public void addHomepage() {
		x_class.addHomepages(getNewHomepage());
	}

	// delete existing homepage

	public void deleteHomepage() {
		if (getHomepages() == null)
			log.info("deleting homepage " + currentHomepage
					+ " but homepages list is empty");
		else
			getHomepages().remove(currentHomepage);
	}

	// change a homepage

	public void homepageChanged() {
		int i = getHomepages().indexOf(currentHomepage);
		getHomepages().remove(currentHomepage);
		getHomepages().add(i, currentHomepage);
	}

	@DataModel("homepages")
	public List<String> getHomepages() {
		return x_class == null || x_class.getHomepages() == null ? null
				: new ArrayList<String>(x_class.getHomepages());
	}

	@DataModelSelection(value = "homepages")
	String currentHomepage;

	// @DataModelSelectionIndex(value="homepages")
	// int currentHomepageIndex;
