application listasparam

section entities

entity News {
  caption :: String 
}

entity User {
  name :: String
}

init {
  var n: News := News{ caption := "hallo" };
  n.save();	
  var n2: News := News{ caption := "2e" };
  n2.save();
  var n3: News := News{ caption := "3e" };
  n3.save();	  
}

define page root() {
  header { "news" }
  var n: List<News> :=  select a from News as a;
  list {
    for (u: News in n) {
      listitem { output(u.caption) }
    }
  }
  header { "via template" }
  displaynews(n, User{ name := "michel" })
  
  header { "via search function"}
  var s: String := "hallo"
  var u: User := User{ name := "michel" }; //u added for missing behaviour
  /*
  block[id:= target, onclick := action { dosearch(s, u); }] {
     "click me to expand"
  }
  */
  block[id:= target] {
     form{action("click me to expand",action { dosearch(s, u);})}
  }
}

define displaynews (news: List<News>, user: User) {
  "generated by " out(user.name)
  list {
    for (u: News in news) {
      listitem { out(u.caption) }
    }
  }
}

function dosearch(s: String, anuser: User) {
  var news : List<News> := searchHelper(s);
  append(target,displaynews(news, anuser));
}

function searchHelper(s: String):  List<News> {
  var news : List<News> :=
       select u from News as u 
       where (u.caption = ~s);  
  return news;
}

  test ajaxappendwithlist {
    var d : WebDriver := HtmlUnitDriver();
    
    d.get(navigate(root()));
    assert(!d.getPageSource().contains("404"), "root page may not produce a 404 error");

    assert(d.getPageSource().contains("generated by michel"), "displaynews template not rendered correctly");
    
    var pieces := d.getPageSource().split("hallo");
    assert(pieces.length==3, "expected \"hallo\" twice");
    //log(d.getPageSource());
    
    /*
    ajax doesn't seem to work, issue with webdriver/htmlunit?
    
    var elist := d.findElements(SelectBy.id("target"));
    assert(elist.length == 1, "expected 1 id=\"target\" element");
    elist[0].click();
    var pieces2 := d.getPageSource().split("hallo");
    assert(pieces2.length==4, "expected \"hallo\" 3 times");
    */
  }
