application listasparam

section entities

entity News {
  caption :: String 
}

entity User {
  name :: String
}

init {
  var n: News := News{ caption := "hallo" };
  n.save();	
  var n2: News := News{ caption := "ik ben tweedes" };
  n2.save();
  var n3: News := News{ caption := "hallo" };
  n3.save();	  
}

define page home() {
  h { "news" }
  var n: List<News> :=  select a from News as a;
  list {
    for (u: News in n) {
      li { out(u.caption) }
    }
  }
  h { "via template" }
  displaynews(n, User{ name := "michel" })
  
  h { "via search function (expects hallo,hallo ) "}
  var s: String := "hallo"
  var u: User := User{ name := "michel" }; //u added for missing behaviour
  
  b[id:= target, onclick := action { dosearch(s, u); }] {
     "click me to expand"
  }
  
  h { "action receiving a list "}
  var n2 : List<News> := searchHelper("hallo")
  form {
    action("click me", listaction(n2))
    list[id:= target2] {  }
  }
  action listaction(news : List<News>) {
    for(n: News in news) {
      append(target2,template { li { out (n.caption) } });
    }
  }
}

define displaynews (news: List<News>, user: User) {
  "generated by " out(user.name)
  list {
    for (u: News in news) {
      li { out(u.caption) }
    }
  }
}

function dosearch(s: String, anuser: User) {
  var news : List<News> := searchHelper(s);
  append(target,displaynews(news, anuser));
}

function searchHelper(s: String):  List<News> {
  var news : List<News> :=
       select u from News as u 
       where (u._caption = ~s);  
  return news;
}