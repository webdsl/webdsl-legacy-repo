module names

imports 

  include/WebDSL
  hacks

namespaces 
  Module
  Import
  Entity
  Function
  Property
  Var
  Page

rules // Module

	Module(m, _) :
		defines Module m
		scopes Entity, Page // Do not scope imports here, otherwise wrong path will be imported.

  ModuleDefs(m, _, _) :
    defines Module m
    scopes Entity, Page // Do not scope imports here, otherwise wrong path will be imported.
    
  Imports(m) : 
    defines Import m
    refers to Module m
    imports Page from Module m {current-file}   // Imports are only valid within the same file.
    imports Entity from Module m {current-file}

rules // Entity

  EntityNoSuper(t, _) :
    defines Entity t of type SimpleSort(t)
    scopes Property, Function
    
  SimpleSort(t) :
    refers to Entity t
    
  // TODO: Add primitive types: String, Email, etc..

rules // Property

  Property(f, _, t, _) :
    defines Property f of type t

  PropertyNoAnno(f, _, t) :
    defines Property f of type t
   
  DerivedPropertyNoAnno(f, _, t, _) :
    defines Property f of type t
    
  FieldAccess(e, f) :
    refers to Property f in Entity t
    where e has type SimpleSort(t)

rules // Function
   
  Function(f, arg*, t, _) :
    defines Function f of type t
    scopes Var, Property // HACK: Scope Property here because a Var(_) can refer to Property as well.

  Arg(x, t) :
    defines Var x of type t
    
  Var(x) :
    refers to Property x
    refers to Var x
    
rules // Page

  Define(_, x, _, _, _) :
    defines Page x
    scopes Var, Property // HACK: Scope Property here because a Var(_) can refer to Property as well.
    
  PageCall(x, _) :
    refers to Page x
    