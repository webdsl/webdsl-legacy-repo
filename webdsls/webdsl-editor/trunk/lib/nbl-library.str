module lib/nbl-library

imports
  libstratego-lib
  lib/editor-common.generated
  lib/index-library
  lib/analysis-library
  lib/analysis-library-internal
  
signature constructors
  
  Type        : DefDataKind
  Import      : DefDataKind
  Transitive  : ImportAnno
  CurrentFile : ImportAnno
  
rules // Import adjust rule
     
  import-transitive =
    collect-one(?Transitive())
  import-standard =
    not(import-transitive)
    
  import-values(|namespace, path) =
    <index-get-all-values> DefData([namespace| path], Import(), ())
    
  import-currentfile-values(|namespace) =
    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
    
  adjust-index-import(|namespace, path):
    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
    with
      uri := [namespace | path]
    where
      allImports := <import-values(|namespace, path)> ;
      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
    where
      currentfileImports := <import-currentfile-values(|namespace)> ;
      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
    
  import-defs(|namespace, seen):
    (key, <import-standard>) -> [uri]
    with
      uri := [namespace | <index-uri-path> key]
      
  import-defs(|namespace, seen):
    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
    with
      path := <index-uri-path> key ;
      uri := [namespace | path] ;
      
      if not(<elem> (uri, seen)) then
        allImports := <import-values(|namespace, path)> ;
        transitiveUris := <mapconcat(import-defs(|namespace, <conc> (seen, [uri])))> allImports
      else
        transitiveUris := []
      end

rules // Adjust difference comparison
    
  // Add Type to the constructors to check for differences.
  index-diff-constructors = ?DefData(_, Type(), _)
  
  // Type definitions are equal if their URI is equal and if their values are equal.
  index-diff-compare:
    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
    where
       <index-uri-eq> (u1, u2);
       <index-key-eq> (v1, v2)

rules // Error checks
  
  constraint-error:
    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
    
  constraint-error:
    definition -> (key, $[Duplicate definition])
    where
      <nam-unique> definition;
      key := <nam-get-definition-key> definition;
      defs := <index-lookup-all-scoped-noimports> key;
      <gt> (<length> defs, 1)
      