module org/webdsl/dsl/to-java-servlet/render-template-function

imports
  libstratego-lib
  libjava-front
  libwebdsl-front

rules 

  call-to-java-servlet :
    tc@RenderTemplateFunctionCall(TemplateCall(name, arg*, passign*, body*){anno*}) ->
    expr |[ ((utils.PageServlet)ThreadLocalPage.get()).renderTemplate(e_name, new Object[]{ e* }, org.webdsl.lang.Environment.getLocalOrGlobalEnv()) ]|
    with  e* := <map(expression-to-java-servlet)> arg*
        ; e_name := <template-name-to-name-expr> name

  call-to-java-servlet :
    tc@ValidateTemplateFunctionCall(TemplateCall(name, arg*, passign*, body*){anno*}) ->
    expr |[ ((utils.PageServlet)ThreadLocalPage.get()).validateTemplate(e_name, new Object[]{ e* }, org.webdsl.lang.Environment.getLocalOrGlobalEnv()) ]|
    with  e* := <map(expression-to-java-servlet)> arg*
        ; e_name := <template-name-to-name-expr> name
          
  template-name-to-name-expr :
    name -> e_name
    with e_name := <create-elements-call-name <+ !Lit(String([Chars(<id>)]))> name