module org/webdsl/dsl/languages/search/desugar

imports
  libstrategolib

imports
  libwebdsl-front
  org/webdsl/dsl/languages/search/-

rules

  desugar-search:
	p@Property(name,propkind,srt,anno*) -> Property(name,propkind,srt,anno')
	where(<fetch(anno-needs-desugaring)> anno*
	 ; anno' := <map(try(desugar-searchable-anno(|name)))> anno*)

  desugar-search:
	p@DerivedProperty(name, propkind, srt, anno*, e) -> DerivedProperty(name, propkind, srt, anno', e)
	where(<fetch(anno-needs-desugaring)> anno*
	 ; anno' := <map(try(desugar-searchable-anno(|name)))> anno*)

  desugar-searchable-anno(|name):
    SimpleAnno("searchable") -> SearchableAnno([SA-Argument("name", name)])
   
  desugar-searchable-anno(|name):
  	SearchableAnno() -> SearchableAnno([SA-Argument("name", name)])
    
  desugar-search:
  	TokenFilterNoArgs(t) -> TokenFilter(t, [])
  desugar-search:
  	TokenizerNoArgs(t) -> Tokenizer(t, [])
  desugar-search:
  	CharFilterNoArgs(t) -> CharFilter(t, [])
  
  anno-needs-desugaring= ?SimpleAnno("searchable") <+ ?SearchableAnno()