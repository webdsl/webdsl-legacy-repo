module org/webdsl/dsl/languages/ajax/typechecker

imports
  libstrategolib

imports
  libwebdsl-front

strategies

  eq-type-of-ajax :
    EventCall(_,_) -> SimpleSort("String")

  eq-type-of-ajax :
    InlineAction(_) -> SimpleSort("Void")

strategies

  declare-placeholder-in-template: 
    p@Placeholder(name, elems) -> p
    where <is-string> name
        ; rules( HtmlEntityId :+ name -> p )
          
  declare-placeholder-in-template: 
    p@PlaceholderWithAjaxCall(name, elems) -> p
    where <is-string> name
        ; rules( HtmlEntityId :+ name -> p )

rules // constraints

    constraint-error-ajax =
      (  ?a@AjaxReplace(thediv, _) 
      <+ ?a@AjaxAppend(thediv, _) 
      <+ ?a@AjaxVisibility(thediv,_)
      <+ ?a@AjaxRestyle(thediv,_)
      <+ ?a@AjaxClear(thediv)
      )
      ; where(<is-string> thediv) // only check placeholder Id {}, not placeholder Exp {}
      ; where (<check-id-existence(|thediv)> a)
      ; !a
      
    check-id-existence(|theid) = 
      where( //placeholder exists?
          divs := <bagof-HtmlEntityId> theid
        ; 0 := <length> divs
        ; not("this" := theid)
      )
      ; add-error(|["Ajax action refers to unknown placeholder id: ", theid])

rules
   
    constraint-error-ajax =
      (  ?tc@TemplateCall(_,_,passign*,_) 
        <+ ?tc@TemplateCallPropsNoBody(_, _,passign*) 
        <+ ?tc@TemplateCallProps(_, passign*)
        <+ ?tc@TemplateCallPropsNoArgs(_, passign*, _)
      )
      ; where (
          props := <map(\ PropertyAssignment(x,_) -> x \)> passign*
        ; doubles := <find-doubles> props
        ; if (not([] := doubles))
          then !<add-error(|["Properties are defined multiple times - ", <separate-by(|", "); concat-strings> doubles, " in ",tc])>
          end
       )
     ; fail
       
rules

  constraint-error-ajax =
   (  ?a@AjaxReplace(thediv, tcall) 
   <+ ?a@AjaxAppend(thediv,  tcall)
   )
  ; where(<is-defined-tc-get-called-tc; not(IsDefinedAsAjaxTemplate)> tcall)
  ; add-error(|["An ajax-enabled template must be called here, adding the 'ajax' modifier to a template definition makes it ajax-enabled. Note that this template will then be directly accessible from a URL and may require additional access control rules."])
  
