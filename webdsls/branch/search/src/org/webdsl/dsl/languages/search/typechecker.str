module org/webdsl/dsl/languages/search/typechecker

imports
  libwebdsl-front
  org/webdsl/dsl/languages/data-model/declare

rules

    eq-type-of-search:     SearcherInit(ent, _) -> SimpleSort(entsearcher)
        where entsearcher := <concat-strings>[ent, "Searcher"]
    eq-type-of-search:     SearcherRefMod(exp, _) -> <type-of> exp
    eq-type-of-search:    FacetResults(_, _) -> GenericSort("List",[SimpleSort("Facet")])
    eq-type-of-search:    AllFacetResults(_, _) -> GenericSort("List",[SimpleSort("Facet")])
    eq-type-of-search:     SearchResults(exp) -> GenericSort("List", [type])
        where type :=  <type-of; ?SimpleSort(<id>); SearcherTargetType> exp
    eq-type-of-search:     SearchResultsSize(Exp) -> SimpleSort("Int")
    eq-type-of-search:     SearchTimeString(Exp) -> SimpleSort("String")
    // eq-type-of-search:     SearchTimeMS(Exp) -> SimpleSort("Int")
    // eq-type-of-search:     SearchTimeSec(Exp) -> SimpleSort("Float")
    eq-type-of-search:  Highlight(_, _, _) -> SimpleSort("String")
    eq-type-of-search:  HighlightTags(_, _, _, _, _)-> SimpleSort("String")
    eq-type-of-search:  Suggest(_, _, _) -> GenericSort("List",[SimpleSort("String")])