module org/webdsl/dsl/languages/data-model/utils

imports
  libstrategolib

imports
  libwebdsl-front
  
rules
  
  type-of-strip-annos = type-of; strip-ref-sort; strip-all-annos 
  map-type-of-strip-annos = map(type-of; strip-ref-sort); strip-all-annos 

rules    // get entity class name

  get-entity-class-name:
    Entity(x_class,_,_) -> x_class
  get-entity-class-name:
    SessionEntity(x_class,_) -> x_class
  get-entity-class-name:
    EntityNoSuper(x_class,_) -> x_class

rules    // rules for easy entity transformations
  
  transform-entity-body(s):
     Entity(x_class, x_super, entbody){anno*} -> Entity(x_class, x_super, entbody2){anno*}
     where entbody2 := <s(|x_class)> entbody
   
  transform-entity-body(s):
     SessionEntity(x_class, entbody){anno*} -> SessionEntity(x_class, entbody2){anno*}
     where entbody2 := <s(|x_class)> entbody
     
  transform-entity-body(s):
     EntityNoSuper(x_class, entbody){anno*} -> EntityNoSuper(x_class, entbody2){anno*}
     where entbody2 := <s(|x_class)> entbody
     
  transform-entity-body(s):
     ExtendEntity(x_class, entbody){anno*} -> ExtendEntity(x_class, entbody2){anno*}
     where entbody2 := <s(|x_class)> entbody
 
rules      // add type-anno's for backend

  add-backend-annotation =
    ?inv@name#([ent,fld])
    ; <?"InverseAnno" <+ ?"InverseSlaveAnno"> name    
    ; <has-no-anno(?TypeAnno(_))> inv
    ; type := <type-of-property> (ent,fld)
    ; <add-anno(|TypeAnno(type))> inv
      
  add-backend-annotation =
    ?e@Entity(x_ent,_,_)
    ; <CheckPageSignature> (Page(), <decapitalize-string; strip-annos> x_ent, [<strip-annos>SimpleSort(<strip-annos>x_ent)])
    ; <add-new-anno(|HasViewPage())> e
  add-backend-annotation =
    ?e@EntityNoSuper(x_ent,_)
    ; <CheckPageSignature> (Page(), <decapitalize-string; strip-annos> x_ent, [<strip-annos>SimpleSort(<strip-annos>x_ent)])
    ; <add-new-anno(|HasViewPage())> e

rules      //Split entity body into parts
	
  split-entity-body :
    entbodydecs -> (props,functions,validations,searchmappings,rest)
    with  props := <filter(is-property-cons)> entbodydecs
        ; validations := <filter(?ValidateEntity(_,_))> entbodydecs
        ; functions := <filter(is-function-cons)> entbodydecs
        ; searchmappings := <filter(?SearchMappingEmbedded(_))> entbodydecs
        ; rest := <diff> (entbodydecs,<concat>[props,functions,validations,searchmappings])
