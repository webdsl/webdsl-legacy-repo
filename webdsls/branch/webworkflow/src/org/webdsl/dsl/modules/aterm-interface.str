module aterm-interface

imports
  libstrategolib
  libwebdsl-front

strategies

  is-simple-sort = 
    ?SimpleSort("ATerm")

  check-builtin-signature :
    (SimpleSort("ATerm"), "subterms", []) -> GenericSort("List", [SimpleSort("ATerm")])
    
  check-builtin-signature :
    (SimpleSort("ATerm"), "constructor", []) -> SimpleSort("String")
  
  check-builtin-signature :
    (SimpleSort("ATerm"), "get", [SimpleSort("Int")]) -> SimpleSort("ATerm")
  
  check-builtin-signature :
    (SimpleSort("ATerm"), "length", []) -> SimpleSort("Int")

  check-builtin-signature :
    (SimpleSort("ATerm"), "toString", []) -> SimpleSort("String")

  check-builtin-signature :
    (SimpleSort("ATerm"), "toInt", []) -> SimpleSort("Int")
    
  builtin-java-type :
    SimpleSort("ATerm") -> type |[ org.spoofax.interpreter.terms.IStrategoTerm ]|

  builtin-java-type-default-value :
    SimpleSort("ATerm") -> java |[ null ]|
      
  sort-to-java-type-string :
    SimpleSort("ATerm") -> "org.spoofax.interpreter.terms.IStrategoTerm"
    
strategies

  DeriveOutput :
    elem |[ output(e)[passign*] {} ]| -> elem |[ output(e.toString())[passign*] {} ]|
    where SimpleSort("ATerm") := <type-of> e

strategies

  call-to-java-any(rec) :
    exp  |[ e.subterms() ]| ->
    java |[ Arrays.asList(e2.getAllSubterms()) ]|
    where SimpleSort("ATerm") := <type-of> e
    with e2 := <rec> e
    
  call-to-java-any(rec)  :
    exp  |[ e.constructor() ]| ->
    java |[ e2 instanceof org.spoofax.interpreter.terms.IStrategoAppl
              ? ((org.spoofax.interpreter.terms.IStrategoAppl) e2).getConstructor().toString() 
              : "" ]|
    where SimpleSort("ATerm") := <type-of> e
    with e2 := <rec> e 

  call-to-java-any(rec)  :
    exp  |[ e.get(e_index) ]| ->
    java |[ e2.getSubterm(e_index2) ]|
    where SimpleSort("ATerm") := <type-of> e
    with e2       := <rec> e
       ; e_index2 := <rec> e_index

  call-to-java-any(rec) :
    exp  |[ e.length() ]| ->
    java |[ e2.getSubtermCount() ]|
    where SimpleSort("ATerm") := <type-of> e
    with e2 := <rec> e

  call-to-java-any(rec) :
    exp  |[ e.toString() ]| ->
    java |[ e2.toString() ]|
    where SimpleSort("ATerm") := <type-of> e
    with e2 := <rec> e

  call-to-java-any(rec) :
    exp  |[ e.toInt() ]| ->
    java |[ Integer.parseInt(e2.toString()) ]|
    where SimpleSort("ATerm") := <type-of> e
    with e2 := <rec> e
  