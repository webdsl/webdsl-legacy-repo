/**

 Security rules for WebDSL

*/

module org/webdsl/dsl/transformation/access-control-desugar

imports
  libstrategolib

imports
  org/webdsl/dsl/syntax/WebDSL
  org/webdsl/dsl/transformation/-

rules

  create-ac-pointcuts=
    try(sometd(declare-ac-pointcuts))
    ; try(sometd(desugar-ac-pointcuts))

  declare-ac-pointcuts:
    AccessControlPointcut(pname,fa,elems) -> AccessControlPointcut(pname,fa,elems)
    where {| pointcut-formal-argument :
             <filter(\ ar@Arg(ident,thesort)->ar where rules (pointcut-formal-argument : ident -> ar) \)> fa
           ; <filter(declare-ac-pointcut-element(|pname,fa))> elems
          |}

  declare-ac-pointcut-element(|pname,fa):
    AccessControlPointcutElement(ident,matchident,faidents,wc) -> AccessControlPointcutElement(ident,matchident,faidents,wc)
    where faidentsargs := MatchArgs(<map(pointcut-formal-argument)> faidents,wc)
        ; newPointcutList := <concat> [<AccessControlPointcuts<+![]> (pname,fa),[(ident,matchident,faidentsargs)]]
        ; rules(
            AccessControlPointcuts: (pname,fa) -> newPointcutList
          )

  desugar-ac-pointcuts:
    AccessControlDefinition(name,elems) -> AccessControlDefinition(name,<map(try(desugar-ac-pointcuts));concat-with-sublists>elems)

  desugar-ac-pointcuts:
    AccessControlPointcut(name,fa,elems) -> []

  concat-with-sublists=
    foldr(![], (is-list, id) < conc + MkCons)

  desugar-ac-pointcuts:
    AccessControlRule("pointcut",matchident,args,check,childrules) -> newrules
    where MatchArgs(fargs,wc) := args
        ; rulematchtuples := <AccessControlPointcuts> (matchident,fargs)
        ; newrules := <map(rule-tuple-to-ac-rule(|check,childrules))> rulematchtuples

  rule-tuple-to-ac-rule(|check,childrules):
    (ident,matchident,matchargs) -> AccessControlRule(ident,matchident,matchargs,check,childrules)

  // rules for actions are inherited from rule for page if no action rules are provided
  desugar-access-control =
    try(sometd(DesugarAccessControlRule))

  DesugarAccessControlRule :
    AccessControlRule("page", x, fargs, check, []) ->
    AccessControlRule("page", x, fargs, check, [AccessControlRule("action", "*", MatchArgs([], Some("*")), check, [])])

  DesugarAccessControlRule :
    AccessControlRule("template", x, fargs, check, []) ->
    AccessControlRule("template", x, fargs, check, [AccessControlRule("action", "*", MatchArgs([], Some("*")), check, [])])

  // Prevent template rules inside page rules from getting action rules, because this is not allowed.
  // (the template rules inside page rules are for template calls which never contain actions)
  DesugarAccessControlRule =
    ?AccessControlRule("page", x, fargs, check, [a|xs])

  //anonymous policy block syntactic normalization
  Desugar:
    AccessControlDefinition(None(),defs) -> AccessControlDefinition(Some("anonymous"),defs)