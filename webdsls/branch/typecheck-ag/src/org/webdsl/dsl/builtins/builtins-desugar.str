/**

  Builtin types for WebDSL
  
*/

module org/webdsl/dsl/builtins/builtins-desugar

imports 
  libstrategolib 
  
imports 
  org/webdsl/dsl/syntax/WebDSL

rules // Dates

  DeriveInput :
    elem|[ input(e){} ]| -> elem|[ inputDate(e){} ]|
    where SimpleSort("Date") := <type-of> e
    
  DeriveOutput :
    elem|[ output(e){} ]| -> elem|[ outputDate(e){} ]|
    where SimpleSort("Date") := <type-of> e

  DeriveInput :
    elem|[ input(e){} ]| -> elem|[ inputTime(e){} ]|
    where SimpleSort("Time") := <type-of> e
    
  DeriveOutput :
    elem|[ output(e){} ]| -> elem|[ outputTime(e){} ]|
    where SimpleSort("Time") := <type-of> e

  DeriveInput :
    elem|[ input(e){} ]| -> elem|[ inputDateTime(e){} ]|
    where SimpleSort("DateTime") := <type-of> e
    
  DeriveOutput :
    elem|[ output(e){} ]| -> elem|[ outputDateTime(e){} ]|
    where SimpleSort("DateTime") := <type-of> e

rules // File
      
  DeriveInputBuiltins :
    elem|[ input(e){} ]| -> elem|[ inputFile(e){} ]|
    where SimpleSort("File") := <type-of> e
  
  DeriveOutputBuiltins :
    elem|[ output(e){} ]| -> elem|[ outputFile(e){} ]|
    where SimpleSort("File") := <type-of> e
    
  DeriveInput :
    elem|[ input(e){} ]| -> elem|[ inputBinary(e){} ]|
    where SimpleSort("Binary") := <type-of> e
      
  DeriveOutput :
    elem|[ output(e){} ]| -> elem|[ outputBinary(e){} ]|
    where SimpleSort("Binary") := <type-of> e
  
  Desugar :
    Application(qid, sections) -> Application(qid, sections')
    where [] := <collect(?EntityNoSuper("File", _, _))> sections
        ; new_section := 
            |[
              section file-definition
              
		      entity File {
		        name :: String (name)
		        contenttype :: String
		        data :: Binary
		      }
		    ]|
		; sections' := <concat>[sections, [new_section]]
