module org/webdsl/dsl/languages/action/for-stmt

imports
  libstrategolib

imports
  libwebdsl-front

rules

  rename-action :
    ForStmtNoFilter(x, srt, e1, b1) -> ForStmtNoFilter(y, srt2, e2, b2)
    with e2 := <rename-all> e1
       ; {| Rename
          : srt2 := <rename-all> srt
          ; y := <rename-bound(|srt2)> x
          ; b2 := <rename-all> b1
          |}

  rename-action :
    ForAllStmtNoFilter(x, srt, b1) -> ForAllStmtNoFilter(y, srt2, b2)
    with {| Rename
          : srt2 := <rename-all> srt
          ; y := <rename-bound(|srt2)> x
          ; b2 := <rename-all> b1
          |}

rules

  expression-type-constraint(|type) :
    e -> <add-error(|["Expression should be of type ",typename])>
    with  SimpleSort(typename) := type
    where not(<type-compatible> (type, <type-of> e))

  constraint-error-action : ForStmtNoFilter(_, srt, e, _) -> <for-constraint-error(|srt, e)>
