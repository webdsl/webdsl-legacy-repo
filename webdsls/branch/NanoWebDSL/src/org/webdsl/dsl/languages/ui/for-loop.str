module org/webdsl/dsl/languages/ui/for-loop

rules

  rename-ui :
    ForNoFilter(x, srt, e1, elems1) -> ForNoFilter(y, srt2, e2, elems2)
    with e2 := <rename-all> e1
       ; {| Rename
          : srt2   := <rename-all> srt
          ; y      := <rename-bound(|srt2)> x
          ; elems2 := <rename-all> elems1
          |}

  rename-ui :
    ForAllNoFilter(x, srt, elems1) -> ForAllNoFilter(y, srt2, elems2)
    with {| Rename
          : srt2   := <rename-all> srt
          ; y      := <rename-bound(|srt2)> x
          ; elems2 := <rename-all> elems1
          |}

rules

  constraint-error-ui : ForNoFilter(_, srt, e, _)       -> <for-constraint-error(|srt, e)>
     
  for-constraint-error(|srt, e) :
    x -> <add-error(|[<pp-webdsl> e, " should be a collection of type ", <pp-webdsl> srt])>
    where not(GenericSort(_, [srt]) := <type-of> e)
