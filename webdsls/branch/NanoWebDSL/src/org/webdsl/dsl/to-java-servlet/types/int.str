module org/webdsl/dsl/to-java-servlet/types/int

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
  
rules // java type

  builtin-java-type :
    SimpleSort("Int") -> type|[ Integer ]|
    
rules // Int literal

   expression-to-java-servlet :
     Int(x) -> Lit(Deci(x))
  
rules // conversion
  
  call-to-java-servlet :
    exp  |[ e.floatValue() ]| ->   java |[ e1.floatValue() ]|
    where SimpleSort("Int") := <type-of> e
    with  e1    := <expression-to-java-servlet> e  
  
rules
    
  java-servlet-element-id :
    tc@elem|[ inputInt(e){elem*} ]| -> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"
          
  //load the input string and try to convert it to int, insert null if it fails and specify an error
  handle-actions-input-to-java-servlet :
    tc@elem|[ inputInt(e){elem*} ]| ->
    <wrap-input-java-code(|[])>
    bstm*|[
      ident += "~inputident"+uniqueid;
      if(ps.getParammap().get(ident)!=null)
      {
        ~*<wrap-validation-context-code-store-inputs> bstm*|[
          String name = ps.getParammap().get(ident);
          Integer x_temp = null;
          if(!name.matches("-?\\d+")){
          }
          else {
            try {
              x_temp = Integer.parseInt(name);
            }
            catch(NumberFormatException nfe) {
            }  
          }
          bstm*
        ]|
      }
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; name := <pp-webdsl> e
        ; bstm* := <input-assignment-to-java-servlet(|x_temp)> e      
        
  elem-to-java-servlet :
    tc@elem|[ inputInt(e){elem*} ]| ->
    <wrap-input-render-java-code>
    bstm* |[ 
      String x_temp = ident+"~inputident"+uniqueid;
        out.print("<input name=\""+x_temp+"\" ");
        out.print(" value=\"");
        if(inSubmittedForm) {
          out.print(utils.HTMLFilter.filter(ps.getParammap().get(x_temp)));
        }
        else {
          bstm_exptostring*
        }
        out.print("\" />"); 
    ]|
    with  inputident := <get-inputnumber> tc
        ; bstm_exptostring* := <to-page-string-java-servlet> e
        ; x_temp := <newname> "temp"

  elem-to-java-servlet :
    elem|[ outputInt(e){} ]| ->
    bstm* |[ 
      out.print(utils.HTMLFilter.filter(String.valueOf(e1))); 
    ]|
    with  e1 := <expression-to-java-servlet> e