module org/webdsl/dsl/to-java-servlet/global-functions

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  GenerateCodeJavaServlet = generate-java-servlet-global-functions; fail

  generate-java-servlet-global-functions :
    Application(qid, sections) ->
    <emit-java-code> compilation-unit|[
      package utils;
  
      import java.io.*;
      import java.util.HashMap;
  
      import javax.servlet.*;
      import javax.servlet.http.*;
      import java.util.*;
      import utils.*;
      import pkgname.*;
      import pkgname2.*;
      import java.io.PrintWriter;
  
      public class GlobalFunctions {
        private static org.hibernate.Session hibSession;
        private static PageServlet ps = null;

        ~*cbds*
      }
    ]|
    with  pkgname    := <BeanPackage>
        ; pkgname2   := <DomainPackage>
        ; cbds* := <map(webdsl-function-to-java-servlet-function)> <AllGlobalFunctions>
              
  webdsl-function-to-java-servlet-function:
    function@Function(x, args, s, Block(stm*)) -> 
    class-body-dec |[
      public mod* t x#_(org.hibernate.Session hibSession, HashMap<String, Object> variables, param*,  PageServlet ps, PrintWriter out)  {
        try {
          bstm*
          bstm3*
        } 
        catch(ValidationException ve){
          throw ve;
        }
        catch(MultipleValidationExceptions ve){
          throw ve;
        }       
        catch(Exception excep) {
          throw new RuntimeException(excep);
        }
      }
    ]|
    with  {| InFunction:
              rules( InFunction := <id> )
            ; t      := <java-type> s
            ; param* := <map(arguments-to-java-servlet)> args
            ; bstm*  := <statements-to-java-servlet> stm*
            ; usedvarnames := <collect(?Var(<id>)<+?Qualified(<is-string>,_))> stm*
            ; if JavaInEntity 
              then mod* := []
              else mod* := [ mod|[static]| ] end  
            ; if SimpleSort("Void") := s   //TODO simply make this a void function instead of return int
              then bstm3* := [java|[ return 0; ]| ]
              else bstm3* := [] end     
            |}
            