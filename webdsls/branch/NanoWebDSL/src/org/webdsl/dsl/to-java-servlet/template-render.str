module org/webdsl/dsl/to-java-servlet/template-render

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules

  GenerateCodeJavaServlet = log-time(render-java-servlet-template|"render-java-servlet-template"); fail
  
  render-java-servlet-template =
    ?def@def |[ define mod* x(farg*) { elem* } ]|
    ; where(with( //don't remember whether "with" scopes like "where"
        elemfiltered* := <filter-elements-for-java-servlet-handling> elem* //removes local defines
        ; {| CurrentTemplateRender:
             rules(CurrentTemplateRender := def)
           ; bstm1* := <elems-to-java-servlet> elemfiltered*
          |}
      ))
    ; where(with(
      <generate-java-servlet-template-partial> 
        java |[ 
            @Partial
            private void renderInternal()
            {
              out.print("<span >");  // class=\""+"~y"+"\"
              ~*<render-java-servlet-template-inits>
              java.io.PrintWriter out = this.out; //this allows out to be replaced by a temporary stream, e.g. see uicomponents/form.str
              boolean inSubmittedForm = false; //this one is just for render, to know if entered input needs to be repeated
              bstm1*  
              out.print("</span>");                      
            }
        ]|
      ))
      
  render-java-servlet-template-inits =
    ! bstm* |[
      String ident = "";
      String form_ident = "";
      int forelementcounter = 0;
      boolean inForLoop=false;
      int forLoopCounter = 0;
    ]|
 
//coming from elements to xhtml
strategies // lists of elements

  elems-to-java-servlet = //filter because other non-visible stuff is in there like vardecl
    filter(elem-to-java-servlet <+ undefined-template-call)
    ; concat-with-sublists //accept both bstm and bstm*
    
  undefined-template-call :
    t@TemplateCall(f, args, body) -> []
    where log(|Warning(), ["no definition for template ", t])
        ; try(
             temp := <CurrentTemplateRender>
           ; <debug> "error occured in following template: "
           ; <debug> temp
          )
        ; <exit> 1
