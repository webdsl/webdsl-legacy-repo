module org/webdsl/dsl/to-java-servlet/java-page-arguments

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front

rules // page arguments
                                  //JavaThisPage
  GenerateCodeJavaServlet = where((JavaThisPage<+ThisTemplateName);not(InAction)); argument-to-java-servlet-property; fail

   argument-to-java-servlet-property :
    arg@farg|[ x : srt ]| ->
    <generate-java-servlet-partial> java|[
       @Partial
       protected void conversion(){
         if(parammap.get("~<OriginalNonUniqueName> x")!=null)
         {
           bstm1*
         } 
       }
       @Partial
       void loadArguments() {
         bstm*
       }

       private t x_id;
       
       public void set#x_id(t v) {
         this.x_id = v;
       }
       public t get#x_id() {
         return this.x_id;
       }

       private x_Class x;
       
       public void set#x(x_Class x) {
         this.x = x;
       }
       
       public x_Class get#x() {
         return x;
       }
    ]|
    where <is-entity-type> srt 
    with  <?SimpleSort(x_Class)> srt
        ; x_id := <concat-strings>[x, "_id"]
        ; t := <java-type> SimpleSort("String")
        ; bstm* := <argument-to-java-servlet-initialization> arg
        ; bstm1* := <java-servlet-conversion-to-object> (t,x,x_id)

   argument-to-java-servlet-property :
    arg@farg|[ x : srt ]| ->
    <generate-java-servlet-partial> java|[
       @Partial
       protected void conversion(){
         if(parammap.get("~<OriginalNonUniqueName> x")!=null)
         {
           bstm1*
         }
       }
       @Partial
       void loadArguments() {
         bstm*
         bstm2*
       }

       private t_Class x;
       public void set#x(t_Class x) {
         this.x = x;
       }
       public t_Class get#x() {
         return x;
       }
    ]|
    where t_Class := <builtin-java-type> srt
        ; not(GenericSort(_,_) := srt)
    with  <?SimpleSort(_)> srt
        ; bstm* := <argument-to-java-servlet-initialization> arg
        ; bstm2* := <string-argument-to-java-servlet-initialization <+ ![]> arg // fix for passing strings decode (eg. %20 -> ' ')
        ; bstm1* := <java-servlet-conversion-to-object> (t_Class,x,x)

  argument-to-java-servlet-initialization :
    arg@farg|[ x : srt ]| ->
    bstm*|[
      if (x_id != null) {            
        x = (x_class) hibSession.load(x_class.class, java.util.UUID.fromString(x_id));
      }
    ]|
    where <is-entity-type> srt
        ; SimpleSort(webdsl_entity_name) := srt
        ; not(<natural-id-name-include-superclass> webdsl_entity_name)
    with  x_class := <java-type-name> srt
        ; x_id := <concat-strings>[x, "_id"]

  argument-to-java-servlet-initialization :
    arg@farg|[ x : srt ]| ->
    bstm*|[
      if (x_id != null) {            
        try {
          x_id = java.net.URLDecoder.decode(x_id.toString(),"UTF-8"); //general decode of URL
          x_id = utils.IdAnnoURLFilter.unfilter(x_id.toString()); //decode custom escapes
        } catch (java.io.UnsupportedEncodingException uee) {
          uee.printStackTrace();
        }
        List<t> results = hibSession.createCriteria( x_class.class )
        .add( org.hibernate.criterion.Restrictions.naturalId().set("~x_natidprop", x_id))
        .list();
        if(results.size() == 0){
          System.out.println("No entity with this identity found: "+x_id);
        }
        else if(results.size() > 1){
          System.out.println("Multiple entities with this identity found: "+x_id) ;
          x = results.get(0);
        }
        else {
          x = results.get(0);
        }
      }
    ]|
    where <is-entity-type> srt
        ; SimpleSort(webdsl_entity_name) := srt
        ; x_natidprop := <concat-strings>["_",<natural-id-name-include-superclass> webdsl_entity_name]
    with  t := <java-type> srt
        ; x_class := <java-type-name> srt
        ; x_id := <concat-strings>[x, "_id"]
        ; e_init := <java-type-default-value> srt

/*
  argument-to-java-servlet-initialization :
    arg@farg|[ x : srt ]| ->
    bstm*|[
      if (x_ids == null) {            
         //x_ids = new x3();
      } 
      else {
        if (x == null) {
          x = e;
          for(java.util.UUID anid: x_ids) {
            x.add((x_Class) hibSession.load(x_Class.class, anid));
          }
        }
      }
    ]|
    where <?GenericSort(x1,[x2])> srt; <defined-java-type> x2
    with  <?SimpleSort(x_Class)> x2
        ; e :=    <java-type-default-value> srt
        ; x_ids := <concat-strings>[x, "_ids"]


  argument-to-java-servlet-initialization : //@TODO List arguments with builtin types, eg. list of strings
    arg@farg|[ x : srt ]| ->
    bstm*|[]|
    where <?GenericSort(x1,[x2])> srt; <builtin-java-type> x2
*/

  argument-to-java-servlet-initialization :
    arg@farg|[ x : srt ]| ->
    bstm*|[
          if (x == null) {
            x = e_init;
          }
    ]|
    where <builtin-java-type> srt
    with  <?SimpleSort(x_Class)> srt
        ; e_init := <java-type-default-value> srt
       // ; rules( Parameter :+= x )

  string-argument-to-java-servlet-initialization :
    arg@farg|[ x : srt ]| ->
    bstm*|[
      try {
          x = java.net.URLDecoder.decode(x,"UTF-8");
      } catch (java.io.UnsupportedEncodingException uee) {
          uee.printStackTrace();
      }
    ]|
    where <builtin-java-type> srt
        ; <?SimpleSort("String")> srt

  //hiddens for form
                                   //JavaThisPage
  GenerateCodeJavaServlet =  where((JavaThisPage<+ThisTemplateName);not(InAction));   form-hidden-page-params-java-servlet ; fail
       
  form-hidden-page-params-java-servlet :
    Arg(x_ident, s) -> <generate-java-servlet-partial>
    java |[ 
      @Partial 
      public void hiddenParams(java.lang.StringBuffer combinedparams)
      {
        combinedparams.append("<input type=\"hidden\" name=\""+"~<OriginalNonUniqueName> x_ident"+"\" value=\""+utils.HTMLFilter.filter(x_ident.toString())+"\" />");    
      }
    ]|
    where <builtin-java-type> s

  form-hidden-page-params-java-servlet :
    Arg(x, s) -> <generate-java-servlet-partial>
    java |[ 
      @Partial 
      public void hiddenParams(java.lang.StringBuffer combinedparams)
      {
        combinedparams.append("<input type=\"hidden\" name=\""+"~<OriginalNonUniqueName> x"+"\" value=\""+utils.HTMLFilter.filter(x.getNaturalId().toString())+"\" />");    
      }
    ]|
    where <defined-java-type> s; not( GenericSort(_,_) := s)
    
/*

  form-hidden-page-params-java-servlet :
    Arg(x, s) -> <generate-java-servlet-partial>
    java |[ 
      @Partial 
      public void hiddenParams(java.lang.StringBuffer combinedparams)
      {
        String x_ids;
        for(WebDSLEntity o: x) {
          x_ids += o.getId()+",";
        }        
        combinedparams.append("<input type=\"hidden\" name=\""+"~<OriginalNonUniqueName> x"+"\" value=\""+utils.HTMLFilter.filter(x_ids)+"\" />");    
      }
    ]|
    where GenericSort(_,_):= s    
    with  x_ids := <concat-strings> [x, "_ids"]
       
  form-hidden-page-params-java-servlet  :
    arg@farg|[ x : srt ]| -> arg
    where <?GenericSort(_,_)> srt // TODO list arguments to page or template       
      
*/

  GenerateCodeJavaServlet =  where((JavaThisPage<+ThisTemplateName);not(InAction));   form-post-page-params-java-servlet ; fail
       
  form-post-page-params-java-servlet :
    Arg(x_ident, s) -> <generate-java-servlet-partial>
    java |[ 
      @Partial 
      public void hiddenPostParams(java.lang.StringBuffer combinedparams)
      {
        combinedparams.append("~<OriginalNonUniqueName> x_ident"+"="+utils.HTMLFilter.filter(x_ident.toString())+"&");    
      }
    ]|
    where <builtin-java-type> s

  form-post-page-params-java-servlet :
    Arg(x, s) -> <generate-java-servlet-partial>
    java |[ 
      @Partial 
      public void hiddenPostParams(java.lang.StringBuffer combinedparams)
      {
        combinedparams.append("~<OriginalNonUniqueName> x"+"="+utils.HTMLFilter.filter(x.getNaturalId().toString())+"&");    
      }
    ]|
    where <defined-java-type> s

/*
  form-post-page-params-java-servlet  :
    arg@farg|[ x_ident : srt ]| -> <generate-java-servlet-partial>
    java |[ 
      @Partial 
      public void hiddenPostParams(java.lang.StringBuffer combinedparams)
      {
        combinedparams.append("~<OriginalNonUniqueName> x_ident"+"="+utils.HTMLFilter.filter(org.webdsl.tools.Utils.encodeIdList(x_ident))+"&");
      }
    ]|
    where <?GenericSort(_,_)> srt 
*/