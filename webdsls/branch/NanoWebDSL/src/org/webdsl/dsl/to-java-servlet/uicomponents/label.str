module org/webdsl/dsl/to-java-servlet/uicomponents/label

imports
  libstrategolib

imports
  libwebdsl-front
  
rules 
  
  java-servlet-element-id :
    tc@TemplateCall("label", [arg], elem*)-> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"  
  
rules // label

  elem-to-java-servlet :
    tc@TemplateCall("label", [arg], elem*) ->
    <for-loop-counter-wrap-code> 
    bstm* |[ 
      String x_labelname = e_id;
          out.print("<label for=\""+x_labelname+"\" >");
          bstm_exptostring*
          out.print("</label>");
          bstm_elem*
    ]|
    with bstm_exptostring* := <to-page-string-java-servlet> arg
       ; x_labelname := <newname> "label"
       ; inputident := <get-inputnumber> tc
       ; e_id := <id-encoding> inputident
       ; bstm_elem* := <elems-to-java-servlet> elem*
       
  handle-actions-input-to-java-servlet = validation-context-wrapper-for-label(handle-actions-input-to-java-servlet) 
  data-validation-to-java-servlet      = validation-context-wrapper-for-label(data-validation-to-java-servlet)       

  validation-context-wrapper-for-label(s) :
    tc@TemplateCall("label", [arg],elem*) ->
    <for-loop-counter-wrap-code> 
    bstm*|[
      ident = e_id;
        bstm* 
    ]|
    with  inputident := <get-inputnumber> tc
        ; bstm* := <collect-om(s);concat-with-sublists> elem*
        ; e_id := <id-encoding> inputident
        
rules

  GenerateCodeJavaServlet = generate-java-servlet-label-context-var; fail

  generate-java-servlet-label-context-var :
    Application(qid, sections)
    ->
    <emit-java-code> compilation-unit|[
      package utils;
      
      public abstract class PageServlet {
        public java.util.Stack<String> labelStrings = new java.util.Stack<String>();
      
        public String getLabelString() { 
          return labelStrings.peek();
        }
      
        public void enterLabelContext(String ident) { 
          labelStrings.push(ident);
        }
      
        public void leaveLabelContext() { 
          labelStrings.pop();
        }
      
        public boolean inLabelContext() { 
          return !labelStrings.empty();
        }
      }
    ]|
    
rules // to be included in input element translations

  connect-with-enclosing-label =
  ! bstm* |[
    if(ps.inLabelContext()){
      out.print(" id=\""+ps.getLabelString()+"\" ");
    }
  ]|