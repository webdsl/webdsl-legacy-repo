module org/webdsl/dsl/to-java-servlet/uicomponents/action

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front
    
rules 

  action-id-encoding : //TODO make all id encodings use utility functions so the strategy can be easily modified
    (actionident,args) -> e|[ ident+"~actionident"+uniqueid+e ]|
    with  e := <actual-action-args-to-state-enc> args     
  
  id-encoding :
    inputident -> java:expr |[ ident+"~inputident"+uniqueid ]|
  
  elem-to-java-servlet :
    tc@TemplateCall("action",[e2,e1],passign*,[]) ->
    <wrap-action-render-java-code> 
    bstm* |[ 
      ident = e4;
        out.print("<input type=\"submit\" name=\""+ident+"\" value=\"");
        bstm_exptostring*
        out.print("\" "+e_attrs1+" />"); 
    ]|
    with  e3 := <?ThisCall(name,args);!name> e1
        ; bstm_exptostring* := <to-page-string-java-servlet>  e2
        ; actionident := <get-actionnumber> tc   
        ; e_attrs1 := <to-html-attrs> passign*        
        ; e4 := <action-id-encoding> (actionident,args)
        //; bstm_validation* := <render-validation-exceptions>
        
  handle-actions-to-java-servlet: 
    tc@TemplateCall("action",[e2,e1],passign*,[]) ->
    <wrap-action-render-java-code> 
    bstm*|[
      ident = e4;
        if(ps.getParammap().get(ident)!=null)
        {
          x_action temp = (x_action)actionclasses.get("~x_action");
          temp.x_action(e*,ident);
        }
    ]|
    with  actionident := <get-actionnumber> tc   
        ; x_action := <?ThisCall(name,args);!name> e1
        ; e* := <map(expression-to-java-servlet)> args
        ; e4 := <action-id-encoding> (actionident,args)

