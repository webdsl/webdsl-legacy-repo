module org/webdsl/dsl/modules/types/entity

imports
  libstrategolib

imports
  libwebdsl-front

rules

  type-default-value :
    s@SimpleSort(y) -> exp |[ null ]|
    where <is-entity-type> s

rules

  desugar-types :
    TemplateCall(x,arg*,elem*) -> <rename-all> elem|[ 
      dummy() {
        if (e != null) {
          navigate($viewY(e)){text(e.name)} 
        } 
        if (e == null) {
          text("null")
        }
      }
    ]|
    where <?"output"> x //"output" string not in lhs because the x with annotations is needed to check whether it is a call to built-in output
        ; <CallToBuiltInTemplate> x
        ; [e] := arg*
        ; SimpleSort($Y) := <type-of> e
        ; <IsEntity> $Y
    with  $viewY := <decapitalize-string> $Y

  desugar-types :
    TemplateCall(x,arg*,elem*) -> <rename-all> elem|[ list { for(x1 : $X in e){ listitem{ output(e2) } } } ]|
    where <?"output"> x
        ; <CallToBuiltInTemplate> x
        ; [e] := arg*
        ; GenericSort("List",[SimpleSort($X)]) := <type-of> e
    with  x1 := <newname> "outputlist"
        ; e2 := Var(x1)
