module generation

imports libstratego-aterm libstratego-gpp
imports include/nwl
imports desugar type-analysis
imports check read

rules
  
  module-name : Module(x, d*) -> x
  
rules // generation

  generate-java:
    (selected, position, ast, path, project-path) ->
    ($[[<module-name>ast].java], <nwl-to-java> ast)

  generate-aterm:
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <pp-aterm-box; box2text-string(|120)> selected

rules

  sep = sep(|"\n")
  sep(|x) = separate-by(|x); concat-strings

  nwl-to-java =
    desugar-all;
    get-toplevel-defs;
    bottomup(to-java-ignore <+ to-java <+ is-string <+ is-list <+ aterm-to-string);
    !$[package nwl;
   
[<sep>]
      ]
      
  to-java-ignore =
    is-java-ignore; !""
    
  top-to-java =
    bottomup(to-java-ignore <+ to-java <+ is-string <+ is-list <+ aterm-to-string)
    
  is-java-ignore = fail
  
  to-java:
    Function(name,params*,body) -> $[
    public void [name]([<sep(|", ")> params*])
          [body]
    ]
    
  to-java:
    Param(ident,sort) -> $[[sort] [ident]]
    
  to-java:
    Block(x) -> $[
    {
      [<sep> x]
    }]
    
  to-java:
    Assign(var, val) -> $[[var] = [val];]
  
  to-java: Var(x) -> x
  to-java: StringLit(x) -> x
  to-java: IntLit(x) -> x
  to-java: And(x,y) -> $[([x] && [y])]
  to-java: Or(x,y) -> $[([x] || [y])]
  to-java: Gt(x,y) -> $[([x] > [y])]
  to-java: Plus(x,y) -> $[[x] + [y]] 
  to-java: True() -> $[true]
  to-java: False() -> $[false]
  
  to-java:
    Entity(x, p*) ->
    $[ class [x] {
           [<sep> p*]
       }
     ]

  to-java:
    Property(x, t) -> $[
      private [t] [x];
    
      public [t] get_[x] {
        return [x];  
      }
    
      public void set_[x] ([t] [x]) {
        this.[x] = [x];    
      }
    ]
  
  to-java:
    Init([x*]) -> $[
      // Init action
      {
        [<sep>x*]
      }
    ]
  
  to-java:
    TemplateDef(mod*, name, fparams*, body) -> $[
  public class [name]([<sep(|", ")> fparams*]) {
       
    /* Modifiers: [<?[]; !"template" <+ sep(|", ")> mod*] */
    public void render() {
      [<sep> body]
    }
      
  }
]

  to-java:
    SimpleType(x) -> x
   
  aterm-to-string =
    pp-aterm-box; box2text-string(|120)
    