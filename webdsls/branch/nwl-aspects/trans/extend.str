module extend

imports libstratego-aterm libstratego-gpp
imports include/nwl
imports type-analysis rename pretty-print primitives
imports nwl check

rules // extend entity

  check: e@ExtendEntity(x, _) -> (e, $[Extend entity of undefined entity [x]])
    where require(<EntityDeclaration> x) 

  desugar: e@ExtendEntity(x, body*) -> []
    with  rules(ExtendEntity : x -> body*)
      ; debug(!"Set extend" )
          
  desugar: Entity(x, oldbody) -> Entity(x, newbody)
    where extrabody := <once-ExtendEntity> x
    with newbody := <concat> [oldbody, extrabody]
        ; debug(!"Extended ")

rules // extend function

  desugar: Function(name, params, block1) -> Function(name, params, res)
    where block2 := <once-ExtendFunction> (name, params)
    with  res := Block(<concat> [<?Block(<id>)> block1, <?Block(<id>)> block2])
  
  desugar: Entity(x, body*) -> Entity(x, body2*)
    where <one(?ExtendFunction(_,_,_))> body*
    with  body2* := <remove-all(desugar-extend-entity-function(|x))> body*
    
  desugar-extend-entity-function(|ent) =
    ?ExtendFunction(name, params, body);
    rules(ExtendFunction : (name, params) -> body)

// TODO: extend function now matches all functions with the same name, no matter which entity
