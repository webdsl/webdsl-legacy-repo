module desugar

imports libstratego-aterm libstratego-gpp
imports include/nwl
imports emit read check nwl
imports separation/-

rules // desugared builder
    
  show-desugared :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <desugar-all; pp-aterm-box; box2text-string(|120)> selected

  show-desugared-pp :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"d.nwl")> path;
      result-string := <normalize-all; pp-nwl> selected
      
strategies
  
  ignore-dr-tracking = ?"DesugarApplied"
  
  desugar-top =
    track-rules-with-creates(
      desugar-top-1
      | <CurrentDefinitionKey>)
      
  desugar-top-1 =
    innermost(
      desugar;
      rules(DesugarApplied := True())
    )
    
  // dummy
  IncrementalDesugaring = fail
  
  desugar-all = 
    repeat(
      {| DesugarApplied:
        dependency-phase(
	        {defs:
	          all-keys-Definition => defs;
		        transform-defs(desugar-top)
		      ; repeat(
	            desugar-once;
	            rules(DesugarApplied := True())
	          )
	        ; add-emits
		      ; where(DesugarApplied)    // quit if nothing done
		      }
		    | "desugar")
	    |}
	  )
   ; remove-defs(?[])
      
  normalize-all = innermost(normalize)
   
  desugar = fail
  desugar-once = fail
  
rules

  normalize : 
    Call(r) -> Call(r, [])
  
  normalize :
    TemplateRef(x) -> TemplateRef(x, [])
  
strategies // pretty-printing
  
  pp-nwl =
    ast2abox(|[<import-term(include/nwl.pp.af)>, <import-term(syntax/nwl-pretty.pp.af)>]);
    box2text-string(|120) 
    
      