module entities

imports functions

exports
  
  sorts Property Annotations
  context-free syntax
    "entity" ID "{" EntityBody* "}"         -> Definition {cons("Entity")} 
    ID ":" Type                           -> Property   {cons("Property")} 
    ID ":" Type "(" {Annotation ","}* ")" -> Property   {cons("Property")}
    "id"                                  -> Annotation {cons("Id")}
    "name"                                -> Annotation {cons("Name")}
    "inverse" ":" ID                      -> Annotation {cons("Inverse")}
  
  Property                                -> EntityBody
  Function                                -> EntityBody
  
  sorts ExtendEntity
  context-free syntax
    ExtendEntity                                              -> Definition
    "extend" "entity" ID "{" EntityBody* "}"                  -> ExtendEntity {cons("ExtendEntity")}
  
  sorts Type
  context-free syntax
     ID                    -> Type {cons("SimpleType")}
     "Set" "<" Type ">"    -> Type {cons("SetType")}
