module blog

entity Blog {
  url    : String (id)
  name   : String (name)
  posts  : Set<Post>  
  author : User
}
 
entity Post { 
  url    : String (id)
  title  : String (name) 
  text   : WikiText
  blog   : Blog (inverse:posts) 
  author : User 
  blog   : Blog 
}

entity User {
  username : String (id)
  password : Secret
  blogs    : Set<Blog> (inverse:author) 
  posts    : Set<Post> (inverse:author)
}

define page root() {  
  list{ 
    for(b : Blog in Blog.all()) { 
      listitem{ navigate blog(b) { output(b.name) } } 
    }
  }
}

define page blog(b : Blog) {
  header{output(b.name)}
  list{ 
    for(p : Post in b.posts) {
      listitem{ output(p.title) }
    }
  }
}
 
define output(p : Post) {
  navigate post(p) { output(p.name) }   
}
 
define page post(p : Post) {
  header{output(p.title)}    
  output(p.text)
  par{ "Posted by " output(p.author) }
  navigate editpost(p) { "Edit" }
}

define page createpost(b : Blog) {
  var p : Post := Post{}    
  action create() { 
    p.author := b.author; 
    p.save();     
    return post(p);
  }
  header{output(b.name)} 
  form{
    input(p.url) 
    input(p.title) 
    input(p.text)
    submit create() { "Create" }
  }
}

define page editpost(p : Post) {
  action save() { 
    return post(p);
  }
  header{output(p.title)}
  form{ 
    input(p.url) 
    input(p.title)
    input(p.text)
    submit save() { "Save" }
  }
}

