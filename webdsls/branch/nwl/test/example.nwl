module blog

entity Blog {
  name   : String 
  posts  : Set<Post> 
  author : User (name)
}
 
entity Post { 
  url    : String  
  title  : String (name)
  text   : WikiText
  blog   : Blog (inverse:posts) 
  author : User
  blog   : Blog 
}

entity User {
  username : String
  password : Secret
}

define page root() { 
  list{ 
    for(b : Blog in Blog.all()) {
      listitem{ navigate blog(b) { output(b.name) } } 
    }
  }
}

define page blog(b : Blog) {
  header{output(b.name)}
  list{
    for(p : Post in b.posts) {
      listitem{ output(p) }
    }
  }
}  

define page post(p : Post) {
  header{output(p.title)}
  output(p.text)
  par{ "Posted by " output(p.author) }
  navigate editpost(p) { "Edit" }
}

define page createpost(b : Blog) {
  var p : Post := Post{} 
  action create() { 
    p.author := b.author;
    p.save();
    return post(p);
  }
  header{output(b.name)} 
  form{
    input(p.url)
    input(p.title) 
    input(p.text)
    submit create() { "Create" }
  }
}

define page editpost(p : Post) {
  action save() { 
    return post(p);
  }
  header{output(b.name)} 
  form{
    input(p.url)
    input(p.title)
    input(p.text)
    submit save() { "Save" }
  }
}

