module entitytest

entity Foo {
  title : String (name)   
  title : String (id)  
  bar   : Set<Bar>
  frits : Entity<Bar> // FAIL
  frits2 : Bar
}

entity Bar {
  bla : Foo (inverse:bar)   
}

define page bar() {
  output(h)
}

define hello() {
  "Zef"
}
 
define page foo(g : Foo, f : Bar) { 
  var z : Foo := Foo{}
  ouput(z)
  input(g.name) // Should fail, not within form
  form { 
    output(g.name) 
    submit bla() { "Bla" } // non-existing action
  }
  outfroet(f) // FAIL, does not exist
  listitem { "Zef" } // FAIL, either does not exist, or should be nested in list
  list {
    for(i : Foo in z) { // g is not a list, or set
    }
  }
  
  hello(f) // does not check args of even defined templates
  
  navigate bar() { "Bla" } // Literals as expressions: 7, "Zef" 
  
  action bla4() {
    g.save();
    return bar();
  }
}


