module expressions

imports Common

exports
  
  sorts Exp
  context-free syntax
    STRING     -> Exp {cons("StringLit")}
    INT        -> Exp {cons("IntLit")}
    ID         -> Exp {cons("Var")}
    Exp "." ID -> Exp {cons("PropertyAccess")}
    
  context-free syntax
    Exp "." ID "(" {Exp ","}* ")" -> Exp {cons("MethodCall")}
    ID "{" "}"                    -> Exp {cons("Constructor")}
  
  context-free syntax
    "(" Exp ")" -> Exp {bracket}
    "-" Exp     -> Exp {cons("UnaryMinus")}
    Exp "*" Exp -> Exp {cons("Times"), left}
    Exp "/" Exp -> Exp {cons("Div"), left}
    Exp "%" Exp -> Exp {cons("Mod"), left}
    Exp "+" Exp -> Exp {cons("Plus"), left}
    Exp "-" Exp -> Exp {cons("Minus"), left}
    Exp "=" Exp -> Exp {cons("Eq"), non-assoc}
    Exp ">" Exp -> Exp {cons("Gt"), non-assoc}

  context-free priorities
    "-" Exp -> Exp
    > {left:
        Exp "*" Exp -> Exp
        Exp "/" Exp -> Exp
        Exp "%" Exp -> Exp }
    > {left:
        Exp "+" Exp -> Exp
        Exp "-" Exp -> Exp }
    > {non-assoc:
        Exp "=" Exp -> Exp
        Exp ">" Exp -> Exp }
        