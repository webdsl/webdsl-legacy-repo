module expressions

imports Common

exports
  
  sorts Exp IndexExp
  context-free syntax
    STRING          -> Exp {cons("StringLit")}
    INT             -> Exp {cons("IntLit")}
    ID              -> Exp {cons("Var")}
    ID "{" "}"      -> Exp {cons("Constructor")}
    
  context-free syntax
    Exp "." ID "(" {Exp ","}* ")" -> Exp {cons("MethodCall")}
    Exp "." ID                    -> Exp {cons("PropertyAccess")}
    Exp "[" Exp "]"               -> Exp {cons("IndexAccess")}
    Exp                           -> Exp 
   
  context-free syntax
    "(" Exp ")"  -> Exp {bracket}
    "-" Exp      -> Exp {cons("UnaryMinus")}
    Exp "*"  Exp -> Exp {cons("Times"), left}
    Exp "/"  Exp -> Exp {cons("Div"), left}
    Exp "%"  Exp -> Exp {cons("Mod"), left}
    Exp "+"  Exp -> Exp {cons("Plus"), left}
    Exp "-"  Exp -> Exp {cons("Minus"), left}
    Exp "==" Exp -> Exp {cons("Eq"), non-assoc}
    Exp ">"  Exp -> Exp {cons("Gt"), non-assoc}
    Exp "<"  Exp -> Exp {cons("Lt"), non-assoc}

  context-free priorities
    "-" Exp -> Exp
    > { Exp "." ID                    -> Exp 
        Exp "." ID "(" {Exp ","}* ")" -> Exp
        Exp "[" Exp "]"               -> Exp }
    > {left:
        Exp "*" Exp -> Exp
        Exp "/" Exp -> Exp
        Exp "%" Exp -> Exp }
    > {left:
        Exp "+" Exp -> Exp
        Exp "-" Exp -> Exp }
    > {non-assoc:
        Exp "==" Exp -> Exp
        Exp ">" Exp -> Exp 
        Exp "<" Exp -> Exp }
        