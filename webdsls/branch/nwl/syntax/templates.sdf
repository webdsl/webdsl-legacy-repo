module templates

imports expressions

exports
  
  sorts Mod Arg
  context-free syntax
    "define" Mod* ID "(" {Param ","}* ")" "{" Element* "}" -> Definition {cons("TemplateDef")}
    "page"                                                 -> Mod {cons("Page")}
    ID ":" Type                                            -> Param {cons("Param")}
      
  sorts Element
  context-free syntax
    STRING                                              -> Element {cons("String")}
    
    ID                                                  -> Element {cons("Call")}
    ID "(" {Exp ","}* ")"                               -> Element {cons("CallArgs")}
    ID                    "{" Element* "}"              -> Element {cons("CallElems")}
    ID "(" {Exp ","}* ")" "{" Element* "}"              -> Element {cons("Call")}
    
    "for" "(" ID ":" Type "in" Exp ")" "{" Element* "}" -> Element {cons("ForElem")}
    "for" "(" ID ":" Type          ")" "{" Element* "}" -> Element {cons("ForAllElem")}
    "navigate" PageRef "{" Element* "}"                 -> Element {cons("Navigate")}
    ID "(" {Exp ","}* ")"                               -> PageRef {cons("PageRef")}
         
    VarDecl                                             -> Element 
    "action" ID "(" {Param ","}* ")" "{" Statement* "}" -> Element {cons("Action")}
    
    "submit" ID "(" {Exp ","}* ")" "{" Element* "}"     -> Element {cons("Submit")}
    
    "<" ID ">" Element* "</" ID ">"                     -> Element {cons("XmlElem")}
    "elements"                                          -> Element {cons("Elements")}
    
  lexical syntax
    "submit"   -> ID {reject}
    "action"   -> ID {reject} 
    "navigate" -> ID {reject}
    
