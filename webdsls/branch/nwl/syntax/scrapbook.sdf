module scrapbook

exports
  
  sorts Sort Symbol
  context-free syntax
    Id                        -> Sort
    String                    -> Symbol
    Sort                      -> Symbol
    Symbol "?"                -> Symbol
    Symbol "*"                -> Symbol
    Symbol "+"                -> Symbol
    "{" Symbol Symbol "}" "*" -> Symbol
    "{" Symbol Symbol "}" "+" -> Symbol
    
  sorts Production
  context-free syntax
    Symbol* "->" Symbol -> Production
    
  sorts Grammar
  context-free syntax
    "sorts" Sort* "syntax" Production* -> Grammar
    
    
  
  
    Symbol* "->" Symbol "{" Annotation* "}" -> Production 
    
    {cons("")}
    
exports
  
  context-free syntax
    ID ":" Type -> Property          {cons("Property")}
    
  syntax
    <ID-CF> <LAYOUT?-CF> ":" <LAYOUT?-CF> <Type-CF> -> <Property-CF>          {cons("Property")} 
    
  sorts Definition Property 
  context-free syntax
    "entity" ID "{" Property* "}" -> Definition {cons("Entity")} 
    ID ":" Type                   -> Property   {cons("Property")} 
    
  sorts Type
  context-free syntax
     ID                 -> Type {cons("SimpleType")}
     "Set" "<" Type ">" -> Type {cons("SetType")}
     
  lexical syntax
    [a-zA-Z][a-zA-Z0-9\_]* -> ID
           
           
    Symbol* -> Symbol 
    
   context-free syntax
    %%ID          -> Var
    Var         -> Exp {cons("Var")}
    IntConst    -> Exp {cons("Int")}
    "(" Exp ")" -> Exp {bracket}
    "-" Exp     -> Exp {cons("UnaryMinus")}
    Exp "*" Exp -> Exp {cons("Times")}
    Exp "/" Exp -> Exp {cons("Div")}
    Exp "%" Exp -> Exp {cons("Mod")}
    Exp "+" Exp -> Exp {cons("Plus")}
    Exp "-" Exp -> Exp {cons("Minus")}
    Exp "=" Exp -> Exp {cons("Eq")}
    Exp ">" Exp -> Exp {cons("Gt")}   
    
     
  context-free syntax
    ID          -> Var
    Var         -> Exp {cons("Var")}
    IntConst    -> Exp {cons("Int")}
    "(" Exp ")" -> Exp {bracket}
    "-" Exp     -> Exp {cons("UnaryMinus")}
    Exp "*" Exp -> Exp {cons("Times"), left}
    Exp "/" Exp -> Exp {cons("Div"), left}
    Exp "%" Exp -> Exp {cons("Mod"), left}
    Exp "+" Exp -> Exp {cons("Plus"), left}
    Exp "-" Exp -> Exp {cons("Minus"), left}
    Exp "=" Exp -> Exp {cons("Eq"), non-assoc}
    Exp ">" Exp -> Exp {cons("Gt"), non-assoc}

  context-free priorities
    "-" Exp -> Exp
    > {left:
        Exp "*" Exp -> Exp
        Exp "/" Exp -> Exp
        Exp "%" Exp -> Exp }
    > {left:
        Exp "+" Exp -> Exp
        Exp "-" Exp -> Exp }
    > {non-assoc:
        Exp "=" Exp -> Exp
        Exp ">" Exp -> Exp }
    