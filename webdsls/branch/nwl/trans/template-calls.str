module template-calls

imports parameters expressions

signature
  constructors
    Call        : ID * List(Exp) * List(Element) -> Element // x(e*){elem*}
    String      : STRING -> Element // "..."

rules // projection

signature-of   : Call(x, e*, elem*) -> (x, <map(type-of)> e*)
call-of        : Call(x, e*, elem*) -> (x, e*)
declaration-of : Call(x, e*, elem*) -> <signature-of; Template>

is-primitive-template =  ?"input" <+ ?"output" <+ ?"form"

rules // checking 

check :
  Call("input", [e], []) -> (e, $[Argument of input should be variable or property access])
  where not(<is-lvalue> e)
  
check :
  Call("output", [e], []) -> (e, $[Navigation to undefined page '[n](x: [n])'])
  where t@SimpleType(n) := <type-of> e
  where <is-entity-type> t
  where not(<Template> ("output", [t]))
  where not(<Template> (n, [t]))

check :
  Call(x, e*, elem*) -> (x, $[Template '[x]' is not defined])
  where not(<is-primitive-template> x)
  where not(<Template> x)

check :
  Call(x, e*, elem*) -> (x, $[No definition for template with signature '[x]([<map(type-of);pp> e*])'])
  where not(<is-primitive-template> x)
  where <Template> x
  where not(declaration-of)
  
constraint-warning :
  Call(x, e*, elem*) -> [(x, $[Page definition is used as template])]
  where def := <declaration-of>
  where <is-page-def> def
        
check :
  Call(x, e*, elem*) -> <check-args>
        
// cut here ----------------------------------------------

rules // pretty-print

pp-sig : (x, t*) -> $[[x]([<pp>t*])]

 signature
  constructors
    CallElems      : ID * List(Element) -> Element
    CallArgs       : ID * List(Exp) -> Element
    Call           : ID -> Element
            
rules // desugaring template calls

desugar :
  CallArgs(x, e*) -> Call(x, e*, [])
  
desugar :
  CallElems(x, elem*) -> Call(x, [], elem*)
  
desugar : 
  Call(x) -> Call(x, [], [])
 
check :
  Call("form", [e*], []) -> (e*, $[Form should not have arguments])
  where not(<length> e* => 0)
  
rules 

// element composition validation
// input should occur in form
// listitem should occur in list

 