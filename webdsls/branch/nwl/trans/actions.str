module actions

rules // assignment

  check :
    Assign(e1, e2) -> (e1, ["Left-hand side of assignment should be variable or property access"])
    where not(<is-lvalue> e1)

  check :
    Assign(lval, e) -> (<id>, ["Type of lhs ('", <pp>t1, "') does not match type of rhs ('", <pp>t2, "')"])
    where t1 := <type-of>lval; t2 := <type-of> e; not(<eq>(t1, t2))

rules // return

  // no checks needed for return
  
  // should an action always have a return?
  
  // check for hidden return in action, i.e. shadowed by earlier return