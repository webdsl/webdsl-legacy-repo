 module expressions
 
 rules // expressions
 
   rename = 
     Rename; debug(!"renamed: "); where(try(TypeOf; debug(!"type: ")))
 
  type-of :
    Id(x) -> t
    where t := <TypeOf>
    
  check :
    Id(x) -> (<id>, ["Variable not declared"])
    where debug(!"ce(x): "); not(type-of)
    
    // bug: variable not declared error shows up only once for same variable (name)
    
  type-of :
    GetProperty(e, f) -> t
    where t := <type-of; lookup-property-type(|f)> e
    
  check :
    GetProperty(e, f) -> (<id>, [t, " has no property ", f])
    where not(type-of); t := <type-of> e
    