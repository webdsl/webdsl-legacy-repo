module primitives

imports include/nwl

rules // primitive types

  declare-primitives =
    where( primitive-types; map(declare-primitive-type) );
    where( primitive-methods; map(declare-primitive-method) )
  
  primitive-types =
    !["Bool", "String", "Int", "Text", "WikiText", "Secret"]
  
  declare-primitive-type =
    ?x; rules( IsPrimitiveType : x -> x )
  
  is-primitive-type =
     SimpleType(IsPrimitiveType)
   
  is-string-type =
    ?SimpleType("String")
    
  primitive-methods =
    ![(SimpleType("Int"), "inc", [], SimpleType("Int"))
     ,(SimpleType("Int"), "add", [SimpleType("Int")], SimpleType("Int"))
     ]
     
  declare-primitive-method =
    ?(t0, f, t*, t1)
    ; rules(
        MethodType : (t0, f, t*) -> t1
      )

rules // type-of
 
  type-of : 
    StringLit(x) -> SimpleType("String" )
    
  method-type = 
    MethodType
    
rules // projection

  is-primitive-template =  
    ?"input" <+ ?"output" <+ ?"form"
