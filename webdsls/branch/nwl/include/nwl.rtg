
regular tree grammar
  start Start
  productions
    ListStarOfExp0        -> ListPlusOfExp0
    ListStarOfExp0        -> <nil>()
    ListStarOfExp0        -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0        -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0        -> <cons>(Exp,ListStarOfExp0)
    ListStarOfElement0    -> ListPlusOfElement0
    ListStarOfElement0    -> <nil>()
    ListStarOfElement0    -> <conc>(ListStarOfElement0,ListStarOfElement0)
    ListPlusOfElement0    -> <conc>(ListStarOfElement0,ListPlusOfElement0)
    ListPlusOfElement0    -> <conc>(ListPlusOfElement0,ListStarOfElement0)
    ListPlusOfElement0    -> <conc>(ListPlusOfElement0,ListPlusOfElement0)
    ListPlusOfElement0    -> <cons>(Element,ListStarOfElement0)
    ListStarOfStatement0  -> ListPlusOfStatement0
    ListStarOfStatement0  -> <nil>()
    ListStarOfStatement0  -> <conc>(ListStarOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0  -> <conc>(ListStarOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0  -> <conc>(ListPlusOfStatement0,ListStarOfStatement0)
    ListPlusOfStatement0  -> <conc>(ListPlusOfStatement0,ListPlusOfStatement0)
    ListPlusOfStatement0  -> <cons>(Statement,ListStarOfStatement0)
    ListStarOfParam0      -> ListPlusOfParam0
    ListStarOfParam0      -> <nil>()
    ListStarOfParam0      -> <conc>(ListStarOfParam0,ListStarOfParam0)
    ListPlusOfParam0      -> <conc>(ListStarOfParam0,ListPlusOfParam0)
    ListPlusOfParam0      -> <conc>(ListPlusOfParam0,ListStarOfParam0)
    ListPlusOfParam0      -> <conc>(ListPlusOfParam0,ListPlusOfParam0)
    ListPlusOfParam0      -> <cons>(Param,ListStarOfParam0)
    ListStarOfMod0        -> ListPlusOfMod0
    ListStarOfMod0        -> <nil>()
    ListStarOfMod0        -> <conc>(ListStarOfMod0,ListStarOfMod0)
    ListPlusOfMod0        -> <conc>(ListStarOfMod0,ListPlusOfMod0)
    ListPlusOfMod0        -> <conc>(ListPlusOfMod0,ListStarOfMod0)
    ListPlusOfMod0        -> <conc>(ListPlusOfMod0,ListPlusOfMod0)
    ListPlusOfMod0        -> <cons>(Mod,ListStarOfMod0)
    ListStarOfAnnotation0 -> ListPlusOfAnnotation0
    ListStarOfAnnotation0 -> <nil>()
    ListStarOfAnnotation0 -> <conc>(ListStarOfAnnotation0,ListStarOfAnnotation0)
    ListPlusOfAnnotation0 -> <conc>(ListStarOfAnnotation0,ListPlusOfAnnotation0)
    ListPlusOfAnnotation0 -> <conc>(ListPlusOfAnnotation0,ListStarOfAnnotation0)
    ListPlusOfAnnotation0 -> <conc>(ListPlusOfAnnotation0,ListPlusOfAnnotation0)
    ListPlusOfAnnotation0 -> <cons>(Annotation,ListStarOfAnnotation0)
    OptAnnotations0       -> <some>(Annotations)
    OptAnnotations0       -> <none>()
    ListStarOfProperty0   -> ListPlusOfProperty0
    ListStarOfProperty0   -> <nil>()
    ListStarOfProperty0   -> <conc>(ListStarOfProperty0,ListStarOfProperty0)
    ListPlusOfProperty0   -> <conc>(ListStarOfProperty0,ListPlusOfProperty0)
    ListPlusOfProperty0   -> <conc>(ListPlusOfProperty0,ListStarOfProperty0)
    ListPlusOfProperty0   -> <conc>(ListPlusOfProperty0,ListPlusOfProperty0)
    ListPlusOfProperty0   -> <cons>(Property,ListStarOfProperty0)
    ListStarOfDefinition0 -> ListPlusOfDefinition0
    ListStarOfDefinition0 -> <nil>()
    ListStarOfDefinition0 -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfStringChar0 -> <string>
    ListPlusOfStringChar0 -> <string>
    OptLit0               -> <string>
    Statement             -> ReturnPage(ID,ListStarOfExp0)
    Statement             -> ExpStat(Exp)
    Statement             -> Assign(LValue,Exp)
    Element               -> Submit(ID,ListStarOfExp0,ListStarOfElement0)
    Element               -> Action(ID,ListStarOfParam0,ListStarOfStatement0)
    Element               -> VarDeclElem(ID,Type,Exp)
    Element               -> Input(LValue)
    Element               -> Navigate(ID,ListStarOfExp0,ListStarOfElement0)
    Element               -> ForElem(ID,Type,Exp,ListStarOfElement0)
    Element               -> Call(ID,ListStarOfExp0,ListStarOfElement0)
    Element               -> CallElems(ID,ListStarOfElement0)
    Element               -> CallArgs(ID,ListStarOfExp0)
    Element               -> Call(ID)
    Element               -> String(STRING)
    Param                 -> Param(ID,Type)
    Mod                   -> Page()
    Definition            -> TemplateDef(ListStarOfMod0,ID,ListStarOfParam0,ListStarOfElement0)
    LValue                -> LValProperty(LValue,ID)
    LValue                -> LValId(ID)
    Exp                   -> Constructor(ID)
    Exp                   -> MethodCall(Exp,ID,ListStarOfExp0)
    Exp                   -> GetProperty(Exp,ID)
    Exp                   -> Id(ID)
    Type                  -> SetType(Type)
    Type                  -> SimpleType(ID)
    Annotation            -> Inverse(ID)
    Annotation            -> Name()
    Annotation            -> Id()
    Annotations           -> Annotations(ListStarOfAnnotation0)
    Property              -> Property(ID,Type,OptAnnotations0)
    Definition            -> Entity(ID,ListStarOfProperty0)
    Start                 -> Module(ID,ListStarOfDefinition0)
    EOF                   -> <string>
    CommentChar           -> <string>
    StringChar            -> <string>
    STRING                -> <string>
    INT                   -> <string>
    ID                    -> <string>
