module nwl

signature
  constructors
    ReturnPage   : ID * List(Exp) -> Statement
    ExpStat      : Exp -> Statement
    Assign       : LValue * Exp -> Statement
    Submit       : ID * List(Exp) * List(Element) -> Element
    Action       : ID * List(Param) * List(Statement) -> Element
    VarDeclElem  : ID * Type * Exp -> Element
    Input        : LValue -> Element
    Navigate     : ID * List(Exp) * List(Element) -> Element
    ForElem      : ID * Type * Exp * List(Element) -> Element
    Call         : ID * List(Exp) * List(Element) -> Element
    CallElems    : ID * List(Element) -> Element
    CallArgs     : ID * List(Exp) -> Element
    Call         : ID -> Element
    String       : STRING -> Element
    Param        : ID * Type -> Param
    Page         : Mod
    LValProperty : LValue * ID -> LValue
    LValId       : ID -> LValue
    Constructor  : ID -> Exp
    MethodCall   : Exp * ID * List(Exp) -> Exp
    GetProperty  : Exp * ID -> Exp
    Id           : ID -> Exp
    SetType      : Type -> Type
    SimpleType   : ID -> Type
    Inverse      : ID -> Annotation
    Name         : Annotation
    Id           : Annotation
    Annotations  : List(Annotation) -> Annotations
    Property     : ID * Type * Option(Annotations) -> Property
    TemplateDef  : List(Mod) * ID * List(Param) * List(Element) -> Definition
    Entity       : ID * List(Property) -> Definition
    Module       : ID * List(Definition) -> Start
                 : String -> STRING
                 : String -> ID


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
