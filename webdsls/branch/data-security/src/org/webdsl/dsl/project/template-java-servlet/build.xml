<project name="@@APPNAME@@" default="compile">

    <property name="sourcedir" value="${basedir}/src"/>
    <property name="targetdir" value="${basedir}/bin"/>
    <property name="librarydir" value="${basedir}/lib"/>
    <property name="testlibrarydir" value="${basedir}/lib-test"/>
    <property name="tomcatdir" value="${basedir}/tomcat"/>

    <path id="libraries">
        <fileset dir="${librarydir}" includes="*.jar"/> 
        <fileset dir="${testlibrarydir}" includes="*.jar"/> 
    </path>

    <target name="clean">
        <delete dir="${targetdir}"/>
        <mkdir dir="${targetdir}"/>
    </target>

    <target name="compile" depends="copy-resources">
      <javac srcdir="${sourcedir}"
             destdir="${targetdir}"
             classpathref="libraries"
             debug="on"
             fork="true" 
             memoryinitialsize="256m"
             memorymaximumsize="1024m"/>          
<!-- fork= and memory sizes fix problem with javac throwing outofmemory heap space exception caused by ant 64mb default limit -->
   <!--     verbose="yes">
  <compilerarg value="-Xlint"/> 
 </javac>  -->
    </target>
  
    <target name="convertoldglobals" depends="compile">
       <java classname="utils.ConvertOldGlobals" maxmemory="2048m" fork="true">
         <classpath>
           <pathelement location="${targetdir}"/>
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>	

    <target name="check" depends="compile">
       <java classname="utils.TestAll" failonerror="true">
         <classpath>
           <pathelement location="${targetdir}"/>
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>
  
  <target name="untar-tomcat">
      <untar src="${tomcatdir}/apache-tomcat-6.0.20.tar.gz" dest="${tomcatdir}/" compression="gzip"/>
  </target>

    <target name="check-web" depends="untar-tomcat, compile">
       <java classname="utils.TestWeb" failonerror="true">
         <classpath>
           <pathelement location="${targetdir}"/>
           <fileset dir="${testlibrarydir}" includes="*.jar"/> 
           <fileset dir="${librarydir}" includes="*.jar"/> 
         </classpath>
       </java>
    </target>
  
    <target name="schema-export" depends="compile">
      <java classname="utils.SchemaExport" failonerror="true">
        <classpath>
          <pathelement location="${targetdir}"/>
          <fileset dir="${librarydir}" includes="*.jar"/> 
        </classpath>
      </java>
    </target>
  
    <target name="copy-resources">
        <copy todir="${targetdir}">
            <fileset dir="${sourcedir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

  <target name="war" depends="compile">
    <war destfile="@@APPNAME@@.war" webxml="web.xml">
      <lib dir="${librarydir}">  
        <exclude name="javaee.jar"/>
      </lib>
      <classes dir="${targetdir}"/>
      <fileset dir="${basedir}/html"/>
      <zipfileset dir="${basedir}/images" prefix="images"/>
      <zipfileset dir="${basedir}/stylesheets" prefix="stylesheets"/>
      <zipfileset dir="${basedir}/javascript" prefix="javascript"/>
    </war>
  </target>

  <target name="deploy" depends="war">
    <delete file="@@TOMCATPATH@@/webapps/@@APPNAME@@.war"/>
    <delete dir="@@TOMCATPATH@@/webapps/@@APPNAME@@"/>
    <copy file="@@APPNAME@@.war" todir="@@TOMCATPATH@@/webapps"/>
  </target>

  <target name="deployfiles" depends="compile">
    <copy file="${basedir}/web.xml" todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/WEB-INF"/>     
    <copy todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/WEB-INF/lib">
      <fileset dir="${librarydir}">  
        <exclude name="javaee.jar"/>
      </fileset>
    </copy>	
    <copy todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/WEB-INF/classes">
      <fileset dir="${targetdir}"/>
    </copy>
    <copy todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/html">
      <fileset dir="${basedir}/html"/>
    </copy>	
    <copy todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/images">
      <fileset dir="${basedir}/images"/>
    </copy>	
    <copy todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/stylesheets">
      <fileset dir="${basedir}/stylesheets"/>
    </copy>	
    <copy todir="@@TOMCATPATH@@/webapps/@@APPNAME@@/javascript">
      <fileset dir="${basedir}/javascript"/>
    </copy>   
  </target> 
</project>
