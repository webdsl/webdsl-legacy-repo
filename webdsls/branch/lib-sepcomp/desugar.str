module org/webdsl/dsl/separation/lib/desugar

imports 
  separation/-
  separation/methods/interface
  
rules

// TODO: fix loading of typecheck deps
// TODO: load definitions that are using rules that were created in previous phases
// TODO: remove all-old-defs in desugar file ?
  
  dr-ignore-dr-tracking = ?"RuleResolvingEnabled"
  
  with-rule-resolving(s) = {| RuleResolvingEnabled:
    rules(RuleResolvingEnabled := 1);
    s
  |}
 
  // Succeed if the cached version of the definition is still valid
  is-cacheable = where(
      def-is-cached
    ; ?def; def-key-to-module; ?mod
    ; all-modules; fetch(?mod)            // module is still imported
  )
  
  def-is-cached: key -> key
    where where(def-key-to-module; not(is-module-modified))   // file is not modified
        ; not(get-toplevel-definition)                        // definition is read from cache
        ; if get-definition-owner => owner then
          	 <def-is-cached> owner
          end
  
  dynamic-rule-resolver: key -> key
    where RuleResolvingEnabled
        ; <get-cached-rules> key

  desugar-check-dependencies: def -> def
    with(
      CreatedRules;
      // Get a list of (name, keys*) pairs
      rules-to-keys;
      load-dependent-defs-for-rules(|def)
    )
    
  cleanup-desugar-iteration: defs -> defs
    // Remove created rules for emitted definitions
    with filter(\def -> <rules(CreatedRules :- def)> where(def-key-to-module; is-emitted-mod) \)
  