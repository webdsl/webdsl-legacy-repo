module org/webdsl/dsl/to-pil/request-param-conversion

imports
  libstratego-lib

imports
  libwebdsl-front

rules 

  /*
  pil-conversion-to-object :
    (pil-type|[ Long ]|,x_name,x_id) ->
    pil-stat* |[
    try{ 
      x_id = Long.valueOf(parammap.get("~<OriginalNonUniqueName> x_name")); 
    }
    catch(NumberFormatException nfe){System.out.println(nfe.getMessage());}  
    ]|
    */
 
  pil-conversion-to-object :
    (pil-type|[ pil::Int ]|, x_name, x_id) ->
    pil-stat* |[
      try { 
        x_id = parammap[e_original].toInt(); 
      }
      catch(Exception ex){ println(ex.toString()); }  
    ]|
    with e_original := <pil-wrap-string> <OriginalNonUniqueName> x_name

  pil-conversion-to-object :
    (pil-type|[ pil::String ]|,x_name,x_id) ->
    pil-stat* |[
      try { 
        x_id = parammap[e_original].toString(); 
      }
      catch(Exception ex){ println(ex.toString()); }  
    ]|
    with e_original := <pil-wrap-string> <OriginalNonUniqueName> x_name

  /*
  pil-conversion-to-object :
    (pil-type|[ Double ]|,x_name,x_id) ->
    bstm* |[
    try{ 
      x_id = Double.valueOf(parammap.get("~<OriginalNonUniqueName> x_name")); 
    }
    catch(NumberFormatException nfe){System.out.println(nfe.getMessage());}  
    ]|
    */
    
  pil-conversion-to-object :
    (pil-type|[ pil::Bool ]|,x_name,x_id) ->
    pil-stat* |[
      try { 
        x_id = parammap[e_original].toBool(); 
      }
      catch(Exception ex){ println(ex.toString()); }  
    ]|
    with e_original := <pil-wrap-string> <OriginalNonUniqueName> x_name
    
  pil-conversion-to-object :
    (pil-type|[ pil::Float ]|,x_name,x_id) ->
    pil-stat* |[
      try { 
        x_id = parammap[e_original].toFloat(); 
      }
      catch(Exception ex){ println(ex.toString()); }  
    ]|
    with e_original := <pil-wrap-string> <OriginalNonUniqueName> x_name
