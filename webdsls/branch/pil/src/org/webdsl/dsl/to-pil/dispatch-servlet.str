module org/webdsl/dsl/to-pil/dispatch-servlet

imports
  libstratego-lib

imports
  libwebdsl-front

rules

  GenerateCodePil = generate-pil-dispatcher; fail

  generate-pil-dispatcher :
    Application(qid, sections) ->
    <map(pil-emit)> pil-decl*|[
      Map<String, pil::reflect::Class> application::pages = new Map<String, pil::reflect::Class>();
      Map<String, Array<String>> application::pagearguments = new Map<String, Array<String>>();

      void application::init() {
        stat1*
        stat2*
        stat3*
        stat4*
      }
    ]|
    with stat1*  := <map({\ 
                           x -> pil-stat|[ application::pages[e_key] = e_value; ]| 
                           with e_key := StringLit(String([Chars(<concat-strings> ["\"",x,"\""])]))
                              ; x_ppn := <pil-page-name> x
                              ; e_value := pil-exp|[ page::reflect::typeOf#x_ppn() ]|
                        \})> 
                        <bagof-PageNames;make-set>
       ; stat2* := <map({\ 
                           x -> pil-stat*|[
                                         //Array<String> x_s = ;
                                         application::pagearguments[e_key] = new Array<String>(e*); 
                                      ]| 
                           with e_key := StringLit(String([Chars(<concat-strings> ["\"",x,"\""])]))
                              ; e* := <TemplateArguments;map( \Arg(y,_)-> StringLit(String([Chars(y)])) \ )> x  //TemplateArguments must give unrenamed versions
                        \});concat> 
                        <bagof-PageNames;make-set>
        //ajax addition:
        ; if IsAjaxApp then
          stat3*  := <map({\ 
                           x -> pil-stat|[ application::pages[e_key] = e_value; ]| 
                           with e_key := StringLit(String([Chars(<concat-strings> ["\"",x,"\""])]))
                              ; x_ppn := <pil-page-name> x
                              ; e_value := pil-exp|[ page::reflect::typeOf#x_ppn() ]|
                        \})> 
                        <bagof-AllTopLevelTemplateNamesPil;make-set>
        ; stat4* := <map({\ 
                           x -> pil-stat*|[
                                         Array<String> s = new Array<String>(e*);
                                         pagearguments[e_key] = s; 
                                      ]| 
                           with e_key := StringLit(String([Chars(<concat-strings> ["\"",x,"\""])]))
                              ; e* := <TopLevelTemplateArgumentsPil;map( \Arg(y,_)-> StringLit(String([Chars(<OriginalNonUniqueName> y)])) \ )> x // must use unrenamed versions 
                        \});concat> 
                        <bagof-AllTopLevelTemplateNamesPil;make-set>
        else
          stat3* := []
        ; stat4* := []
        end
        
