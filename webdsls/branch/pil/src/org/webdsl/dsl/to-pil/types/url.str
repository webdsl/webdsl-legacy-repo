module org/webdsl/dsl/to-pil/types/url

imports 
  libstrategolib 
  libwebdsl-front
  
  /*
rules

  builtin-java-type :
    SimpleSort("URL") -> type|[ String  ]|
  
rules

  pil-element-id : 
    tc@elem|[ inputURL(e)[passign*]{} ]|  -> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"

  handle-actions-input-to-pil :
    tc@elem|[ inputURL(e)[passign*]{} ]|  ->
    <for-loop-counter-wrap-code> 
    bstm*|[
          
        ident += "~inputident"+uniqueid;
        
        if(ps.getParammap().get(ident)!=null)
        {
            ~*<string-length-check-pil(|x_temp,name)>
            bstm 
        }
      
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; name := <pp-webdsl> e
        ; bstm := <input-assignment-to-pil(|x_temp)> e
    
  elem-to-pil : 
    tc@elem|[ inputURL(e)[passign*]{} ]|  ->
    <for-loop-counter-wrap-code>
    bstm* |[ 
    String x_temp = ident+"~inputident"+uniqueid;
    out.print("<input name=\""+x_temp+"\" "+e_attrs1+"  type=\"text\" value=\"");
    if(inSubmittedForm)
    {
      out.print(ps.getParammap().get(x_temp));
    }
    else
    {
      bstm_exptostring*
    }
    out.print("\" />"); 
    ]|
    with  inputident := <get-inputnumber> tc
        ; bstm_exptostring* := <to-page-string-pil> e
        ; x_temp := <newname> "temp"
        ; e_attrs1 := <to-html-attrs> passign*                

  elem-to-pil :
    TemplateCall("url",[e],[passign*],[]) ->
    bstm_exptostring*
    where not(ThisCall(p,args) := e)
        ; bstm_exptostring* := <to-page-string-pil> e
        */
