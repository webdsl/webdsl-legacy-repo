module org/webdsl/dsl/to-pil/types/url

imports 
  libstrategolib 
  libwebdsl-front
  
rules

  builtin-pil-type :
    SimpleSort("URL") -> pil-type|[ String  ]|
  
rules

  pil-element-id : 
    tc@elem|[ inputURL(e)[passign*]{} ]|  -> tc{InputNumberPil(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"

  handle-actions-input-to-pil :
    tc@elem|[ inputURL(e)[passign*]{} ]|  ->
    <for-loop-counter-wrap-code-pil> 
    pil-stat*|[
          
        ident = ident + e_inputident+uniqueid;
        
        if(ps.parammap[ident]!=null)
        {
            ~*<string-length-check-pil(|x_temp,name)>
            stat 
        }
      
    ]|
    with  e_inputident := <get-inputnumber-pil; pil-wrap-string> tc
        ; x_temp := <newname> "temp"
        ; name := <pp-webdsl> e
        ; stat := <input-assignment-to-pil(|x_temp)> e
    
  elem-to-pil : 
    tc@elem|[ inputURL(e)[passign*]{} ]|  ->
    <for-loop-counter-wrap-code-pil>
    pil-stat* |[ 
      String x_temp = ident+e_inputident+uniqueid;
      out.print("<input name=\""+x_temp+"\" "+e_attrs1+"  type=\"text\" value=\"");
      if(inSubmittedForm)
      {
        out.print(ps.parammap[x_temp]);
      }
      else
      {
        stat*
      }
      out.print("\" />"); 
    ]|
    with  e_inputident := <get-inputnumber-pil; pil-wrap-string> tc
        ; stat* := <to-page-string-pil> e
        ; x_temp := <newname> "temp"
        ; e_attrs1 := <to-html-attrs-pil> passign*

  elem-to-pil :
    TemplateCall("url",[e],[passign*],[]) ->
    stat*
    where not(ThisCall(p,args) := e)
        ; stat* := <to-page-string-pil> e
