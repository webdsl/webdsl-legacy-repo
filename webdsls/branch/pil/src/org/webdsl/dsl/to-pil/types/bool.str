module org/webdsl/dsl/to-pil/types/bool

imports 
  libstrategolib 
  libwebdsl-front

/*
rules 

  pil-element-id :
    tc@elem|[ inputBool(e)[passign*]{} ]| -> tc{InputNumber(newid),anno*} 
    with  _{anno*} := tc
          ; newid := <newname> "input"

  handle-actions-input-to-pil :
    tc@elem|[ inputBool(e)[passign*]{} ]| ->
    <for-loop-counter-wrap-code> 
    bstm*|[
        ident += "~inputident"+uniqueid;
        if(ps.getParammap().get(ident+"_isinput")!=null){
          if(ps.getParammap().get(ident)!=null){
              boolean x_temp = true;
              bstm 
          }
          else{
              boolean x_temp = false;
              bstm 
          }
        }
    ]|
    with  inputident := <get-inputnumber> tc
        ; x_temp := <newname> "temp"
        ; bstm := <input-assignment-to-pil(|x_temp)> e

        
  elem-to-pil :
    tc@elem|[ inputBool(e)[passign*]{} ]| ->
    <for-loop-counter-wrap-code>
    bstm* |[ 
    String x_temp = ident+"~inputident"+uniqueid;
    out.print("<input type=\"hidden\" name=\""+x_temp+"_isinput"+"\" />");
    out.print("<input type=\"checkbox\" name=\""+x_temp+"\" class=\"inputBool\" "+e_attrs1+" ");
    if(inSubmittedForm)
    {
      if(ps.getParammap().get(x_temp)!=null)
      {
        out.print(" checked=\"true\" ");
      }
    }
    else
    {
      if(e1)
      {
        out.print(" checked=\"true\" ");
      }
    }
    out.print(" />"); 
    ]|
    with  inputident := <get-inputnumber> tc
        ; e1 := <expression-to-pil> e
        ; x_temp := <newname> "temp"
        ; e_attrs1 := <to-html-attrs> passign*

  elem-to-pil :
    elem|[ outputBool(e)[passign*]{} ]| ->
    bstm* |[ 
    out.print("<input type=\"checkbox\" disabled=\"true\" class=\"inputBool\" "+e_attrs1+" ");
    if(e1)
    {
      out.print(" checked=\"true\" ");
    }
    out.print(" />"); 
    ]|
    with  e1 := <expression-to-pil> e
        ; e_attrs1 := <to-html-attrs> passign*
  
rules

  builtin-pil-type :
    SimpleSort("Bool") -> type|[ Boolean ]|
    
rules // literals
  expression-to-pil :
    True() -> java|[ true ]|

  expression-to-pil :
    False() -> java|[ false ]|
    */
