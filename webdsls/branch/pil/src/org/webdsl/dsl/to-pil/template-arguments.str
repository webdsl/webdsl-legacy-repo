module org/webdsl/dsl/to-pil/template-arguments

imports
  libstratego-lib

imports
  libwebdsl-front


rules // page arguments



  GenerateCodePil = /*?farg |[ x:srt ]|; debug
  ;debug(JavaThisPage <+ !"thispage not found")
  ;debug(ThisTemplateName <+ !"ThisTemplateName not found" )
  ;debug(InActionPil <+ !"InAction not found" )
  ;debug(InFunction <+ !"InFunction not found" )
  ;debug(JavaInEntity <+ !"InEntity not found" ); */
   where(ThisTemplateNamePil;not(InActionPil)); argument-to-pil-template-property; fail

   argument-to-pil-template-property :
    arg@farg|[ x : srt ]| ->
    <generate-pil-template-partial> pil-cbd|[
       t x = null;
    ]|
    where <defined-pil-type> srt
    with t := <pil-type> srt

   argument-to-pil-template-property :
    arg@farg|[ x : srt ]| ->
    <generate-pil-template-partial> pil-cbd|[
       t_Class x = e;
    ]|
    where t_Class := <builtin-pil-type> srt
    with  e := <pil-type-default-value> srt
    
//store vars in scope
  GenerateCodePil = where(ThisTemplateNamePil;not(InActionPil)); store-argument-pil; fail
 
  store-argument-pil:
    arg@farg|[ x : srt ]| -> 
    <generate-pil-template-partial> pil-cbd|[
       @extend 
       void initializePassOn() { variables[e_original] = x; }
    ]|
    where rules (VariablesPil :+= elem|[ var x : srt ]|)
        ; e_original := <pil-wrap-string> <OriginalNonUniqueName> x
        //; vars := [elem|[ var x : srt ]| | <VariablesPil<+![]>]
        //; rules( VariablesPil := vars  )
