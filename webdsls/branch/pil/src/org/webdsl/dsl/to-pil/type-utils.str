module org/webdsl/dsl/to-pil/type-utils

imports 
  libstrategolib  
  
imports 
  libwebdsl-front
  
rules
/*

  java-type =
    defined-java-type <+ builtin-java-type <+ with(fail)

  defined-java-type :
    s@SimpleSort(x_class) -> type|[ x ]|
    where <is-entity-type> s
    with  x := <concat-strings> [<pp-java5-to-string> <DomainPackage>, ".", x_class]
    
  java-type-name :
    srt -> x_Class
    where x_Class := <java-type;pp-java5-to-string> srt   

  //override used by list and set, see types/collection.str
  java-type-default-value =
     type-default-value-override-java 
  <+ type-default-value ; expression-to-pil 
  <+ with(fail)

  persistence-annotations =
    builtin-persistence-annotations <+ ![]
   
rules //webdsl arguments to java types

  argument-pil-java-type:
    arg@farg|[ x : srt ]| -> t
    where t := <java-type> srt

  // give just the name of the type, (eg. for use in a cast)
  argument-pil-type:
    arg@farg|[ x : srt ]| -> x_Class
    where x_Class := <java-type-name> srt      
   
rules //webdsl formal argument to java formal argument 
  
  arguments-to-pil :  
    arg@farg|[ x : srt ]| -> param |[ t x ]|
    with  t := <argument-pil-java-type> arg
    */
