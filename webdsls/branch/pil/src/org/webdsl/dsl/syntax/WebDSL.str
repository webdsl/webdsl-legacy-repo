module WebDSL

signature
  constructors
                                   : Combinator * SimpleSelector * Option(SelectorAttribute) -> Combinator_SimpleSelector_OptSelectorAttribute0
    ForExpNoFilter                 : Exp * Id * Sort * Exp -> ForExp
    ForExp                         : Exp * Id * Sort * Exp * Filter -> ForExp
    Mapping                        : Exp * Exp -> Mapping
    Assignment                     : QId * Exp -> Assignment
    ObjectPropertyAssignment       : Id * Exp -> ObjectPropertyAssignment
    String                         : String -> ConstValue
    Float                          : Float -> ConstValue
    Int                            : Int -> ConstValue
    Equation                       : Exp * Exp -> Rule
    CaseDefault                    : Block -> Case
    CaseAlt                        : ConstValue * Block -> Case
    VarDeclInitInferred            : Id * Exp -> VarDecl
    VarDeclInit                    : Id * Sort * Exp -> VarDecl
    VarDecl                        : Id * Sort -> VarDecl
    WhileStmt                      : Exp * Block -> Statement
    ForCountStmt                   : Id * Exp * Exp * Block -> Statement
    ForAllStmtNoFilter             : Id * Sort * Block -> Statement
    ForAllStmt                     : Id * Sort * Filter * Block -> Statement
    ForStmtNoFilter                : Id * Sort * Exp * Block -> Statement
    ForStmt                        : Id * Sort * Exp * Filter * Block -> Statement
    Case                           : Exp * List(Case) -> Statement
    IfNoElse                       : Exp * Block -> Statement
    If                             : Exp * Block * Block -> Statement
                                   : VarDecl -> Statement
    ScheduleNoFor                  : Exp -> Statement
    Schedule                       : Exp * Exp -> Statement
    GoTo                           : Exp -> Statement
    Cancel                         : Exp -> Statement
    AjaxAction                     : Id * Id * Exp -> Statement
    AjaxActionNoTarget             : Id * Exp -> Statement
    AjaxActionNoParam              : Id * Id -> Statement
    AjaxActionIdParam              : Id * Id * Id -> Statement
    ReturnEmpty                    : Statement
    Return                         : Exp -> Statement
    Stat                           : Exp -> Statement
                                   : Block -> Statement
    Block                          : Statements -> Block
                                   : List(Statement) -> Statements
    Action                         : Id * List(FormalArg) * Block -> Action
    InitAction                     : Block -> InitAction
    HqlQuery                       : QueryRule_HQL -> Exp
    Sub                            : Exp * Exp -> Exp
    Add                            : Exp * Exp -> Exp
    Mod                            : Exp * Exp -> Exp
    Div                            : Exp * Exp -> Exp
    Mul                            : Exp * Exp -> Exp
    OrForExp                       : ForExp -> Exp
    AndForExp                      : ForExp -> Exp
                                   : ForExp -> Exp
    Not                            : Exp -> Exp
    Or                             : Exp * Exp -> Exp
    And                            : Exp * Exp -> Exp
    Null                           : Exp
    False                          : Exp
    True                           : Exp
    SmallerThanOrEqual             : Exp * Exp -> Exp
    SmallerThan                    : Exp * Exp -> Exp
    LargerThanOrEqual              : Exp * Exp -> Exp
    LargerThan                     : Exp * Exp -> Exp
    NotEq                          : Exp * Exp -> Exp
    Eq                             : Exp * Exp -> Exp
    InColl                         : Exp * Exp -> Exp
    Cast                           : Exp * Sort -> Exp
    IsA                            : Exp * Sort -> Exp
    Call                           : Exp * Id * List(Exp) -> Exp
    ThisCall                       : Id * List(Exp) -> Exp
    TypedSetCreation               : Sort * List(Exp) -> Exp
    TypedListCreation              : Sort * List(Exp) -> Exp
    SetCreation                    : List(Exp) -> Exp
    ListCreation                   : List(Exp) -> Exp
    MapCreation                    : List(Mapping) -> Exp
                                   : Assignment -> Exp
    ObjectCreation                 : Sort * List(ObjectPropertyAssignment) -> Exp
    ObjectCreation                 : Sort * List(ObjectPropertyAssignment) -> Exp
    FieldAccess                    : Exp * Id -> Exp
    ExternalScopeVar               : Id -> Exp
    Var                            : Id -> Exp
                                   : ConstValue -> Exp
    InlineTemplateCall             : List(TemplateElement) -> Exp
    InlineAction                   : Block -> Exp
                                   : StyleValue -> PropertyValue
    PropertyValueList              : List(PropertyValue) -> PropertyValue
                                   : Exp -> PropertyValue
    String                         : String -> PropertyValue
                                   : Id -> PropertyValue
    PropertyAssignment             : Id * PropertyValue -> PropertyAssignment
    TemplateCall                   : Id * List(Exp) * List(PropertyAssignment) * List(TemplateElement) -> TemplateCall
    TemplateCallBody               : Id * List(TemplateElement) -> TemplateCall
    TemplateCallPropsNoArgs        : Id * List(PropertyAssignment) * List(TemplateElement) -> TemplateCall
    TemplateCallProps              : Id * List(PropertyAssignment) -> TemplateCall
    TemplateCallPropsNoBody        : Id * List(Exp) * List(PropertyAssignment) -> TemplateCall
    TemplateCallNoAssigns          : Id * List(Exp) * List(TemplateElement) -> TemplateCall
    TemplateCallNoBody             : Id * List(Exp) -> TemplateCall
    TemplateCallNoArgs             : Id -> TemplateCall
    LimitNoLimit                   : Exp -> Limit
    LimitNoOffset                  : Exp -> Limit
    Limit                          : Exp * Exp -> Limit
    OrderDescending                : Exp -> OrderExp
    OrderAscending                 : Exp -> OrderExp
    OrderNonSpecific               : Exp -> OrderExp
    Filter                         : Exp * OrderExp * Limit -> Filter
    FilterNoWhereNoOrderBy         : Limit -> Filter
    FilterNoWhere                  : OrderExp * Limit -> Filter
    FilterNoOrderBy                : Exp * Limit -> Filter
    FilterNoLimit                  : Exp * OrderExp -> Filter
    FilterNoWhereNoLimit           : OrderExp -> Filter
    FilterNoOrderByNoLimit         : Exp -> Filter
    Arg                            : Id * Sort -> FormalArg
    Local                          : Modifier
    Feed                           : Modifier
    Template                       : Modifier
    Email                          : Modifier
    Page                           : Modifier
    GenericSort                    : Id * List(Sort) -> Sort
    SimpleSort                     : Id -> Sort
    Comp                           : PropKind
    Ref                            : PropKind
    Simple                         : PropKind
    DerivedPropertyNoAnno          : Id * PropKind * Sort * Exp -> Property
    DerivedProperty                : Id * PropKind * Sort * List(Annotation) * Exp -> Property
    PropertyNoAnno                 : Id * PropKind * Sort -> Property
    Property                       : Id * PropKind * Sort * List(Annotation) -> Property
    FunctionNoReturn               : Id * List(FormalArg) * Block -> FunctionNoReturn
    ExtendFunction                 : FunctionNoReturn -> Function
                                   : FunctionNoReturn -> Function
    Function                       : Id * List(FormalArg) * Sort * Block -> Function
                                   : Function -> GlobalsDef
                                   : VarDecl -> GlobalsDef
    SessionEntity                  : Id * List(Property) * List(Function) -> Entity
    EntityNoSuper                  : Id * List(Property) * List(Function) -> Entity
    Entity                         : Id * Id * List(Property) * List(Function) -> Entity
    ModuleDefs                     : ModuleName * List(Definition) * List(Section) -> Module
    Module                         : ModuleName * List(Section) -> Module
    Note                           : List(Word) -> Description
    Description                    : List(Word) -> Description
    Application                    : QId * List(Section) -> Application
    ApplicationDefs                : QId * List(Definition) * List(Section) -> Application
                                   : String -> Word
    Qualified                      : QId * Id -> QId
                                   : Id -> QId
                                   : String -> Float
                                   : String -> Int
                                   : String -> SectionName
                                   : String -> ModuleName
                                   : String -> Id
    Define                         : List(Modifier) * Id * ListStarOfUNDEFINED0 * List(TemplateElement) -> TemplateDefinition
    Define                         : List(Modifier) * Id * List(FormalArg) * List(TemplateElement) -> TemplateDefinition
    StringSelectEntity             : Id * List(String) -> TemplateDefinition
    MDCol                          : Option(MDProps) * List(TemplateElement) -> MDCol
    MDProps                        : List(PropertyAssignment) -> MDProps
    ProcPlus                       : ProcessExp * ProcessExp -> ProcessExp
    ProcAnd                        : ProcessExp * ProcessExp -> ProcessExp
    ProcXor                        : ProcessExp * ProcessExp -> ProcessExp
    ProcIf                         : Exp * ProcessExp * ProcessExp -> ProcessExp
    ProcIfNoElse                   : Exp * ProcessExp -> ProcessExp
    ProcRepeatUntil                : ProcessExp * CallProcessExp -> ProcessExp
    ProcWhile                      : Exp * ProcessExp -> ProcessExp
    ProcSeq                        : ProcessExp * ProcessExp -> ProcessExp
                                   : CallProcessExp -> ProcessExp
    ProcCall                       : Id * Exp -> CallProcessExp
    ProcedureProcessed             : Block -> ProcedureElement
    ProcedureProcess               : ProcessExp -> ProcedureElement
    ProcedureView                  : List(TemplateElement) -> ProcedureElement
    ProcedureDisabled              : Block -> ProcedureElement
    ProcedureEnabled               : Block -> ProcedureElement
    ProcedureDone                  : Block -> ProcedureElement
    ProcedureDo                    : Block -> ProcedureElement
    ProcedureWhen                  : Exp -> ProcedureElement
    ProcedureWho                   : Exp -> ProcedureElement
    AutoProcedure                  : Id * FormalArg * List(ProcedureElement) -> Procedure
    Procedure                      : Id * FormalArg * List(ProcedureElement) -> Procedure
    DeriveBodyElement              : Id * List(TemplateElement) -> DeriveBodyElement
    DeriveBody                     : List(DeriveBodyElement) -> DeriveBody
    DeriveMode                     : Id * Id -> DeriveProperty
    DeriveDefault                  : Id -> DeriveProperty
    VarDeclInitInferred            : Id * Exp -> TemplateElement
    VarDeclInit                    : Id * Sort * Exp -> TemplateElement
    VarDecl                        : Id * Sort -> TemplateElement
    IfNoElseTempl                  : Exp * List(TemplateElement) -> TemplateElement
    IfTempl                        : Exp * List(TemplateElement) * List(TemplateElement) -> TemplateElement
    SelectFromList                 : Exp * Exp -> TemplateElement
    Select                         : Id * Sort * String * Exp -> TemplateElement
    ForSep                         : Id * Sort * Exp * Filter * List(TemplateElement) * List(TemplateElement) -> TemplateElement
    ForSepNoFilter                 : Id * Sort * Exp * List(TemplateElement) * List(TemplateElement) -> TemplateElement
    ForAllNoFilter                 : Id * Sort * List(TemplateElement) -> TemplateElement
    ForAll                         : Id * Sort * Filter * List(TemplateElement) -> TemplateElement
    ForNoFilter                    : Id * Sort * Exp * List(TemplateElement) -> TemplateElement
    For                            : Id * Sort * Exp * Filter * List(TemplateElement) -> TemplateElement
    Text                           : String -> TemplateElement
                                   : TemplateCall -> TemplateElement
                                   : TemplateDefinition -> TemplateElement
                                   : VarDecl -> TemplateElement
                                   : Action -> TemplateElement
                                   : InitAction -> TemplateElement
    MDNavigate                     : Option(MDProps) * Exp * TemplateElement -> TemplateElement
    MDRowNoCols                    : Option(MDProps) * List(TemplateElement) -> TemplateElement
    MDRow                          : Option(MDProps) * List(MDCol) -> TemplateElement
    MDBlock                        : Option(MDProps) * List(TemplateElement) -> TemplateElement
    MDHeader                       : Option(MDProps) * TemplateElement -> TemplateElement
    MDSpacer                       : Option(MDProps) -> TemplateElement
    MDListItemMulti                : Option(MDProps) * List(TemplateElement) -> TemplateElement
    MDListItem                     : Option(MDProps) * TemplateElement -> TemplateElement
    Derive                         : Id * DeriveBody -> TemplateElement
    Derive                         : Id * Exp * DeriveBody -> TemplateElement
    Derive                         : Id * Exp * List(DeriveProperty) * DeriveBody -> TemplateElement
    Derive                         : Id * Exp -> TemplateElement
    Derive                         : Id * Exp * List(DeriveProperty) -> TemplateElement
    PagedForNoFilter               : Id * Sort * Exp * Exp * List(TemplateElement) -> TemplateElement
    PagedFor                       : Id * Sort * Exp * Filter * Exp * List(TemplateElement) -> TemplateElement
    PagedForAllNoFilter            : Id * Sort * Exp * List(TemplateElement) -> TemplateElement
    PagedForAll                    : Id * Sort * Filter * Exp * List(TemplateElement) -> TemplateElement
    EnumValue                      : Id * String -> EnumValue
                                   : List(LayoutExpression) -> LayoutExpressions
    LayoutExpression               : MatchDefinition -> LayoutExpression
    LayoutExpression               : Id -> LayoutExpression
    NamedLayoutExpression          : Id * LayoutExpressions -> LayoutExpression
    LayoutStatement                : LayoutExpression -> LayoutStatement
    FloatStatement                 : List(MatchDefinition) -> LayoutStatement
                                   : StyleDefinition -> LayoutDefinition
    LayoutDefinition               : MatchDefinition * List(LayoutStatement) -> LayoutDefinition
    LayoutDefinition               : Id * MatchDefinition * List(LayoutStatement) -> LayoutDefinition
    Hash                           : Hex -> Hash
    Uri                            : String -> Uri
    StyleSort                      : Id -> StyleSort
    StyleSort                      : Id * Unit -> StyleSort
    StyleValueExtension            : ValueName -> StyleValueExtension
    StyleValue                     : String -> StyleValue
    StyleValue                     : Value -> StyleValue
    StyleValue                     : Hash -> StyleValue
    StyleValue                     : Uri -> StyleValue
    StyleValue                     : StyleSort * List(StyleValueExtension) -> StyleValue
    StyleValue                     : StNumber -> StyleValue
    StyleValue                     : StNumber * Unit -> StyleValue
    StyleDiv                       : StyleExpression * StyleExpression -> StyleExpression
    StyleMul                       : StyleExpression * StyleExpression -> StyleExpression
    StyleSub                       : StyleExpression * StyleExpression -> StyleExpression
    StyleAdd                       : StyleExpression * StyleExpression -> StyleExpression
    StyleValueExpression           : Selector * StyleProperty -> StyleExpression
                                   : StyleValue -> StyleExpression
    StyleVar                       : Id -> StyleExpression
    StylePropertyValue             : MatchDefinition * StyleProperty -> StyleExpression
    StyleProperty                  : ValueName -> StyleProperty
    StyleDeclaration               : StyleProperty * StyleExpression -> StyleStatement
    StyleVarDeclInit               : Id * StyleSort * StyleExpression -> StyleVarDecl
    StyleVarDecl                   : Id * StyleSort -> StyleVarDecl
                                   : List(FormalArg) -> MatchDefinitionArgs
    MatchDefinition                : MatchIdent * MatchDefinitionArgs -> MatchDefinition
    DescendantCombinator           : Combinator
    ChildCombinator                : Combinator
    SelectorAttribute              : ValueName -> SelectorAttribute
    UniversalSimpleSelector        : SimpleSelector
    SimpleSelector                 : MatchDefinition -> SimpleSelector
    ClassSimpleSelector            : Identifier -> SimpleSelector
    ElemClassAttrSelector          : Id * Identifier * List(SelectorAttribute) -> SimpleSelector
    ElemSimpleAttrSelector         : Id * List(SelectorAttribute) -> SimpleSelector
    ElemSimpleSelector             : Id -> SimpleSelector
    IdSimpleSelector               : Identifier -> SimpleSelector
    SimpleSelector                 : Id * MatchDefinition -> SimpleSelector
    Selector                       : SimpleSelector * List(Combinator_SimpleSelector_OptSelectorAttribute0) -> Selector
                                   : StyleVarDecl -> StyleDefinition
    StyleDefinition                : Selector * List(StyleStatement) -> StyleDefinition
                                   : String -> StNumber
                                   : String -> MatchIdent
                                   : String -> String
                                   : Module -> Unit
                                   : Application -> Unit
                                   : String -> Unit
                                   : String -> Hex
                                   : String -> Value
                                   : String -> ValueName
                                   : String -> Identifier
    FlagUnixLines                  : PatternFlag
    FlagUnicodeCase                : PatternFlag
    FlagMultiline                  : PatternFlag
    FlagLiteral                    : PatternFlag
    FlagDotAll                     : PatternFlag
    FlagComments                   : PatternFlag
    FlagCaseInsensitive            : PatternFlag
    FlagCanonEq                    : PatternFlag
    SelectAnno                     : Id -> Annotation
    InlineAnno                     : List(Id) -> Annotation
    InverseSlaveAnno               : Id * Id -> Annotation
    InverseAnno                    : Id * Id -> Annotation
    SimpleAnno                     : Id -> Annotation
    ValidationAnnoValid            : Annotation
    ValidationAnnoAssertFalse      : Annotation
    ValidationAnnoAssertTrue       : Annotation
    ValidationAnnoNotNull          : Annotation
    ValidationAnnoMaxSize          : Int -> Annotation
    ValidationAnnoMinSize          : Int -> Annotation
    ValidationAnnoSize             : Int * Int -> Annotation
    ValidationAnnoFuture           : Annotation
    ValidationAnnoPast             : Annotation
    ValidationAnnoDigits           : Int * Int -> Annotation
    ValidationAnnoMaxRange         : Int -> Annotation
    ValidationAnnoMinRange         : Int -> Annotation
    ValidationAnnoRange            : Int * Int -> Annotation
    ValidationAnnoMin              : Int -> Annotation
    ValidationAnnoMax              : Int -> Annotation
    ValidationAnnoPatternWithFlags : String * List(PatternFlag) -> Annotation
    ValidationAnnoPattern          : String -> Annotation
    ValidationAnnoEAN              : Annotation
    ValidationAnnoCreditCardNumber : Annotation
    ValidationAnnoEmail            : Annotation
    ValidationAnnoNotEmpty         : Annotation
    ValidationAnnoMaxLength        : Int -> Annotation
    ValidationAnnoMinLength        : Int -> Annotation
    ValidationAnnoLength           : Int * Int -> Annotation
    PolicyOr                       : PolicyExp * PolicyExp -> PolicyExp
    PolicyAnd                      : PolicyExp * PolicyExp -> PolicyExp
    Name                           : Id -> PolicyExp
    AccessControlPointcut          : Id * List(FormalArg) * List(AccessControlPointcutElement) -> AccessControlPointcut
    AccessControlPointcutElement   : Id * MatchId * List(Id) * Option(WildCardArg) -> AccessControlPointcutElement
                                   : Exp -> AccessControlCheck
    MatchArgs                      : List(Exp) * Option(WildCardArg) -> MatchArgs
    MatchArgs                      : List(FormalArg) * Option(WildCardArg) -> MatchArgs
    AccessControlRule              : Id * MatchId * MatchArgs * AccessControlCheck * List(AccessControlRule) -> AccessControlRule
                                   : AccessControlPointcut -> AccessControlDefinition
    Predicate                      : Id * List(FormalArg) * Exp -> AccessControlDefinition
                                   : AccessControlRule -> AccessControlDefinition
    AccessControlPrincipal         : Id * List(Id) -> AccessControlDefinition
    Rules                          : List(Rule) -> Definition
                                   : Action -> Definition
                                   : TemplateDefinition -> Definition
                                   : InitAction -> Definition
                                   : GlobalsDef -> Definition
    GlobalsDefinition              : List(GlobalsDef) -> Definition
    ExtendSessionEntity            : Id * List(Property) * List(Function) -> Definition
    ExtendEntity                   : Id * List(Property) * List(Function) -> Definition
                                   : Entity -> Definition
    Imports                        : ModuleName -> Definition
                                   : Description -> Definition
                                   : Procedure -> Definition
    ExtendProcedure                : Id * FormalArg * List(ProcedureElement) -> Definition
    Enum                           : Id * List(EnumValue) -> Definition
    ThemeDefinition                : Modifier * Id * ListStarOfStyleDeclaration0 -> Definition
    Predicate                      : Id * List(FormalArg) * Exp -> Definition
    AccessControlPrincipal         : Id * List(Id) -> Definition
    Section                        : SectionName * List(Definition) -> Section
    LayoutSection                  : List(LayoutDefinition) -> Section
    StyleSection                   : Id * List(StyleDefinition) -> Section
    ACPolicy                       : PolicyExp -> Section
    AccessControlDefinition        : Option(Id) * List(AccessControlDefinition) -> Section
                                   : String -> WildCardArg
                                   : String -> MatchId
    Path                           : List(Identifier_HQL) -> Path_HQL
                                   : NumInt_HQL -> Constant_HQL
    String                         : QuotedString_HQL -> Constant_HQL
    Null                           : Constant_HQL
    Empty                          : Constant_HQL
    False                          : Constant_HQL
    True                           : Constant_HQL
    DslExp                         : Exp -> Expression_HQL
                                   : Constant_HQL -> Expression_HQL
    Paren                          : List(Expression_HQL) -> Expression_HQL
                                   : Path_HQL -> Expression_HQL
    Indices                        : Path_HQL -> Expression_HQL
    Elements                       : Path_HQL -> Expression_HQL
    Sum                            : Expression_HQL -> Expression_HQL
    NumParam                       : NumParameter_HQL -> Expression_HQL
    IdParam                        : IdParameter_HQL -> Expression_HQL
    UMinus                         : Expression_HQL -> Expression_HQL
    Divide                         : Expression_HQL * Expression_HQL -> Expression_HQL
    Multiply                       : Expression_HQL * Expression_HQL -> Expression_HQL
    Minus                          : Expression_HQL * Expression_HQL -> Expression_HQL
    Plus                           : Expression_HQL * Expression_HQL -> Expression_HQL
    Concat                         : Expression_HQL * Expression_HQL -> Expression_HQL
    NotMemberOf                    : Expression_HQL * Expression_HQL -> Expression_HQL
    MemberOf                       : Expression_HQL * Expression_HQL -> Expression_HQL
    NotIn                          : Expression_HQL * Expression_HQL -> Expression_HQL
    In                             : Expression_HQL * Expression_HQL -> Expression_HQL
    LT                             : Expression_HQL * Expression_HQL -> Expression_HQL
    NOTLIKE                        : Expression_HQL * Expression_HQL -> Expression_HQL
    LIKE                           : Expression_HQL * Expression_HQL -> Expression_HQL
    SQLNE                          : Expression_HQL * Expression_HQL -> Expression_HQL
    NE                             : Expression_HQL * Expression_HQL -> Expression_HQL
    IS                             : Expression_HQL * Expression_HQL -> Expression_HQL
    EQ                             : Expression_HQL * Expression_HQL -> Expression_HQL
    QueryNot                       : Expression_HQL -> Expression_HQL
    QueryAnd                       : Expression_HQL * Expression_HQL -> Expression_HQL
    QueryOr                        : Expression_HQL * Expression_HQL -> Expression_HQL
    AliasedExpression              : Expression_HQL * Option(AsAlias_HQL) -> AliasedExpression_HQL
                                   : List(AliasedExpression_HQL) -> SelectedPropertiesList_HQL
    WhereClause                    : Expression_HQL -> WhereClause_HQL
    HavingClause                   : Expression_HQL -> HavingClause_HQL
    Descending                     : AscendingOrDescending_HQL
    Ascending                      : AscendingOrDescending_HQL
    OrderElement                   : Expression_HQL * Option(AscendingOrDescending_HQL) -> OrderElement_HQL
    OrderByClause                  : List(OrderElement_HQL) -> OrderByClause_HQL
    GroupBy                        : List(Expression_HQL) * Option(HavingClause_HQL) -> GroupByClause_HQL
    PropertyFetch                  : PropertyFetch_HQL
    Alias                          : Identifier_HQL -> Alias_HQL
    AsAlias                        : Alias_HQL -> AsAlias_HQL
    InCollectionElements           : Alias_HQL * Path_HQL -> InCollectionElementsDeclaration_HQL
    InCollection                   : Path_HQL * Alias_HQL -> InCollectionDeclaration_HQL
    InClassDeclaration             : Alias_HQL * Path_HQL -> InClassDeclaration_HQL
    FromClass                      : Path_HQL * Option(AsAlias_HQL) * Option(PropertyFetch_HQL) -> FromClassOrOuterQueryPath_HQL
                                   : InCollectionElementsDeclaration_HQL -> FromRange_HQL
                                   : InCollectionDeclaration_HQL -> FromRange_HQL
                                   : InClassDeclaration_HQL -> FromRange_HQL
                                   : FromClassOrOuterQueryPath_HQL -> FromRange_HQL
    WithClause                     : Expression_HQL -> WithClause_HQL
    Fetch                          : Fetch_HQL
    FromJoin                       : Option(JoinType_HQL) * Option(Fetch_HQL) * Path_HQL * Option(AsAlias_HQL) * Option(PropertyFetch_HQL) * Option(WithClause_HQL) -> FromJoin_HQL
    InnerJoin                      : JoinType_HQL
    FullJoin                       : JoinType_HQL
    RightOuterJoin                 : JoinType_HQL
    LeftOuterJoin                  : JoinType_HQL
    RightJoin                      : JoinType_HQL
    LeftJoin                       : JoinType_HQL
    FromRangeJoin                  : FromRange_HQL * Option(FromJoin_HQL) -> FromRangeJoin_HQL
    FromClause                     : List(FromRangeJoin_HQL) -> FromClause_HQL
    SelectObject                   : Identifier_HQL -> SelectObject_HQL
    NewExpression                  : Path_HQL * SelectedPropertiesList_HQL -> NewExpression_HQL
                                   : SelectObject_HQL -> Selection_HQL
                                   : NewExpression_HQL -> Selection_HQL
                                   : SelectedPropertiesList_HQL -> Selection_HQL
    Distinct                       : Distinct_HQL
    Select                         : Option(Distinct_HQL) * Selection_HQL -> SelectClause_HQL
    SelectFrom                     : Option(SelectClause_HQL) * FromClause_HQL -> SelectFrom_HQL
    QueryRule                      : SelectFrom_HQL * Option(WhereClause_HQL) * Option(GroupByClause_HQL) * Option(OrderByClause_HQL) -> QueryRule_HQL
                                   : String -> NumInt_HQL
                                   : String -> QuotedString_HQL
                                   : String -> NumParameter_HQL
                                   : String -> IdParameter_HQL
                                   : String -> Identifier_HQL


signature
  constructors
    Some : a -> Option(a)
    None : Option(a)


signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
