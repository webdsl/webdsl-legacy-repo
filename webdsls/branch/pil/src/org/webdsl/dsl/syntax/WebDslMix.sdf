module WebDslMix[E]

imports
  MixWebDSL[WebDSL]
  AccessControlMix
  StylingMix
  DeriveMix

exports

  lexical syntax

    [0-9]* -> MetaVarSuffix
    "_" [A-Za-z0-9\_\-]+ -> MetaVarSuffix

  context-free syntax
    "webdsl"  "|[" Application[[WebDSL]]      "]|" -> E {cons("ToMetaExpr")}
              "|[" Application[[WebDSL]]      "]|" -> E {cons("ToMetaExpr")}
    "webdsl"  "|[" Section[[WebDSL]]          "]|" -> E {cons("ToMetaExpr")}
              "|[" Section[[WebDSL]]          "]|" -> E {cons("ToMetaExpr")}
    "webdsl"  "|[" Section[[WebDSL]]*         "]|" -> E {cons("ToMetaExpr")}
              "|[" Section[[WebDSL]]*         "]|" -> E {cons("ToMetaExpr")}
    "webdsl"  "|[" TemplateElement[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "webdsl*" "|[" TemplateElement[[WebDSL]]* "]|" -> E {cons("ToMetaExpr")}

    "def"   "|[" Definition[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "def*"  "|[" Definition[[WebDSL]]* "]|" -> E {cons("ToMetaExpr")}
    "fun"   "|[" Function[[WebDSL]]  "]|"   -> E {cons("ToMetaExpr")}
    "fun*"  "|[" Function[[WebDSL]]* "]|"   -> E {cons("ToMetaExpr")}
    "sdef"  "|["  SecurityDefinition[[WebDSL]]   "]|" -> E {cons("ToMetaExpr")}
    "sdef*" "|["  SecurityDefinition[[WebDSL]]*  "]|" -> E {cons("ToMetaExpr")}

    "webdsl" "|[" Description[[WebDSL]] "]|" -> E {cons("ToMetaExpr")}
             "|[" Description[[WebDSL]] "]|" -> E {cons("ToMetaExpr")}

  variables

    "app" [0-9]*                -> Application[[WebDSL]] {prefer}
    "sec" [0-9]*                -> Section[[WebDSL]]     {prefer}
    "sec" [0-9]* "*"            -> Section[[WebDSL]]*    {prefer}
    "def" [0-9]*                -> Definition[[WebDSL]]  {prefer}
    "def" [0-9]* "*"            -> Definition[[WebDSL]]* {prefer}
    "procelem" [0-9]*           -> ProcedureElement[[WebDSL]]  {prefer}
    "procelem" [0-9]* "*"       -> ProcedureElement[[WebDSL]]* {prefer}
    "procelem_"[A-Za-z0-9]+     -> ProcedureElement[[WebDSL]]  {prefer}
    "procelem_"[A-Za-z0-9]+ "*" -> ProcedureElement[[WebDSL]]* {prefer}
    "processexp" [0-9]*         -> ProcessExp[[WebDSL]]  {prefer}
    "processexp" [0-9]* "*"     -> ProcessExp[[WebDSL]]* {prefer}
    "desc"[0-9]*                -> Description[[WebDSL]] {prefer}
    "mod" [0-9]*                -> Modifier[[WebDSL]]    {prefer}
    "mod" [0-9]* "*"            -> Modifier[[WebDSL]]*   {prefer}

  context-free syntax

    "webdsl" "|[" Entity[[WebDSL]]            "]|" -> E {cons("ToMetaExpr")}
             "|[" Entity[[WebDSL]]            "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Property[[WebDSL]]          "]|" -> E {cons("ToMetaExpr")}
             "|[" Property[[WebDSL]]          "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Property[[WebDSL]]*         "]|" -> E {cons("ToMetaExpr")}
             "|[" Property[[WebDSL]]*         "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Sort[[WebDSL]]              "]|" -> E {cons("ToMetaExpr")}
             "|[" Sort[[WebDSL]]              "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" {Sort[[WebDSL]] ","}*       "]|" -> E {cons("ToMetaExpr")}
             "|[" {Sort[[WebDSL]] ","}*       "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Annotation[[WebDSL]]        "]|" -> E {cons("ToMetaExpr")}
             "|[" Annotation[[WebDSL]]        "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" {Annotation[[WebDSL]] ","}* "]|" -> E {cons("ToMetaExpr")}
             "|[" {Annotation[[WebDSL]] ","}* "]|" -> E {cons("ToMetaExpr")}

  variables
    "ent" [0-9]*     -> Entity[[WebDSL]]            {prefer}
    "prop"[0-9]*     -> Property[[WebDSL]]          {prefer}
    "prop"[0-9]* "*" -> Property[[WebDSL]]*         {prefer}
    "srt" [0-9]*     -> Sort[[WebDSL]]              {prefer}
    "srt" [0-9]* "*" -> {Sort[[WebDSL]] ","}*       {prefer}
    "ann" [0-9]*     -> Annotation[[WebDSL]]        {prefer}
    "ann" [0-9]* "*" -> {Annotation[[WebDSL]] ","}* {prefer}
    "k"   [0-9]*     -> PropKind[[WebDSL]]          {prefer}
    
    "dprop"[0-9]*     -> DeriveProperty[[WebDSL]]   {prefer}
    "dprop"[0-9]* "*" -> {DeriveProperty[[WebDSL]] ","}*  {prefer}

  context-free syntax
    "tdef"      "|[" TemplateDefinition[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "farg"      "|[" FormalArg[[WebDSL]]           "]|" -> E {cons("ToMetaExpr")}
    "farg*"     "|[" {FormalArg[[WebDSL]] ","}*    "]|" -> E {cons("ToMetaExpr")}
    "procelem"  "|[" ProcedureElement[[WebDSL]]    "]|" -> E {cons("ToMetaExpr")}
    "procelem*" "|[" ProcedureElement[[WebDSL]]*   "]|" -> E {cons("ToMetaExpr")}
    "elem"      "|[" TemplateElement[[WebDSL]]     "]|" -> E {cons("ToMetaExpr")}
    "elem*"     "|[" TemplateElement[[WebDSL]]*    "]|" -> E {cons("ToMetaExpr")}
    "call"      "|[" TemplateCall[[WebDSL]]        "]|" -> E {cons("ToMetaExpr")}
    "call*"     "|[" TemplateCall[[WebDSL]]*       "]|" -> E {cons("ToMetaExpr")}
    "exp"       "|[" Exp[[WebDSL]]                 "]|" -> E {cons("ToMetaExpr")}
    "passign"   "|[" PropertyAssignment[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "passign*"  "|[" PropertyAssignment[[WebDSL]]* "]|" -> E {cons("ToMetaExpr")}

  variables
    "tdef"[0-9]*     -> TemplateDefinition[[WebDSL]] {prefer}
    "farg"[0-9]*     -> FormalArg[[WebDSL]]          {prefer}
    "farg" MetaVarSuffix "*" -> {FormalArg[[WebDSL]] ","}*   {prefer}
    "elem"[0-9]*     -> TemplateElement[[WebDSL]]    {prefer}
    "elem"[0-9]* "*" -> TemplateElement[[WebDSL]]*   {prefer}
    "elem_"[A-Za-z0-9]+     -> TemplateElement[[WebDSL]]    {prefer}
    "elem_"[A-Za-z0-9]+ "*" -> TemplateElement[[WebDSL]]*   {prefer}
    "call"[0-9]*     -> TemplateCall[[WebDSL]]       {prefer}
    "call"[0-9]* "*" -> TemplateCall[[WebDSL]]*      {prefer}
    "passign" MetaVarSuffix     -> PropertyAssignment[[WebDSL]]          {prefer}
    "passign" MetaVarSuffix "*" -> {PropertyAssignment[[WebDSL]] ","}*   {prefer}
 
  context-free syntax
    "webdsl" "|[" Action[[WebDSL]]     "]|" -> E {cons("ToMetaExpr")}
             "|[" Action[[WebDSL]]     "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Statement[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
             "|[" Statement[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "stat"   "|[" Statement[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Statement[[WebDSL]]* "]|" -> E {cons("ToMetaExpr")}
             "|[" Statement[[WebDSL]]* "]|" -> E {cons("ToMetaExpr")}
    "webdsl" "|[" Case[[WebDSL]]       "]|" -> E {cons("ToMetaExpr")}
             "|[" Case[[WebDSL]]       "]|" -> E {cons("ToMetaExpr")}

  variables

    "_act" [0-9]*          -> Action[[WebDSL]]     {prefer}
    "stat" [0-9]*          -> Statement[[WebDSL]]  {prefer}
    "stat" [0-9]* "*"      -> Statement[[WebDSL]]* {prefer}
    "stat_"[A-Za-z0-9]*    -> Statement[[WebDSL]]  {prefer}
    "stat_"[A-Za-z0-9]*"*" -> Statement[[WebDSL]]* {prefer}
    "block"[0-9]*          -> Block[[WebDSL]]      {prefer}

    "alt"[0-9]*            -> Case[[WebDSL]] {prefer}
    "alt"[0-9]* "*"        -> Case[[WebDSL]]* {prefer}

  context-free syntax
    "webdsl:e" "|[" Exp[[WebDSL]]         "]|" -> E {cons("ToMetaExpr")}
    "|[" Exp[[WebDSL]]         "]|" -> E {cons("ToMetaExpr")}
    "|[" Assignment[[WebDSL]]  "]|" -> E {cons("ToMetaExpr")}
    "|[" Assignment[[WebDSL]]* "]|" -> E {cons("ToMetaExpr")}

  variables

    "e"   [0-9\']*           -> Exp[[WebDSL]]         {prefer}
    "e_"  [A-Za-z0-9\']+     -> Exp[[WebDSL]]         {prefer}
    "e"   [0-9\']* "*"       -> {Exp[[WebDSL]] ","}*  {prefer}
    "e_"  [A-Za-z0-9\']+ "*" -> {Exp[[WebDSL]] ","}*  {prefer}
    "fltr"[0-9]*             -> Filter[[WebDSL]]      {prefer}
    "asgn"[0-9]*             -> Assignment[[WebDSL]]  {prefer}
    "asgn"[0-9]* "*"         -> Assignment[[WebDSL]]* {prefer}
    "fun"[0-9]*              -> Function[[WebDSL]]    {prefer}
    "fun"[0-9]* "*"          -> Function[[WebDSL]]*   {prefer}

  variables

    "qid"[0-9]*                -> QId[[WebDSL]]     {prefer}
    [xyz][0-9]*                -> Id[[WebDSL]]      {prefer}
    [xyz]"_"[A-Za-z0-9]+       -> Id[[WebDSL]]      {prefer}
    %%[xyz]"_"[A-Za-z0-9\']+ "*" -> Id[[WebDSL]]*     {prefer}
    [xyz][0-9]*                -> MatchId[[WebDSL]] {prefer}
    [xyz]"_"[A-Za-z0-9]+       -> MatchId[[WebDSL]] {prefer}
    "str"[0-9]*                -> String[[WebDSL]]  {prefer}

    "const"[0-9]*              -> ConstValue[[WebDSL]] {prefer}

  lexical syntax

    [\$][A-Za-z0-9]* -> IdVar
    [\$][A-Za-z0-9]* -> Id[[StrategoHost]]

  lexical restrictions

    IdVar -/- [A-Za-z0-9]

  variables

    IdVar -> Id[[WebDSL]] {prefer}
