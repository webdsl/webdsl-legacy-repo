module org/webdsl/dsl/typechecker/property-events

imports
  libstratego-lib
imports
  libwebdsl-front

strategies //declare

  extend-property-declare(|x_class) = get-extensible-functions-for-property-events(|x_class);map(declare-function(|x_class));fail
  
rules  // also used in transformation/property-events

  get-extensible-functions-for-property-events(|x_class) :  
    prop@Property(x, k, srt@SimpleSort(ss), annos) -> result
    with  //x_nameget := <concat-strings> ["get",<capitalize-string> x]
          x_nameset := <concat-strings> ["set",<capitalize-string> x]
        ; result := [
            fun |[ 
              //function x_nameget() {} //doesn't need to return anything, this gets called by the real accessor 
              function x_nameset(value:srt):Void {} 
            ]|
          ]
        ; rules ( HasPropertyEvent : (x_class,x,"set") )
          
  get-extensible-functions-for-property-events(|x_class) :  
    prop@Property(x, k, srt@GenericSort(_,[srt2@SimpleSort(_)]), annos) -> result
    with  x_nameadd := <concat-strings> ["addTo",<capitalize-string> x]
        ; x_nameremove := <concat-strings> ["removeFrom",<capitalize-string> x]
        ; result :=
          fun* |[ 
            function x_nameadd(value:srt2):Void {} 
            function x_nameremove(value:srt2):Void {} 
          ]|
        ; rules ( HasPropertyEvent : (x_class,x,"addTo") )
        ; rules ( HasPropertyEvent : (x_class,x,"removeFrom") )