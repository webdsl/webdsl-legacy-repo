module org/webdsl/dsl/to-py-gae/types/text

imports 
  libwebdsl-front
  
rules

  python-property-type(|e_name) :
    SimpleSort("Text") -> py-exp|[ db.TextProperty(default='', name=e_name) ]|

  python-type :
    SimpleSort("Text") -> py-exp|[ unicode ]|

  python-type-default-value :
    SimpleSort("Text") -> py-exp|[ '' ]|

rules

  py-page-elem-to-render :
    elem|[ inputText(e)[passign*]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          out.write('<textarea name="' + field_id + '" class="inputText">');
          out.write(cgi.escape(unicode(e_target), True));
          out.write('</textarea>');
    
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e

  py-page-elem-to-databind :
    elem|[ inputText(e)[passign*]{} ]| -> python*|[
          field_id = webdsl.utils.generateUniqueFieldName(e_data, e_fld, self);
          if is_submitted_form: {
              e_target = self.rh.request.get(field_id);
          };
    
    ]|
    with e_target := <expression-to-python> e
       ; e_fld := <concat-strings> ["'", <pp-webdsl> e, "'"]
       ; e_data := <py-get-data-object> e

  py-page-elem-to-render :
    elem|[ outputText(e)[passign*]{} ]| -> python*|[
          out.write(webdsl.parse_text(e_target));
    ]|
    with e_target := <expression-to-python> e

