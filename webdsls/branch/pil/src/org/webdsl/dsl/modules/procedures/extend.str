module org/webdsl/dsl/modules/procedures/extend

imports
  libstrategolib
  libwebdsl-front

rules 

  procedure-extend-procelems :
    def|[ extend procedure x_id (x_o : srt) { procelem* }]| -> RemoveMe()
    with <map(procedure-extend-procelem(|x_id))> procelem*

  procedure-extend-procelem(|proc) =
    ?procelem|[ enabled { stat* } ]|
    ; with(id
      ; x_ent := <concat-strings; capitalize-string> [proc, "ProcedureStatus"]
      ; <emit-webdsl-code> def|[
          extend entity x_ent {
            extend function enabled() {
              stat*
            }
          }
        ]|
      )
      
  /**
   * Simply extending processed() is not possible, as sometimes there is no processed() at this level
   * Overwriting processed is not the behaviour we want - we want the processed stats to be added to ProcedureStatus'
   *   processed(). So, we add stat_processed* (same as used in ProcedureStatus) before the custom stats.
   */
  procedure-extend-procelem(|proc) =
    ?procelem|[ processed { stat* } ]|
    ; with(id
      ; x_ent := <concat-strings; capitalize-string> [proc, "ProcedureStatus"]
      ; stat_processed* := <processed-stats>
      ; <emit-webdsl-code> def|[
          extend entity x_ent {
            function processed() {
              stat_processed*
              stat*
            }
          }
        ]|
      )

  procedure-extend-procelem(|proc) =
    ?procelem|[ done { stat* } ]|
    ; with(id
      ; x_ent := <concat-strings; capitalize-string> [proc, "ProcedureStatus"]
      ; <emit-webdsl-code> def|[
          extend entity x_ent {
            extend function done() {
              stat*
            }
          }
        ]|
      )

  procedure-extend-procelem(|proc) =
    ?procelem|[ disabled { stat* } ]|
    ; with(id
      ; x_ent := <concat-strings; capitalize-string> [proc, "ProcedureStatus"]
      ; <emit-webdsl-code> def|[
          extend entity x_ent {
            extend function disabled() {
              stat*
            }
          }
        ]|
      )

