module utils

imports libstratego-aterm libstratego-gpp
imports static-analysis
imports template-inlining
imports desugar

rules // type-of builder

  type-of-try =
    type-of <+ !"no type"
    
  show-type :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with ast2 := <analyze-ast> ast
    with 
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <type-of-try; pp-aterm-box; box2text-string(|120)> selected

rules // desugared builder
    
  show-desugared :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <desugar-all; pp-aterm-box; box2text-string(|120)> selected

  show-desugared-pp :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"d.nwl")> path;
      result-string := <normalize-all; pp-nwl> selected

rules // normalized builder
    
  show-normalized :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <normalize-all; pp-aterm-box; box2text-string(|120)> selected
  
  show-normalized-pp :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"n.nwl")> path;
      result-string := <normalize-all; pp-nwl> selected

rules // inlining builder
    
  show-inlined :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <inline-all; pp-aterm-box; box2text-string(|120)> selected
  
  show-inlined-pp :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"n.nwl")> path;
      result-string := <inline-all; sugar-all; pp-nwl> selected

rules // ac weaver builder
    
  show-woven :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <weave-ac-rules; pp-aterm-box; box2text-string(|120)> selected
  
  show-woven-pp :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"n.nwl")> path;
      result-string := <weave-ac-rules; sugar-all; pp-nwl> selected

rules // eval builder
    
  show-eval :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"aterm")> path;
      result-string := <eval-all; pp-aterm-box; box2text-string(|120)> selected
  
  show-eval-pp :
    (selected, position, ast, path, project-path) -> (filename, result-string)
    with
      filename      := <guarantee-extension(|"e.nwl")> path;
      result-string := <eval-all; pp-nwl> selected
           
strategies // pretty-printing
  
  pp-nwl =
    ast2abox(|[<import-term(include/nwl.pp.af)>, <import-term(syntax/nwl-pretty.pp.af)>]);
    box2text-string(|120)

strategies // 'standard' strategies

strategies

  eval-all = innermost(desugar + eval)
  
  require(s) = not(s)
  
  rename-all = alltd(rename)
  
  desugar-all = innermost(desugar)
  
  normalize-all = innermost(desugar + normalize)
  
strategies // 
  
  declare-def = fail
  
  declare-all = fail
  
  type-of = fail
  
  pp = fail
  
  rename = fail
  
  desugar = fail
  
  normalize = fail
  
  eval = fail