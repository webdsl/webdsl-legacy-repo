module blog

entity Pst1 { 
  foo : String 
} 

entity User {
  name : String (id)
}

entity Blog {
  url    : String (id)
  name   : String (name)
  posts  : Set<Post>  
  author : User  
} 

entity Post { 
  url     : String (id) 
  title   : String (name)
  text    : WikiText
  blog    : Blog (inverse:posts)
  author  : User 
  blog    : Blog
  version : Int
}

define page index() {
  list{
    for(p : Post in select p from Post as p order by (p.title)) {
      listitem{ output(p) }
    }
  }
}
 
define page user(u : User) { 
  header{ output(u.name) }
}

define page blog(b : Blog) {
  header{output(b.name)}
  list{ 
    for(p : Post in b.posts) {  
      listitem{ output(p) }
    }
  }
}

define output(p : Post) { 
  navigate post(p) { output(p.name) }
}
 
define page post(p : Post) {
  header{output(p.title)}     
  output(p.text)
  par{ "Posted by " output(p.author) }
  navigate editpost(p) { "Edit" }
} 
 
define page createpost(b : Blog) {  
  var p : Post := Post{}
  action create() { 
    p.author := b.author; 
    p.version := 1;
    p.save();     
    return post(p);
  }
  header{output(b.name)}    
  form(p){
    input(p.url) 
    input(p.title)  
    input(p.text) 
    submit create() { "Create" }
  }
}

define page root() {
  list{ 
    for(b : Blog) {
      listitem{ 
        navigate blog(b) { output(b.name) } 
      }
    }
  }
}

define page editpost(p : Post) {
  action save() { 
    p.version := p.version + 1;
    return post(p);
  }
  header{output(p.title)}
  form{ 
    input(p.url) 
    input(p.title)
    input(p.text)
    submit save() { "Save" } 
  }
}

define list()     { <ul> elements </ul> }
define listitem() { <li> elements </li> }
define header()   { <h1> elements </h1> }
define par()      { <p> elements </p>   }




