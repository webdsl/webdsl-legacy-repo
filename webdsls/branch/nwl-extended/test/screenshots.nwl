module blog

entity Pst { foo : String } 

  entity Blog {
    url    : String (id)
    name   : String (name)
    posts  : Set<Post>  
    author : User 
  }
  

  
  entity Blog {
    name    : String
    entries : Set<BlogEntry>
  }
  
  entity <ID> { <Property*> }
  
  //<ID> : <Type>
    
  entity Blog { name : String entries : Set<BlogEntry> }
  
  entity <ID> { <ID> : <ID>      <ID> : Set<<ID>>      }
  
  entity <ID> { <ID> : <Type>    <ID> : Set<<Type>>    }
  
  entity <ID> { <ID> : <Type>    <ID> : <Type>         }
  
  entity <ID> { <Property>       <Property>            }
  
  entity <ID> { <Property*>                            }
  
  <Definition>
  
  
  entity <ID> {
    <Property>
  }
  
  entity Blog { 
    name    : String 
    entries : Set<BlogEntry> 
  }
  
  entity ~"Blog" { 
    ~"name"    : ~"String" 
    ~"entries" : Set<~"BlogEntry"> 
  }

  entity ~"Blog" { 
    ~"name"    : ~SimpleType("String") 
    ~"entries" : Set<~SimpleType("BlogEntry")> 
  }

  entity ~"Blog" { 
    ~"name"    : ~SimpleType("String") 
    ~"entries" : ~SetType(SimpleType("BlogEntry"))
  }
  
  entity ~"Blog" { 
    ~Property("name", SimpleType("String"))
    ~Property("entries", SetType(SimpleType("BlogEntry")))
  }

  ~Entity("Blog",[
    Property("name", SimpleType("String")),
    Property("entries", SetType(SimpleType("BlogEntry")))
  ])
  
   
entity Post { 
  url    : String (id) 
  title  : String (name) 
  text   : WikiText
  blog   : Blog (inverse:posts)  
  author : User 
  blog   : Blog  
}   

define testexp() {
  action testexp() {
  	     
  }
}

   



define page root() {
  list{ 
    for(b : Blog) {
      listitem{ 
        navigate blog(b) { output(b.name) } 
      }
    }
  }
}

define page blog(b : Blog) {
  header{output(b.name)}
  list{ 
    for(p : Post in b.posts) {  
      listitem{ output(p) }
    }
  }
}

define output(p : Pot) {
  navigate post(p) { output(p.name) }   
}

define page User(u : User) { 
  header{ output(u.name) }
}

define page post(p : Post) {
  header{output(p.title)}     
  output(p.text)
  par{ "Posted by " output(p.author) }   
  navigate editpost(p) { "Edit" }
} 
 
define page createpost(b : Blog) {
  var p : Post := Post{}      
  action create() { 
    p.author := b.author; 
    p.save();      
    return post(p);
  }
  header{output(b.name)}    
  form(p){
    input(p.url) 
    input(p.title)  
    input(p.text) 
    submit create() { "Create" }
  }
}

define page editpost(p : Post) {
  action save() { 
    return post(p);
  }
  header{output(p.title)}
  form{ 
    input(p.url) 
    input(p.title)
    input(p.text)
    submit save() { "Save" } 
  }
}

define list()     { <ul> elements </ul> }
define listitem() { <li> elements </li> }
define header()   { <h1> elements </h1> }
define par()      { <p> elements </p> }

