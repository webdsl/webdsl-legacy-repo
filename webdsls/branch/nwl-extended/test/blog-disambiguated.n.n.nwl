module blog
  entity Pst {
    foo : String
  }
  entity User {
    name : String ( id )
  }
  entity Blog {
    url : String ( id )
    name : String ( name )
    posts : Set<Post>
    author : User
  }
  entity Post {
    url : String ( id )
    title : String ( name )
    text : WikiText
    blog : Blog ( inverse : posts )
    author : User
    blog : Blog
  }
  define page user ( u : User ) {
    <h1>
      output(u.name)
    </h1>
  }
  define page blog ( b : Blog ) {
    <h1>
      output(b.name)
    </h1>
    <ul>
      for ( p : Post in b.posts ) {
        <li>
          navigate post(p) { output(p.name) }
        </li>
      }
    </ul>
  }
  define outputPost ( p : Post ) {
    navigate post(p) { output(p.name) }
  }
  define list ( ) {
    <ul>
      elements
    </ul>
  }
  define listitem ( ) {
    <li>
      elements
    </li>
  }
  define header ( ) {
    <h1>
      elements
    </h1>
  }
  define par ( ) {
    <p>
      elements
    </p>
  }
  define outputUser ( u : User ) {
    navigate user(u) { output(u.name) }
  }
  define page post ( p : Post ) {
    <h1>
      output(p.title)
    </h1>
    output(p.text)
    <p>
      "Posted by "
      navigate user(p.author) { output(p.author.name) }
    </p>
    navigate editpost(p) { "Edit" }
  }
  define page createpost ( b : Blog ) {
    var p : Post := Post{}
    action create ( ) {
      p.author := b.author ;
      p.save();
      returnpost(p);
    }
    <h1>
      output(b.name)
    </h1>
    form(p){
      input(p.url)
      input(p.title)
      input(p.text)
      submit create ( ) { "Create" }
    }
  }
  define page root ( ) {
    <ul>
      for ( b : Blog ) {
        <li>
          navigate blog(b) { output(b.name) }
        </li>
      }
    </ul>
  }
  define page editpost ( p : Post ) {
    action save ( ) {
      returnpost(p);
    }
    <h1>
      output(p.title)
    </h1>
    form{input(p.url)input(p.title)input(p.text)submit save ( ) { "Save" }}
  }