[
   BinOp                       -- H hs=0 ["(" H[_1 _2 _3] ")" ],
   StringLit                   -- _1,
   IntLit                      -- _1,
   Var                         -- _1,
   Constructor                 -- H hs=0 [_1 KW["{"] KW["}"]],
   MethodCall                  -- H hs=0 [_1 KW["."] _2 KW["("] _3 KW[")"]],
   MethodCall.3:iter-star-sep  -- H hs=0 [_1 KW[","]],
   PropertyAccess              -- H hs=0 [_1 KW["."] _2],
   IndexAccess                 -- H hs=0 [_1 KW["["] _2 KW["]"]],
   UnaryMinus                  -- H hs=0 [KW["-"] _1],
   Not                         -- KW["!"] _1,
   Times                       -- "(" _1 KW["*"]  _2 ")",
   Div                         -- "(" _1 KW["/"]  _2 ")",
   Mod                         -- "(" _1 KW["%"]  _2 ")",
   Plus                        -- "(" _1 KW["+"]  _2 ")",
   Minus                       -- "(" _1 KW["-"]  _2 ")",
   Eq                          -- "(" _1 KW["=="] _2 ")",
   NEq                         -- "(" _1 KW["!="] _2 ")",
   Gt                          -- "(" _1 KW[">"]  _2 ")",
   Lt                          -- "(" _1 KW["<"]  _2 ")",
   Leq                         -- "(" _1 KW["<="] _2 ")",
   Geq                         -- "(" _1 KW[">="] _2 ")",
   And                         -- "(" _1 KW["&&"] _2 ")",
   Or                          -- "(" _1 KW["||"] _2 ")",
   Assign                      -- _1 KW[":="] _2 KW[";"],
   Assign                      -- H[_1 KW[":="] _2 KW[";"]],
   ExpStat                     -- H hs=0[_1 KW[";"]],
   ReturnPage                  -- H[KW["return"] _1 KW[";"]],
   Block                       -- V  [V is=2 [KW["{"] _1] KW["}"]],
   Block.1:iter-star           -- _1,
   VarDecl                     -- H [KW["var"] _1 KW[":"] _2],
   VarDeclInit                 -- H [KW["var"] _1 KW[":"] _2 KW[":="] _3],
   Stat                        -- H hs=0 [_1 KW[";"]],
   For                         -- V[H[KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"]] _4],
   While                       -- V[H[KW["while"] KW["("] _1 KW[")"]] _2],
   If                          -- V [ V is=2[H[KW["if"] KW["("] _1 KW[")"]] _2] V is=2[ KW["else"] _3]],
   TemplateDef                 -- V [V is=2[ H[KW["define"] _1 _2 KW["("] _3 KW[")"] KW["{"] ] _4] KW["}"]],
   TemplateDef.1:iter-star     -- _1,
   TemplateDef.3:iter-star-sep -- H hs=0 [_1 KW[","]],
   TemplateDef.4:iter-star     -- _1,
   Page                        -- KW["page"],
   Param                       -- H[_1 KW[":"] _2],
   String                      -- _1,
   Call                        -- _1,
   CallArgs                    -- H hs=0 [_1 KW["("] _2 KW[")"]],
   CallArgs.2:iter-star-sep    -- H hs=0 [_1 KW[","]],
   CallElems                   -- H hs=0 [_1 KW["{"] _2 KW["}"]],
   CallElems.2:iter-star       -- _1,
   Call                        -- V[ V is=2[H hs=0 [_1 KW["("] _2 KW[")"] KW["{"]] _3] KW["}"]],
   Call.2:iter-star-sep        -- H hs=0 [_1 KW[","]],
   Call.3:iter-star            -- _1,
   ForElem                     -- V[ V is=2[ H [KW["for"] KW["("] _1 KW[":"] _2 KW["in"] _3 KW[")"] KW["{"]] _4] KW["}"]],
   ForElem.4:iter-star         -- _1,
   ForAllElem                  -- V[ V is=2[ H [KW["for"] KW["("] _1 KW[":"] _2 KW[")"] KW["{"]] _3] KW["}"]],
   ForAllElem.3:iter-star      -- _1,
   Navigate                    -- H[ KW["navigate"] _1 KW["{"] _2 KW["}"] ],
   Navigate.2:iter-star        -- _1,
   PageRef                     -- H hs=0[_1 KW["("] _2 KW[")"]],
   PageRef.2:iter-star-sep     -- H hs=0[_1 KW[","]],
   Action                      -- V[ V is=2[ H[ KW["action"] _1 KW["("] _2 KW[")"] KW["{"]] _3] KW["}"]],
   Action.2:iter-star-sep      -- H hs=0[_1 KW[","]],
   Action.3:iter-star          -- _1,
   Submit                      -- H[KW["submit"] _1 KW["("] _2 KW[")"] KW["{"] _3 KW["}"]],
   Submit.2:iter-star-sep      -- _1 KW[","],
   Submit.3:iter-star          -- _1,
   XmlElem                     -- V[ V is=2[ H hs=0[KW["<"] _1 KW[">"]] _2] H hs=0[KW["</"] _3 KW[">"]]],
   XmlElem.2:iter-star         -- _1,
   Elements                    -- KW["elements"],
   
   Init                        -- V[ V is=2[H[KW["init"] KW["{"]] _1] KW["}"]],
   Init.1:iter-star            -- _1,
   Rule                        -- V[ V is=2[H[KW["rule"] _1 _2 H hs=0[KW["("] H[_3] KW[")"]] KW["{"]] _4] KW["}"]],
   Rule.1:iter-star            -- _1,
   Rule.3:iter-star-sep        -- H hs=0[_1 KW[","]],
   Page                        -- KW["page"],
   Action                      -- KW["action"],
   Template                    -- KW["template"],
   
   Entity                      -- V[ V is=2[ H[KW["entity"] _1 KW["{"]] _2] KW["}"]],
   Entity.2:iter-star          -- _1,
   Property                    -- H[ _1 KW[":"] _2 ],
   Property                    -- H[ _1 KW[":"] _2 KW["("] _3 KW[")"]],
   Property.3:iter-star-sep    -- H hs=0[_1 KW[","]],
   Id                          -- KW["id"],
   Name                        -- KW["name"],
   Inverse                     -- H[KW["inverse"] KW[":"] _1],
   SimpleType                  -- _1,
   SetType                     -- H hs=0[KW["Set"] KW["<"] _1 KW[">"]],
   Module                      -- V is=2[ H[KW["module"] _1] _2],
   Module.2:iter-star          -- _1
]