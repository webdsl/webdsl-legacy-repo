/**

  Builtin types for WebDSL
  
*/

module org/webdsl/dsl/builtins/builtins-xml

imports 
  libstrategolib 
  
imports 
  libwebdsl-front

    
strategies

rules // Dates
  elem-to-xhtml :
    TemplateCall("inputDate",[e],[]) ->
//          <h:inputText id="<%= label%>" styleClass="inputDate" value="<%= estring %>" required="<%= req %>">
//             <s:convertDateTime pattern="dd/MM/yyyy"/>
//          </h:inputText>
//          <s:selectDate for="<%= label %>" dateFormat="dd/MM/yyyy" startYear="1910" endYear="2007">(Pick)</s:selectDate>
    %>
      <s:decorate>
          <rich:calendar value="<%= estring %>"
                        popup="true"
                        datePattern="dd/MM/yyyy"
                        id="<%= label %>"
                        required="<%= req %>"
                        enableManualInput="true"
                     />
      </s:decorate>
    <%
    where estring := <arg-to-value-string> e
        ; label := <newname> "inputDateId"
        ; req := <input-of-required-property(|e)>
  
  elem-to-xhtml :
    TemplateCall("outputDate",[e],[]) ->
    %>
       <h:outputText id="<%= label %>" styleClass="outputDate" value="<%= estring %>">
         <s:convertDateTime pattern="dd/MM/yyyy"/>
       </h:outputText>
    <%
    where estring := <arg-to-value-string> e
        ; label := <newname> "outputDateId"


  elem-to-xhtml :
    TemplateCall("inputTime",[e],[]) ->
    %>
      <s:decorate>
        <div>
          <h:inputText id="<%= label%>" styleClass="inputDate" value="<%= estring %>" required="<%= req %>">
             <s:convertDateTime pattern="H:mm"/>
          </h:inputText>
        </div>
      </s:decorate>
    <%
    where estring := <arg-to-value-string> e
        ; label := <newname> "inputDateId"
        ; req := <input-of-required-property(|e)>
  
  elem-to-xhtml :
    TemplateCall("outputTime",[e],[]) ->
    %>
       <h:outputText id="<%= label %>" styleClass="outputDate" value="<%= estring %>">
         <s:convertDateTime pattern="H:mm"/>
       </h:outputText>
    <%
    where estring := <arg-to-value-string> e
        ; label := <newname> "outputDateId"


  elem-to-xhtml :
    TemplateCall("inputDateTime",[e],[]) ->
    %>
      <s:decorate>
        <div>
          <h:inputText id="<%= label%>" styleClass="inputDate" value="<%= estring %>" required="<%= req %>">
             <s:convertDateTime pattern="dd/MM/yyyy H:mm"/>
          </h:inputText>
        </div>
      </s:decorate>
    <%
    where estring := <arg-to-value-string> e
        ; label := <newname> "inputDateId"
        ; req := <input-of-required-property(|e)>
  
  elem-to-xhtml :
    TemplateCall("outputDateTime",[e],[]) ->
    %>
       <h:outputText id="<%= label %>" styleClass="outputDate" value="<%= estring %>">
         <s:convertDateTime pattern="dd/MM/yyyy H:mm"/>
       </h:outputText>
    <%
    where estring := <arg-to-value-string> e
        ; label := <newname> "outputDateId"

rules // Files
  
  elem-to-xhtml :
    TemplateCall("inputFile",[e],[]) ->
    %>
      <div>
	    <s:fileUpload id="<%= label%>"
			data="#{<%= estring %>.data}"
			contentType="#{<%= estring %>.contenttype}"
			fileName="#{<%= estring %>.name}" required="<%= req %>"/>
      </div>
    <%
    where estring := <arg-to-el> e
        ; label := <newname> "inputFileId"
        ; req := <input-of-required-property(|e)>
  
  elem-to-xhtml :
    TemplateCall("outputFile",[e],[]) ->
    %>
      <s:link styleClass="outputFile" value="#{<%= <arg-to-el> e %>.name}"
         action="#{<%= <ThisPage> %>.download()}" />
    <%
        
  elem-to-xhtml =
    ?TemplateCall("inputBinary",[e],[])
    ; ![]

  elem-to-xhtml =
    ?TemplateCall("outputBinary",[e],[])
    ; ![]
