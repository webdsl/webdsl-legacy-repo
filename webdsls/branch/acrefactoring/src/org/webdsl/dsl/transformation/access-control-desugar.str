/**

 Security rules for WebDSL

*/

module org/webdsl/dsl/transformation/access-control-desugar

imports
  libstrategolib

imports
  libwebdsl-front
  org/webdsl/dsl/transformation/-

rules
  //declaration of principal
  // there can be only one of these (not yet checked)
  Desugar:
    AccessControlPrincipal($ident,props) -> 
        def |[
                session securityContext {
                    loggedIn  :: Bool
                    principal   -> $ident
                }
                //predicate loggedIn()
                //{
                //  securityContext.principal != null
                //}
            ]|
    where rules (
            AccessControlEnabled := True()
          )



  //pointcuts
  Desugar: 
    AccessControlDefinition(ident,decs) -> AccessControlDefinition(ident,newdecs)
    where <fetch(?AccessControlRule("pointcut",_,_,_,_))> decs
        ; newdecs := <map(try(desugar-pointcut-rule));concat-with-sublists> decs
        ; not(fetch(?AccessControlRule("pointcut",_,_,_,_)))//fail if pointcut not found yet
    
  desugar-pointcut-rule :
    AccessControlRule("pointcut",matchident,args,check,childrules) -> newrules
    where MatchArgs(fargs,wc) := args
        ; rulematchtuples := <AccessControlPointcuts> (matchident,fargs)
        ; newrules := <map(rule-tuple-to-ac-rule(|check,childrules))> rulematchtuples

  rule-tuple-to-ac-rule(|check,childrules):
    (ident,matchident,matchargs) -> AccessControlRule(ident,matchident,matchargs,check,childrules)

  concat-with-sublists=
    foldr(![], (is-list, id) < conc + MkCons)   
  
  
  
  // rules for actions are inherited from rule for page if no action rules are provided
  desugar-access-control =
    try(sometd(DesugarAccessControlRule))

  DesugarAccessControlRule :
    AccessControlRule("page", x, fargs, check, []) ->
    AccessControlRule("page", x, fargs, check, [AccessControlRule("action", "*", MatchArgs([], Some("*")), check, [])])

  DesugarAccessControlRule :
    AccessControlRule("template", x, fargs, check, []) ->
    AccessControlRule("template", x, fargs, check, [AccessControlRule("action", "*", MatchArgs([], Some("*")), check, [])])

  // Prevent template rules inside page rules from getting action rules, because this is not allowed.
  // (the template rules inside page rules are for template calls which never contain actions)
  DesugarAccessControlRule =
    ?AccessControlRule("page", x, fargs, check, [a|xs])

  
  
  //anonymous policy block syntactic normalization
  Desugar:
    AccessControlDefinition(None(),defs) -> AccessControlDefinition(Some("anonymous"),defs)
    
    
 
  //predicate definitions
  Desugar:
    pr@Predicate($ident,farg*,exp) ->
      def |[
        globals{
          function $ident ( farg* ) : Bool
          {
            return e0;
          }
        }        
      ]|
    where $predname := <newname> "predicate"
        ; e0 := <add-not-null-checks> exp