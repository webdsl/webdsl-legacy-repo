
=== builtins/builtins-desugar ===
module-name-checked
module-name-checked

=== builtins/builtins-java ===
module-name-checked
module-name-checked
63,76c63,67
<     ThisCall("Date", [d, f]) -> Invoke(
<                                   Method(
<                                     MethodName(
<                                       AmbName(
<                                         AmbName(
<                                           AmbName(
<                                             AmbName(Id("org"))
<                                           , Id("webdsl")
<                                           )
<                                         , Id("tools")
<                                         )
<                                       , Id("Utils")
<                                       )
<                                     , Id("parseDate")
---
>     ThisCall("Date", [d, f]) -> Call(
>                                   FieldAccess(
>                                     FieldAccess(
>                                       FieldAccess(Var("org"), "webdsl")
>                                     , "tools"
77a69
>                                   , "Utils"
78a71
>                                 , "parseDate"
85,98c78,82
<     ThisCall("Date", [d]) -> Invoke(
<                                Method(
<                                  MethodName(
<                                    AmbName(
<                                      AmbName(
<                                        AmbName(
<                                          AmbName(Id("org"))
<                                        , Id("webdsl")
<                                        )
<                                      , Id("tools")
<                                      )
<                                    , Id("Utils")
<                                    )
<                                  , Id("parseDate")
---
>     ThisCall("Date", [d]) -> Call(
>                                FieldAccess(
>                                  FieldAccess(
>                                    FieldAccess(Var("org"), "webdsl")
>                                  , "tools"
99a84
>                                , "Utils"
101,104c86,87
<                              , [e1|[ Lit(
<                                        String([Chars("dd/MM/yyyy")])
<                                      )
<                                    ]]
---
>                              , "parseDate"
>                              , [e1|[String("dd/MM/yyyy")]]
109,122c92,96
<     ThisCall("Time", [d, f]) -> Invoke(
<                                   Method(
<                                     MethodName(
<                                       AmbName(
<                                         AmbName(
<                                           AmbName(
<                                             AmbName(Id("org"))
<                                           , Id("webdsl")
<                                           )
<                                         , Id("tools")
<                                         )
<                                       , Id("Utils")
<                                       )
<                                     , Id("parseDate")
---
>     ThisCall("Time", [d, f]) -> Call(
>                                   FieldAccess(
>                                     FieldAccess(
>                                       FieldAccess(Var("org"), "webdsl")
>                                     , "tools"
123a98
>                                   , "Utils"
124a100
>                                 , "parseDate"
131,144c107,111
<     ThisCall("Time", [d]) -> Invoke(
<                                Method(
<                                  MethodName(
<                                    AmbName(
<                                      AmbName(
<                                        AmbName(
<                                          AmbName(Id("org"))
<                                        , Id("webdsl")
<                                        )
<                                      , Id("tools")
<                                      )
<                                    , Id("Utils")
<                                    )
<                                  , Id("parseDate")
---
>     ThisCall("Time", [d]) -> Call(
>                                FieldAccess(
>                                  FieldAccess(
>                                    FieldAccess(Var("org"), "webdsl")
>                                  , "tools"
145a113
>                                , "Utils"
147,150c115,116
<                              , [e1|[ Lit(
<                                        String([Chars("H:mm")])
<                                      )
<                                    ]]
---
>                              , "parseDate"
>                              , [e1|[String("H:mm")]]
155,168c121,125
<     ThisCall("DateTime", [d, f]) -> Invoke(
<                                       Method(
<                                         MethodName(
<                                           AmbName(
<                                             AmbName(
<                                               AmbName(
<                                                 AmbName(Id("org"))
<                                               , Id("webdsl")
<                                               )
<                                             , Id("tools")
<                                             )
<                                           , Id("Utils")
<                                           )
<                                         , Id("parseDate")
---
>     ThisCall("DateTime", [d, f]) -> Call(
>                                       FieldAccess(
>                                         FieldAccess(
>                                           FieldAccess(Var("org"), "webdsl")
>                                         , "tools"
169a127
>                                       , "Utils"
170a129
>                                     , "parseDate"
177,190c136,140
<     ThisCall("DateTime", [d]) -> Invoke(
<                                    Method(
<                                      MethodName(
<                                        AmbName(
<                                          AmbName(
<                                            AmbName(
<                                              AmbName(Id("org"))
<                                            , Id("webdsl")
<                                            )
<                                          , Id("tools")
<                                          )
<                                        , Id("Utils")
<                                        )
<                                      , Id("parseDate")
---
>     ThisCall("DateTime", [d]) -> Call(
>                                    FieldAccess(
>                                      FieldAccess(
>                                        FieldAccess(Var("org"), "webdsl")
>                                      , "tools"
191a142
>                                    , "Utils"
193,196c144,145
<                                  , [e1|[ Lit(
<                                            String([Chars("dd/MM/yyyy H:mm")])
<                                          )
<                                        ]]
---
>                                  , "parseDate"
>                                  , [e1|[String("dd/MM/yyyy H:mm")]]

=== builtins/builtins-types ===
module-name-checked
module-name-checked
169c169
<     SimpleSort("Binary") -> Lit(Null())
---
>     SimpleSort("Binary") -> Null()

=== builtins/builtins-xml ===
pp-stratego: rewriting failed

=== generation/dsl-to-seam ===
cp: cannot stat `generation/dsl-to-seam.meta': No such file or directory

=== modules/styling ===
cp: cannot stat `modules/styling.meta': No such file or directory

=== partials/merge ===
cp: cannot stat `partials/merge.meta': No such file or directory

=== syntax/CSS ===
cp: cannot stat `syntax/CSS.meta': No such file or directory

=== syntax/HQL ===
cp: cannot stat `syntax/HQL.meta': No such file or directory

=== syntax/parse-webdsl ===
cp: cannot stat `syntax/parse-webdsl.meta': No such file or directory

=== syntax/pp-css ===
cp: cannot stat `syntax/pp-css.meta': No such file or directory

=== syntax/pp-hql ===
cp: cannot stat `syntax/pp-hql.meta': No such file or directory

=== syntax/pp-webdsl ===
cp: cannot stat `syntax/pp-webdsl.meta': No such file or directory

=== syntax/WebDSL ===
cp: cannot stat `syntax/WebDSL.meta': No such file or directory

=== to-seam/core-to-seam ===
cp: cannot stat `to-seam/core-to-seam.meta': No such file or directory

=== to-seam/java-code ===
module-name-checked
module-name-checked
144c144
<     Stat(e1) -> ExprStm(e2)
---
>     Stat(e1) -> Stat(e2)
151,153c151
<     Assign(Assignment(x, e1)) -> ExprStm(
<                                    Assign(ExprName(Id(x)), e2)
<                                  )
---
>     Assign(Assignment(x, e1)) -> Stat(Eq(Var(x), e2))
333,342c331,334
<                         Some(
<                           Invoke(
<                             Method(
<                               MethodName(
<                                 AmbName(Id("o1"))
<                               , Id("compareTo")
<                               )
<                             )
<                           , [ExprName(Id("o2"))]
<                           )
---
>                         Call(
>                           Var("o1")
>                         , "compareTo"
>                         , [Var("o2")]
347,356c339,342
<                         Some(
<                           Invoke(
<                             Method(
<                               MethodName(
<                                 AmbName(Id("o2"))
<                               , Id("compareTo")
<                               )
<                             )
<                           , [ExprName(Id("o1"))]
<                           )
---
>                         Call(
>                           Var("o2")
>                         , "compareTo"
>                         , [Var("o1")]
400c386
<     Return(e1) -> Return(Some(e2))
---
>     Return(e1) -> Return(e2)
404c390
<     Return(e1) -> Return(Some(e2))
---
>     Return(e1) -> Return(e2)
521c507,511
<     x -> ExprName(Id(x))
---
>     x -> amb>
>            1> Var(x)
>            2> SimpleSort(x)
>            3> SimpleAnno(x)
>          <amb
567c557
<     True() -> Lit(Bool(True()))
---
>     True() -> True()
570c560
<     False() -> Lit(Bool(False()))
---
>     False() -> False()
573c563
<     Null() -> Lit(Null())
---
>     Null() -> Null()
576c566,569
<     Cast(e1, s) -> CastRef(t, e2)
---
>     Cast(e1, s) -> CastRef(t, amb>
>                                 1> e2
>                                 2> e2
>                               <amb)
703,710c696
<     HqlQuery(e1) -> Invoke(
<                       Method(
<                         e2
<                       , None()
<                       , Id("getResultList")
<                       )
<                     , []
<                     )
---
>     HqlQuery(e1) -> Call(e2, "getResultList", [])
816,823c802
<     FieldAccess(e1, "length") -> Invoke(
<                                    Method(
<                                      e2
<                                    , None()
<                                    , Id("size")
<                                    )
<                                  , []
<                                  )
---
>     FieldAccess(e1, "length") -> Call(e2, "size", [])
921,927c900,902
<     Call(e1, "persist", []) -> Invoke(
<                                  Method(
<                                    MethodName(
<                                      AmbName(Id("entityManager"))
<                                    , Id("persist")
<                                    )
<                                  )
---
>     Call(e1, "persist", []) -> Call(
>                                  Var("entityManager")
>                                , "persist"
933,939c908,910
<     Call(e1, "save", []) -> Invoke(
<                               Method(
<                                 MethodName(
<                                   AmbName(Id("entityManager"))
<                                 , Id("persist")
<                                 )
<                               )
---
>     Call(e1, "save", []) -> Call(
>                               Var("entityManager")
>                             , "persist"
945,951c916,918
<     Call(e1, "remove", []) -> Invoke(
<                                 Method(
<                                   MethodName(
<                                     AmbName(Id("entityManager"))
<                                   , Id("remove")
<                                   )
<                                 )
---
>     Call(e1, "remove", []) -> Call(
>                                 Var("entityManager")
>                               , "remove"
957,963c924,926
<     Call(e1, "delete", []) -> Invoke(
<                                 Method(
<                                   MethodName(
<                                     AmbName(Id("entityManager"))
<                                   , Id("remove")
<                                   )
<                                 )
---
>     Call(e1, "delete", []) -> Call(
>                                 Var("entityManager")
>                               , "remove"
969,983c932,937
<     Call(e1, "applyPatch", [e2]) -> Invoke(
<                                       Method(
<                                         MethodName(
<                                           AmbName(
<                                             AmbName(
<                                               AmbName(
<                                                 AmbName(
<                                                   AmbName(Id("name"))
<                                                 , Id("fraser")
<                                                 )
<                                               , Id("neil")
<                                               )
<                                             , Id("plaintext")
<                                             )
<                                           , Id("patch_factory")
---
>     Call(e1, "applyPatch", [e2]) -> Call(
>                                       FieldAccess(
>                                         FieldAccess(
>                                           FieldAccess(
>                                             FieldAccess(Var("name"), "fraser")
>                                           , "neil"
985c939
<                                         , Id("patchApply")
---
>                                         , "plaintext"
986a941
>                                       , "patch_factory"
987a943
>                                     , "patchApply"
994,1008c950,955
<     Call(e1, "makePatch", [e2]) -> Invoke(
<                                      Method(
<                                        MethodName(
<                                          AmbName(
<                                            AmbName(
<                                              AmbName(
<                                                AmbName(
<                                                  AmbName(Id("name"))
<                                                , Id("fraser")
<                                                )
<                                              , Id("neil")
<                                              )
<                                            , Id("plaintext")
<                                            )
<                                          , Id("patch_factory")
---
>     Call(e1, "makePatch", [e2]) -> Call(
>                                      FieldAccess(
>                                        FieldAccess(
>                                          FieldAccess(
>                                            FieldAccess(Var("name"), "fraser")
>                                          , "neil"
1010c957
<                                        , Id("patchMake")
---
>                                        , "plaintext"
1011a959
>                                      , "patch_factory"
1012a961
>                                    , "patchMake"
1019,1026c968
<     Call(e1, "count", []) -> Invoke(
<                                Method(
<                                  e2
<                                , None()
<                                , Id("size")
<                                )
<                              , []
<                              )
---
>     Call(e1, "count", []) -> Call(e2, "size", [])
1180,1183c1122
<     Call(e1, x, e2*) -> Invoke(
<                           Method(e3, None(), Id(x))
<                         , e4*
<                         )
---
>     Call(e1, x, e2*) -> Call(e3, x, e4*)
1188,1191c1127
<     ThisCall(x, e1*) -> Invoke(
<                           Method(MethodName(Id(x)))
<                         , e2*
<                         )
---
>     ThisCall(x, e1*) -> ThisCall(x, e2*)

=== to-seam/java-Entity ===
module-name-checked
module-name-checked

=== to-seam/java-globals ===
module-name-checked
module-name-checked

=== to-seam/java-page ===
module-name-checked
module-name-checked
609c609
<     Property(x, k, s, annos) -> If(
---
>     Property(x, k, s, annos) -> IfNoElse(
611,617c611,613
<                                     Invoke(
<                                       Method(
<                                         MethodName(
<                                           AmbName(Id(x_ident))
<                                         , Id(x_get)
<                                         )
<                                       )
---
>                                     Call(
>                                       Var("x_ident")
>                                     , "x_get"
620c616
<                                   , Lit(Null())
---
>                                   , Null()
623,661c619,635
<                                     [ ExprStm(
<                                         Invoke(
<                                           Method(
<                                             MethodName(
<                                               AmbName(Id(x_ident))
<                                             , Id(x_set)
<                                             )
<                                           )
<                                         , [ Invoke(
<                                               Method(
<                                                 MethodName(
<                                                   AmbName(Id("entityManager"))
<                                                 , Id("find")
<                                                 )
<                                               )
<                                             , [Lit(
<                                                  Class(
<                                                    ClassOrInterfaceType(
<                                                      TypeName(Id(x_class))
<                                                    , None()
<                                                    )
<                                                  )
<                                                )|[ Invoke(
<                                                      Method(
<                                                        Invoke(
<                                                          Method(
<                                                            MethodName(
<                                                              AmbName(Id(x_ident))
<                                                            , Id(x_get)
<                                                            )
<                                                          )
<                                                        , []
<                                                        )
<                                                      , None()
<                                                      , Id(x_getid)
<                                                      )
<                                                    , []
<                                                    )
<                                                  ]]
---
>                                     [ Stat(
>                                         Call(
>                                           Var("x_ident")
>                                         , "x_set"
>                                         , [ Call(
>                                               Var("entityManager")
>                                             , "find"
>                                             , [FieldAccess(Var("x_class"), "class")|[ Call(
>                                                                                         Call(
>                                                                                           Var("x_ident")
>                                                                                         , "x_get"
>                                                                                         , []
>                                                                                         )
>                                                                                       , "x_getid"
>                                                                                       , []
>                                                                                       )
>                                                                                     ]]
988,991c962
<           ; e := <foldr(
<                     !Lit(String([]))
<                   , add-string-expressions
<                   )> params
---
>           ; e := <foldr(!String(""), add-string-expressions)> params
994c965,968
<     (e1, e2) -> Plus(e1, e2)
---
>     (e1, e2) -> amb>
>                   1> Add(e1, e2)
>                   2> Plus(e1, e2)
>                 <amb
1038c1012,1016
<     Var(x){Type(t)} -> ExprName(Id(x))
---
>     Var(x){Type(t)} -> amb>
>                          1> Var(x)
>                          2> SimpleSort(x)
>                          3> SimpleAnno(x)
>                        <amb
1045c1023,1027
<     ) -> ExprName(Id(y))
---
>     ) -> amb>
>            1> Var(y)
>            2> SimpleSort(y)
>            3> SimpleAnno(y)
>          <amb
1056,1059c1038
<     Call(e1, x, e2*) -> Invoke(
<                           Method(e3, None(), Id(x))
<                         , e4*
<                         )
---
>     Call(e1, x, e2*) -> Call(e3, x, e4*)
1064,1067c1043
<     ThisCall(x, e1*) -> Invoke(
<                           Method(MethodName(Id(x)))
<                         , e2*
<                         )
---
>     ThisCall(x, e1*) -> ThisCall(x, e2*)

=== to-seam/java-utils ===
module-name-checked
module-name-checked

=== to-seam/java-validation ===
module-name-checked
module-name-checked

=== to-seam/xhtml-email ===
pp-stratego: rewriting failed

=== to-seam/xhtml-page ===
pp-stratego: rewriting failed

=== transformation/access-control-declarations ===
cp: cannot stat `transformation/access-control-declarations.meta': No such file or directory

=== transformation/access-control-desugar ===
module-name-checked
module-name-checked

=== transformation/access-control ===
module-name-checked
module-name-checked
493c493,496
<     [e0] -> e0
---
>     [e0] -> amb>
>               1> e0
>               2> e0
>             <amb
502c505,508
<     [e0] -> e0
---
>     [e0] -> amb>
>               1> e0
>               2> e0
>             <amb

=== transformation/access-control-typecheck ===
cp: cannot stat `transformation/access-control-typecheck.meta': No such file or directory

=== transformation/access-control-weaving ===
module-name-checked
module-name-checked

=== transformation/desugar ===
module-name-checked
module-name-checked
573c573,576
<     where GenericSort(coll, [SimpleSort(X)]) := <type-of> e0
---
>     where GenericSort(coll, [SimpleSort(X)]) := <type-of> amb>
>                                                             1> e0
>                                                             2> e0
>                                                           <amb

=== transformation/desugar-validation ===
module-name-checked
module-name-checked

=== transformation/dsl-to-core ===
cp: cannot stat `transformation/dsl-to-core.meta': No such file or directory

=== transformation/expand-page ===
module-name-checked
module-name-checked

=== transformation/lifting ===
module-name-checked
module-name-checked

=== transformation/types ===
module-name-checked
module-name-checked
281c281
<     s@SimpleSort(y) -> Lit(Null())
---
>     s@SimpleSort(y) -> Null()
365c365
<     SimpleSort("Int") -> Lit(Deci("0"))
---
>     SimpleSort("Int") -> Int("0")
368c368
<     SimpleSort("Float") -> Lit(Float("0.0"))
---
>     SimpleSort("Float") -> Float("0.0")
383c383
<     SimpleSort("Bool") -> Lit(Bool(False()))
---
>     SimpleSort("Bool") -> False()
392c392
<     SimpleSort("String") -> Lit(String([]))
---
>     SimpleSort("String") -> String("")
401c401
<     SimpleSort("Secret") -> Lit(String([]))
---
>     SimpleSort("Secret") -> String("")
410c410
<     SimpleSort("Text") -> Lit(String([]))
---
>     SimpleSort("Text") -> String("")
430c430
<     SimpleSort("URL") -> Lit(String([]))
---
>     SimpleSort("URL") -> String("")
436c436
<     SimpleSort("Image") -> Lit(Null())
---
>     SimpleSort("Image") -> Null()
469c469
<     SimpleSort("Email") -> Lit(String([]))
---
>     SimpleSort("Email") -> String("")
478c478
<     SimpleSort("Patch") -> Lit(String([]))
---
>     SimpleSort("Patch") -> String("")
498c498
<     SimpleSort("WikiText") -> Lit(String([]))
---
>     SimpleSort("WikiText") -> String("")

=== utils/core-lift-eblocks ===
cp: cannot stat `utils/core-lift-eblocks.meta': No such file or directory

=== utils/debug ===
cp: cannot stat `utils/debug.meta': No such file or directory

=== utils/emit ===
cp: cannot stat `utils/emit.meta': No such file or directory

=== utils/java-concat-ids ===
cp: cannot stat `utils/java-concat-ids.meta': No such file or directory

=== utils/merge ===
cp: cannot stat `utils/merge.meta': No such file or directory

=== utils/utils ===
cp: cannot stat `utils/utils.meta': No such file or directory

=== utils/xml-doc2abox ===
pp-stratego: rewriting failed

=== utils/xml-utils ===
pp-stratego: rewriting failed
