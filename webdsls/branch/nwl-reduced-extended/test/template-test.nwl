module templatetest

entity Foo{ x : String }
entity Bar{}

// page definitions

define page root() { "Bla" } // root multiply defined

define page root(a : String) {
  "23"
}

define page test(x : String) {
  "target of navigation"
}

define page navtest(i : String) {
  navigate test("24") { "Pass constant" }
  navigate test(i) { "Pass variable" }
  navigate tst("24") { "Root" } // navigation to undefined page
  navigate test() { "Test"} // missing argument in navigation
  navigate test("24", "25") { "Test" } // too many arguments in navigation
  navigate test(Foo{}) { "Test" } // argument has wrong type 
}

// template definitions
 
define hello(x : String) {   
  "Hello " 
  output(x)
}

define hello() {
  "Hello"
  form("a") { } // form should not have arguments
}

define helloworld() {
  hello("Zef") 
  hello() 
  hello("Zef","Foo") // hello(String,String) template not defined
  hello(Foo{}) // hello(Foo) template not defined
  world() // template world() not defined
  world("Foo") // template world not defined
  root() // page definition used as template
}

define output(f : Foo) { "FOO" }
define output(b : Bar) { "Bar" } 

// forms

define editfoo(f : Foo) {
  action save() { return test("done"); }
  form{
    input(f.x)
    input(f.y) // input of unknown property
    submit save() { "Save" }
  }
  input(f.x) // input should occur in form
  submit cancel() { "Cancel" } // submit should occur in form
}