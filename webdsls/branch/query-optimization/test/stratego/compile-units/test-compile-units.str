// run with:  str -i test-compile-units.str -I ../../../src/org/webdsl/dsl/syntax/

module test-custom-compile-units

  imports 
    compile-units-copy
    ../../../src/org/webdsl/dsl/utils/traverse
    ../../../src/org/webdsl/dsl/utils/create-dirs
    ../../../src/org/webdsl/dsl/syntax/WebDSL
    ../../../src/org/webdsl/dsl/syntax/parse-webdsl
    remove-position-annos-copy
    import-modules-copy
    
    libstrategolib
  
strategies
  
  main = 
    rules(
      DirName := "."
      AppName := "testcompileunits"
    )
  ; <xtc-parse-webdsl> FILE("./testcompileunits.app")
  ; import-modules
  ; get-changed-compile-units-and-prune
  ; debug
  ; store-compile-units-cache
  // add dummyfile
  //; <copy-file> ("./data/deleted.app", "./data/deletedtmp.app") 
  // store-compile-unit-timestamps
  //; store-custom-compile-units-timestamps
  // remove file
  //; <remove-file> "./data/deletedtmp.app"
  // add file
  //; <copy-file> ("./data/deleted.app", "./data/deletedtmp2.app")
  // (touch existing)
  //; get-changed-compile-units
  //; assert(["data/deletedtmp2.app","data/deletedtmp.app"]|"wrong output: ")
  //; get-changed-custom-compile-units
  //; assert((["data"],["data","pages"])|"wrong output: ")
  //; <remove-file> "./data/deletedtmp2.app" 


  // test utils
  assert(check|message) = if not(check) then debug(!message); <exit> 1 end

  
  // mock strategies 
  verbose-msg-newline = verbose-msg
  verbose-msg = 
      map(is-string <+ write-to-string);
      separate-by(|" ");
      concat-strings;
      debug
  debug-stage = verbose-msg
  pp-aterm(|t) = <verbose-msg> t
  is-verbose-2 = id
  add-error(|t) = <verbose-msg> t; <exit> 1

  is-custom-compile-units-enabled = id
  is-compile-units-cache-enabled = id
  read-custom-compile-cache-file = id
  is-compile-units-cache-stale = id
  disable-compile-units-cache = id
  
  trim-initial-dots-slashes = ltrim-chars(?'.'<+?'/')
  jfr-memo-open-parse-table(s) = s;memo-open-parse-table
  xtc-ensure-file = ?FILE(_)  
  get-webdsl-version = !"1"
  
signature constructors
  At : Term * Term * Term -> Term
  FILE : Term -> Term
  