module org/webdsl/dsl/to-java-servlet/data-validation/property-validation-annotation

imports 
  libstrategolib  
  libjava-front 
  
imports 
  libwebdsl-front
  org/webdsl/dsl/to-java-servlet/core-to-java-servlet
  
rules

  validation-annotations-entity-helper(|x) :
    annos ->
    bstm* |[
        java.util.List<utils.ValidationException> exceptions = new java.util.LinkedList<utils.ValidationException>();
       
        bstm_validation*
        bstm_lengthvalidation*
       
        if(exceptions.size() > 0){
          throw new utils.MultipleValidationExceptions(exceptions);
        }
    ]|
    with  bstm_validation* := <collect(validate-to-java-servlet(data-validation-to-java-servlet-collect(|"exceptions")))> annos
        ; if <fetch(?LengthAnno(x_length))> annos then
            bstm_lengthvalidation* := 
              [ <data-validation-to-java-servlet-collect-jexp(|"exceptions")> 
                  (e |[ null ]|, java:expr|[ x.length() <= x_length ]|, java:expr|[ "value too long (max "+x_length+" characters)" ]| ) ]
          else bstm_lengthvalidation* := [] end
                   
rules

   GenerateCodeJavaServlet = entity-to-java-servlet-validation-annotation; fail
   
   entity-to-java-servlet-validation-annotation :
     EntityNoSuper(x_Class, entbodydecs) ->
     <emit-java-code-local> compilation-unit|[
       package pkgname;
       
       @Partial
       public class x_Class
       {
         ~*cbds*
       }
     ]|
     with  pkgname := <DomainPackage>
         ; props := <filter(is-property-cons)> entbodydecs
         ; cbds* := <entity-to-java-servlet-validation-annotation-helper> props
       
   entity-to-java-servlet-validation-annotation :
    SessionEntity(x_ident, entbodydecs) ->
    <emit-java-code-local> compilation-unit|[
       package pkgname;
       
       @Partial
       public class x_Class
       {
         ~*cbds*
       }
     ]|
     with  x_Class := <capitalize-string> x_ident
         ; pkgname := <DomainPackage>
         ; props := <filter(is-property-cons)> entbodydecs
         ; cbds* := <entity-to-java-servlet-validation-annotation-helper> props
        
   entity-to-java-servlet-validation-annotation :
     Entity(x_Class, x_super, entbodydecs) ->
     <emit-java-code-local> compilation-unit|[
       package pkgname;
       
       @Partial
       public class x_Class
       {
         ~*cbds*
       }
     ]|
     with  pkgname := <DomainPackage>
         ; props := <filter(is-property-cons)> entbodydecs
         ; cbds* := <entity-to-java-servlet-validation-annotation-helper> props
         
  entity-to-java-servlet-validation-annotation-helper :
    props ->
    class-body-dec*|[
      public void validateDelete(){
        bstm*
      }
      //convert from new style webdsl entities to old style java classes, TODO utils.Validation classes need to be removed entirely
      public void validateSave(){
        pkgtname_domain.ValidationExceptionMultiple mex = this.validateSave_();
        java.util.List<pkgtname_domain.ValidationException> ex = mex.getExceptions();
        java.util.List<utils.ValidationException> exceptions = new java.util.LinkedList<utils.ValidationException>();
        for(pkgtname_domain.ValidationException v : ex){
          exceptions.add(new utils.ValidationException(null, v.getMessage())); 
        }
        if(exceptions.size() > 0){
          throw new utils.MultipleValidationExceptions(exceptions);
        }
      }
    ]|
    with  annos := <collect(?ValidateDeleteAnno(_,_))> props
        ; bstm* := <validation-annotations-entity-helper(|None())> annos
        ; pkgtname_domain := <DomainPackage>
        //; annos1 := <collect(?ValidateAnno(_,_)<+?ValidateCreateAnno(_,_)<+?ValidateUpdateAnno(_,_))> props
        //; bstm1* := <validation-annotations-entity-helper(|None())> annos1

        