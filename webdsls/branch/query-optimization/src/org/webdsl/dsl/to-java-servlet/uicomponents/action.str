module org/webdsl/dsl/to-java-servlet/uicomponents/action

imports
  libstratego-lib
  libjava-front
  libwebdsl-front
  libback-end-transformations
  org/webdsl/dsl/to-java-servlet/type-utils
  org/webdsl/dsl/to-java-servlet/template-render
  org/webdsl/dsl/to-java-servlet/template-action-inputs
  org/webdsl/dsl/to-java-servlet/core-to-java-servlet
  org/webdsl/dsl/to-java-servlet/java-code
  org/webdsl/dsl/to-java-servlet/control-flow-to-java-servlet
  org/webdsl/dsl/to-java-servlet/ajax/html-utils
    
rules
    
  java-servlet-element-id :
    tc@SubmitElem(_,_,_){anno*} -> tc{ActionNumber(newid),anno*} 
    where  newid := <newname> "action"
    
  java-servlet-element-id :
    tc@SubmitLinkElem(_,_,_){anno*} -> tc{ActionNumber(newid),anno*} 
    where  newid := <newname> "action"    
    
rules

  elem-to-java-servlet :
    tc@SubmitElem(call@ActionCall(name, args),passign*,elem*) ->
    <wrap-action-render-java-code>
    bstm* |[
      if(isAjaxSubmitRequired(e_ajaxmodifier)){
      //~*<render-error-messages-with-error-template(|java:expr|[ ident ]|,<ErrorTemplateAction>)> bstm*|[ 
        out.print("<input type=\"submit\" value=\"");
        bstm*
        ident = e_actionid;
        bstm_nameoverrid*
        out.print("\" "+e_attrs1+" ");
        out.print("onclick='javascript:serverInvoke(\""+ThreadLocalServlet.getContextPath()+"/" + ThreadLocalPage.get().getActionTarget()  +"\",\""+ ident +"\", ["+ThreadLocalPage.get().getHiddenPostParamsJson()+"],\""+ThreadLocalPage.get().getFormIdent()+"\", this, true); return false;'/>"); 
      //]|
      }
      else{
        //~*<render-error-messages-with-error-template(|java:expr|[ ident ]|,<ErrorTemplateAction>)> bstm*|[
          out.print("<input type=\"submit\" name=\""+ident+"\" value=\"");
          bstm*
          ident = e_actionid;
          bstm_nameoverrid*
          out.print("\" "+e_attrs1+" />"); 
        //]|
      }
    ]|
    with  bstm* := <elems-to-java-servlet> elem*
        ; e_attrs1 := <to-html-attrs(|"button")> passign*
        ; e_actionid := <action-id-encoding> (<get-actionnumber> tc, args)
        ; e_ajaxmodifier := <fetch-ajax-property-as-java-boolean> passign*
        ; bstm_nameoverrid* := <submit-name-override> passign*
        
  submit-name-override :
    passign* -> bstm_nameoverride*
    with  if <fetch(?PropertyAssignment("name",thename))> passign*
          then  e_name := <expression-to-java-servlet> thename
              ; bstm_nameoverride* := bstm* |[ ident = e_name; ]|
          else  bstm_nameoverride* := [] end
       
  action-id-encoding : 
//    (actionident,args) -> e|[ ident + "~actionident" + uniqueid + e ]|
    (actionident,args) -> <for-loop-counter-wrap-code-expr> e|[ "~actionident" + uniqueid /*+ e*/ ]|
    //with  e := <actual-action-args-to-state-enc> args   //no longer add action args, this caused issues with inline actions + template vars, the args are changed during data binding and the action isn't found anymore 

  id-encoding :
    inputident -> java:expr |[ ident+"~inputident"+uniqueid ]|
  
  /**
   *  @TODO check action signature to see whether something needs to be passed as ref arg or not
   */ 
  action-args-to-java-exp-list(|args,fargcalled) =
    <zip(call-arg-ref-resolve-helper)> (<map(?Arg(_,<id>))>fargcalled,args)  
    
  /*
   * this doesn't allow downloads, use special downloadlink (see types/file.str)
   */
  elem-to-java-servlet :
    tc@SubmitLinkElem(call@ActionCall(name, args),passign*,elem*) ->
    <wrap-action-render-java-code> 
    bstm* |[ 
      ident = e4;
      bstm_nameoverride*
      if(isAjaxSubmitRequired(e_ajaxmodifier)){
        //~*<render-error-messages-with-error-template(|java:expr|[ ident ]|,<ErrorTemplateAction>)> bstm*|[
          out.print("<a href=\"javascript:void(0)\" "+e_attrs1+" onclick='javascript:serverInvoke(\""+
            ThreadLocalServlet.getContextPath()+"/" + ThreadLocalPage.get().getActionTarget()+   //TODO getActionTarget is currently used, but the default redirect will not reproduce the page arguments in this case
           "\",\""+ ident+"\", ["+ThreadLocalPage.get().getHiddenPostParamsJson()+"],\""+ThreadLocalPage.get().getFormIdent()+"\", this, true)' >");
          bstm*
          out.print("</a>");
        //]|
      }
      else{
        //~*<render-error-messages-with-error-template(|java:expr|[ ident ]|,<ErrorTemplateAction>)> bstm*|[
          out.print("<a "+e_attrs1+" href=\"javascript:void(0)\" ");
          out.print("onclick='javascript:serverInvoke(\""+utils.HTMLFilter.filter(ThreadLocalPage.get().getPageUrlWithParams())+
            "?__action__link__=1\",\""+ident+"\", ["+ThreadLocalPage.get().getHiddenPostParamsJson()+"],\""+ThreadLocalPage.get().getFormIdent()+"\", this, true)'>"); 
          bstm*
          out.print("</a>");
        //]|
      }
    ]|
    with  bstm* := <elems-to-java-servlet> elem*
        ; e4 := <action-id-encoding> (<get-actionnumber> tc,args) 
        ; e_attrs1 := <to-html-attrs> passign*
        ; e_ajaxmodifier := <fetch-ajax-property-as-java-boolean> passign*
        ; bstm_nameoverride* := <submit-name-override> passign*

  fetch-ajax-property-as-java-boolean :
    passign* -> e_ajaxmodifier
    with if <fetch(TemplateCallPropertyAjax)> passign*
         then e_ajaxmodifier := java:expr |[ true ]|
         else e_ajaxmodifier := java:expr |[ false ]|
         end
         
  handle-actions-to-java-servlet:
    tc@SubmitElem(e1,passign*,elem*) -> <handle-actions-to-java-servlet-submit(|actionident,e1,passign*,elem*)>
    with actionident := <get-actionnumber> tc   
  handle-actions-to-java-servlet: 
    tc@SubmitLinkElem(e1,passign*,elem*) -> <handle-actions-to-java-servlet-submit(|actionident,e1,passign*,elem*)>
    with actionident := <get-actionnumber> tc   
  handle-actions-to-java-servlet-submit(|actionident, e1, passign*, elem*): 
    _ -> result
    with  x_action := <?ActionCall(name,args);!name> e1
        ; <get-anno(?ActionFargAnno(fargcalled))> e1
        ; e* := <action-args-to-java-exp-list(|args,fargcalled)>
        ; e4 := <action-id-encoding> (actionident,args)        
        ; bstm_passign* := <filter(handle-actions-to-java-servlet); concat> passign*
        ; e_ajaxmodifier := <fetch-ajax-property-as-java-boolean> passign*
        ; if <fetch(TemplateCallPropertyIgnoreValidation)> passign* 
          then bstm_disableval* := java:bstm*|[ temp.disableValidation(); ]| 
          else bstm_disableval* := [] end
        ; bstm_nameoverride* := <submit-name-override> passign*
        ; result :=
            <wrap-action-render-java-code> 
            bstm*|[
              ident = e4;
              bstm_nameoverride*
              if(ThreadLocalPage.get().getParammap().get(ident)!=null )
              {
                if(isAjaxSubmitRequired(e_ajaxmodifier)){
                  ThreadLocalPage.get().enableAjaxActionExecuted(); 
                }
                x_action temp = (x_action)getAction("~x_action");
                bstm_disableval*
                temp.run(e*,ident);
              }
              bstm_passign*
            ]|
  
  //in first traversal, for input data binding, already register which action is executed, in order to know about ignore-validation
  //we need handle-actions traversal as well to get the right arguments for the action, which may depend on input data binding
  handle-actions-input-to-java-servlet:
    tc@SubmitElem(e1,passign*,elem*) -> <handle-actions-input-to-java-servlet-submit(|actionident,e1,passign*)>
    with actionident := <get-actionnumber> tc   
  handle-actions-input-to-java-servlet: 
    tc@SubmitLinkElem(e1,passign*,elem*) -> <handle-actions-input-to-java-servlet-submit(|actionident,e1,passign*)>
    with actionident := <get-actionnumber> tc  
  handle-actions-input-to-java-servlet-submit(|actionident, e1, passign*): 
    _ -> result
    with  x_action := <?ActionCall(name,args);!name> e1
        ; e4 := <action-id-encoding> (actionident,args)        
        ; if <fetch(TemplateCallPropertyIgnoreValidation)> passign* 
          then bstm_disableval* := java:bstm*|[ temp.disableValidation(); ]| 
          else bstm_disableval* := [] end
        ; bstm_nameoverride* := <submit-name-override> passign*
        ; result :=
            bstm*|[
              ident = e4;
              bstm_nameoverride* 
              if(ThreadLocalPage.get().getParammap().get(ident)!=null )
              {
                x_action temp = (x_action)getAction("~x_action");
                bstm_disableval*
                ThreadLocalPage.get().setActionToBeExecuted(temp);
              }
            ]|
            