module org/webdsl/dsl/to-java-servlet/types/date

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  
imports 
  libwebdsl-front  

/**
 *  http://java.sun.com/javase/6/docs/api/java/text/SimpleDateFormat.html
 *  http://java.sun.com/javase/6/docs/api/java/text/DateFormat.html
 *  http://java.sun.com/javase/6/docs/api/java/util/Date.html
 *  http://java.sun.com/javase/6/docs/api/java/util/Calendar.html
 *
 */

rules // Peristence annotations

  builtin-persistence-annotations :
    SimpleSort("Time") -> [anno|[ @Temporal(TemporalType.TIME) ]|]
    
  builtin-persistence-annotations :
    SimpleSort("Date") -> [anno|[ @Temporal(TemporalType.DATE) ]|]
    
  builtin-persistence-annotations :
    SimpleSort("DateTime") -> [anno|[ @Temporal(TemporalType.TIMESTAMP) ]|]

rules // Typechecking

  builtin-java-type : 
    SimpleSort("Date") -> type|[ java.util.Date ]|
    
  builtin-java-type : 
    SimpleSort("DateTime") -> type|[ java.util.Date ]|
    
  builtin-java-type : 
    SimpleSort("Time") -> type|[ java.util.Date ]|
    
  date-type-compatible =
    ?SimpleSort("Date")
  <+?SimpleSort("Time")
  <+?SimpleSort("DateTime")
  
  anno-date-type-compatible =
    get-type-anno; date-type-compatible

rules 

  call-to-java-servlet :
    exp|[ now() ]| -> java|[ new java.util.Date() ]|

  //call-to-java-servlet :
  //  exp|[ today() ]| -> java|[ {| java.util.Date d = new java.util.Date(); d.setHours(0); d.setMinutes(0); d.setSeconds(0); | d |} ]|

  call-to-java-servlet :
    exp|[ today() ]| -> java|[ {| java.util.Date d = new java.util.Date(); | new java.util.Date(d.getYear(), d.getMonth(), d.getDate()) |} ]|

  call-to-java-servlet :
    exp|[ Date(e1, e2) ]| -> java|[ utils.DateType.parseDate(e3, e4) ]|
    with  e3 := <expression-to-java-servlet> e1
        ; e4 := <expression-to-java-servlet> e2

  call-to-java-servlet :
    exp|[ Date(e1) ]| -> java|[ utils.DateType.parseDate(e2, "dd/MM/yyyy") ]|
    with  e2 := <expression-to-java-servlet> e1

  call-to-java-servlet :
    exp|[ Time(e1, e2) ]| -> java|[ utils.DateType.parseDate(e3, e4) ]|
    with  e3 := <expression-to-java-servlet> e1
        ; e4 := <expression-to-java-servlet> e2

  call-to-java-servlet :
    exp|[ Time(e1) ]| -> java|[ utils.DateType.parseDate(e2, "H:mm") ]|
    with e2 := <expression-to-java-servlet> e1

  call-to-java-servlet :
    exp|[ DateTime(e1, e2) ]| -> java|[ utils.DateType.parseDate(e3, e4) ]|
    with e3 := <expression-to-java-servlet> e1
        ; e4 := <expression-to-java-servlet> e2

  call-to-java-servlet :
    exp|[ DateTime(e1) ]| -> java|[ utils.DateType.parseDate(e2, "dd/MM/yyyy H:mm") ]|
    with e2 := <expression-to-java-servlet> e1
