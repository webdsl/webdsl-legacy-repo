module org/webdsl/dsl/to-java-servlet/types/entity

imports
  libstrategolib

imports
  libwebdsl-front
  
rules

  builtin-java-type :
    SimpleSort("Entity") -> type|[ org.webdsl.WebDSLEntity ]|

rules

  call-to-java-servlet :
    Call(e1, "save", []) -> expr|[ 
      {| //e2.validateSave(); //handled at end of action, save might be implicit due to cascade  
         //set version property to 1, which indicates a persisted entity
         e2.setVersion(1);
       | e_HibSession.save(e2) |} 
    ]|
    where <get-type-anno;has-entity-anno> e1
    with  e2 := <expression-to-java-servlet> e1

  call-to-java-servlet :
    Call(e1, "delete", []) -> 
    expr|[ {| e2.validateDelete(); 
              e2.setChanged();
            | e_HibSession.delete(e2) |} ]| //should avoid these eblocks, however, not an issue for .delete since it has no return value and can only be used as statement
    where <get-type-anno;has-entity-anno> e1
    with  e2 := <expression-to-java-servlet> e1
    
  call-to-java-servlet :
    exp |[ loadEntity(e1,e2) ]| -> java |[ utils.PageParamLoad.loadEntity(e_HibSession, "~x_domain"+"."+e3, e4) ]|
    with  e3 := <expression-to-java-servlet> e1
        ; e4 := <expression-to-java-servlet> e2
        ; x_domain := <pp-java5-to-string> <DomainPackage>
          
  call-to-java-servlet :
    exp |[ loadEntity(e1) ]| -> java |[ utils.PageParamLoad.loadEntityFromParam(e_HibSession, "~x_domain", e2) ]|
    with  x_domain := <pp-java5-to-string> <DomainPackage>
        ; e2 := <expression-to-java-servlet> e1
    
  call-to-java-servlet :
    exp |[ e1.getTypeString() ]| -> java |[ x.get_WebDslEntityType() ]| //get type from the wrapped class
    where SimpleSort("Entity") := <get-type-anno> e1
        ; Var(x) := e1
         
          