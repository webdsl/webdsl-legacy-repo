module org/webdsl/dsl/languages/stratego-interface/sdf-interface

imports
  libstrategolib
  libwebdsl-front

strategies // typechecking

  is-generic-sort-stratego = ?GenericSort("SDFInput",_)

  type-exists-stratego = ?GenericSort("SDFInput",_)
      
  language-of :
    e -> language
    where GenericSort("SDFInput", [language]) := <type-of> e

  check-builtin-signature-stratego :
    (GenericSort("SDFInput", [_]), "parse", []) -> SimpleSort("ATerm")
  
  check-builtin-signature-stratego :
    (GenericSort("SDFInput", [_]), "isValid", []) -> SimpleSort("Bool")
    
  type-default-value-stratego :
    GenericSort("SDFInput", [_]) -> exp |[ "" ]|
  
strategies

  /**
   *  Workaround for typechecking of inputSDF templatecall.
   *  GenericSort can contain different sdf definitions, e.g. SDFInput<Bibtex>, SDFInput<WebDSL>
   *  It is simply made a subclass of object and inputSDF made to accept an object to prevent
   *  typechecking errors.
   */ 

  //overload resolution
  extends-genericsorts :
    GenericSort(SDFInput, _) -> "Object"

  //using object here to cope with weird use of genericsort constructor for sdfinput
  built-in-template-rule-setup = <declare-built-in-template-rules> ("inputSDF",[SimpleSort("Object")]);fail

rules

  desugar-stratego :
    elem |[ input(e)[passign*] {elem*} ]| -> elem |[ inputSDF(e)[passign*] {elem*} ]|
    where GenericSort("SDFInput", _) := <type-of> e

strategies // Basic type definitions

  type-compatible-stratego =
    ?(GenericSort("SDFInput", _), SimpleSort("String"))

  type-compatible-stratego =
    ?(SimpleSort("String"), GenericSort("SDFInput", _))

  type-compatible-stratego =
    ?(SimpleSort("Object"), GenericSort("SDFInput", _)) // SDFInput is subclass of Object for typechecker 
   
strategies // Composition

  rename = rename-sdf

rules

  // rename hack to avoid checks on argument type, e.g.: error: Type not defined: BibTeX
  rename-sdf :
    GenericSort("SDFInput", [SimpleSort(x{anno1*})]){anno2*} -> 
    GenericSort("SDFInput", [x{anno1*}]){anno2*}
    //where debug(!"using SDFInput")
