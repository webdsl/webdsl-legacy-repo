module org/webdsl/dsl/languages/ui/dispatch

rules //only entity dispatch entry introduces a variable

  rename-ui :
    DispatchEntity(x, srt, elems1) -> DispatchEntity(x, srt, elems2)
    with {| Rename, VarInContext
          : srt2   := <rename-all> srt
          ; y      := <rename-bound(|srt2)> x
          ; <declare-vars-in-context> y
          ; elems2 := <rename-all> elems1
          |}

rules // just check first part of navigate for now

  constraint-error-ui :
    DispatchNavigate( [ DispatchNavigateCall(p, arg*) | _ ],elems) -> <add-error(|["Not a valid navigate link, page ",p," does not exist: "])>
    where <not(check-link)> PageCall(p,arg*)
    
  constraint-error-ui :
    DispatchNavigate( [ DispatchNavigateCallNoArg(p)  | _ ],elems) -> <add-error(|["Not a valid navigate link, page ",p," does not exist: "])>
    where <not(check-link)> PageCall(p,[])
  
  constraint-error-ui :
    DispatchNavigateButton(e, [ DispatchNavigateCall(p, arg*) | _ ]) -> <add-error(|["Not a valid navigate link, page ",p," does not exist: "])>
    where <not(check-link)> PageCall(p,arg*)
    
  constraint-error-ui :
    DispatchNavigateButton(e, [ DispatchNavigateCallNoArg(p)  | _ ]) -> <add-error(|["Not a valid navigate link, page ",p," does not exist: "])>
    where <not(check-link)> PageCall(p,[])
 
rules

  desugar-ui :
    DispatchEntryNoArg(ident,elem*) -> DispatchEntry(ident,[],elem*)
    
  desugar-ui :
    DispatchNavigateCallNoArg(ident) -> DispatchNavigateCall(ident, [])
    
//rules //vars can be used in these types of navigates, rename to add binding information

  //rename-bound-hook(|x,y) = rules( Rename : DispatchNavigateCall(x, []) -> DispatchNavigateCall(y, []) ); fail
 
