### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

# Do not change the name of this appender
# use RequestAppender.getNamed("hibernateLog").getLog()
# This will get you all logs for the current thread configured for this appender
# .getNamed() can return null, if it could not find a RequestAppender by the given name
# Only call .getLog() on the same thread that handles the page request
# You can use .getLog(<<RequestLogEntry>>.getId().toString()) from another thread if needed 
log4j.appender.hibernateLog=utils.RequestAppender

@DEBUGLOG4J1@
@DEBUGLOG4J2@

### set log levels - for more verbose logging change 'info' to 'debug' ###

#Note: enable rootlogger and org.hibernate.type for debugging queries
#log4j.rootLogger=info, stdout
### log JDBC bind parameters ###
log4j.logger.org.hibernate.type=trace, hibernateLog

#log4j.logger.org.hibernate=info
#log4j.logger.org.hibernate=debug

### log HQL query parser activity
#log4j.logger.org.hibernate.hql.ast.AST=debug

### log just the SQL
log4j.logger.org.hibernate.SQL=debug, hibernateLog

### log schema export/update ###
#log4j.logger.org.hibernate.tool.hbm2ddl=info

### log HQL parse trees
#log4j.logger.org.hibernate.hql=debug

### log cache activity ###
#log4j.logger.org.hibernate.cache=info

### log transaction activity
#log4j.logger.org.hibernate.transaction=debug

### log JDBC resource acquisition
log4j.logger.org.hibernate.jdbc=debug, hibernateLog

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace
