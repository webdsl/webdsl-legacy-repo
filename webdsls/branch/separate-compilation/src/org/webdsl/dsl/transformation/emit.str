module org/webdsl/dsl/transformation/emit

imports
  libstratego-lib
  libjava-front

imports
  libwebdsl-front
  
signature constructors
  
  IsGenerated : Term
  
rules	// emit top-level definition

	// @TODO: rename to emit-webdsl-def
	emit-webdsl-code = 
      declare-all
    ; emit-webdsl-code-no-declare
    
  // Used for separate declare / emit phase
	emit-webdsl-code-no-declare =
      where(InTypeCheckingPhase); emit-webdsl-code-no-rename
  <+  with-toplevel-name(
	        rename-all
	      ; emit-webdsl-code-no-rename
	    )
	  
	//used to support syntax variations and backwards compatibility, rename strategy will need to cope with the variations, desugar can normalize to one
  // renaming is not needed for these one-to-one transformations that have the same semantics
	emit-webdsl-code-no-rename =
			?def
    ; (CurrentDefinitionKey <+ !"") => key
    ; rules(AddWebDSLDefs :+= (key, def))
    
	// emit a new section with all collected defs
	desugar-emit-all-defs =
      bagof-AddWebDSLDefs
    ; not(?[])
    ; map({
          ?(key,def)
        ; if <?At(x,y,z)> key; <not(is-emitted-mod)> x then
              // Emitted from an ast definition
              key' := At(x,"emit",<newname>"emit"){key}
            ; <store-module-def(|key')> def
          else
            // Emitted from another compiler emit
            <store-module-def> def
          end
      })
		; rules(AddWebDSLDefs :- _) 	// hack to clear dr
		
rules // emit section
  
  emit-webdsl-section =
      declare-all
    ; rename-section
    ; ?sec
    ; rules(
        AddWebDSLSection :+ Application(qid, sections) -> Application(qid, [sec|sections])
      )
  
rules // emit builtins (during declare)
	
	add-builtin-rule = ?rule; rules(AddWebDSLRules :+= rule)
	
	add-builtins-to-ast =
			bagof-AddWebDSLDefs
	  ; map(?(_,<id>)) // TODO: use definition key
		; map(rename-and-store)
		; !AccessControlDefinition(None(), <bagof-AddWebDSLRules>)
		; rename-and-store
		; rules(AddWebDSLDefs :- _)
    ; rules(AddWebDSLRules :- _)
	
	/*
	get-builtin-sections: _ -> [defsec,rulesec]
    with  defsec := Section("builtins", <bagof-AddWebDSLDefs; map(rename-toplevel)>)
        ; rulesec := AccessControlDefinition(None(), <bagof-AddWebDSLRules; map(rename-toplevel)>)
        ; rules(AddWebDSLDefs :- _)
        ; rules(AddWebDSLRules :- _)
	*/