module org/webdsl/dsl/languages/data-model/string-property-functions

imports
  libstrategolib

imports
  libwebdsl-front

rules

  extend-entity-declare-body(|x_class) = string-property-addition(|x_class)

  string-property-addition(|x_class) = 
    (?Property(x, k, srt, annos) <+ ?PropertyNoAnno(x, k, srt)) //derivedproperty will need special handling
    ; <type-compatible> (srt, SimpleSort("String"))
    ; <debug(!"X: ")> (x_class, x)
    ; with(
        // find entity by string property function
          x_funname := <concat-strings> ["find",x_class,"By",<capitalize-string> x]
        ; x_funname_static := <concat-strings> ["findBy",<capitalize-string> x]
        ; <register-reserved-function> (x_funname,1)
        ; <declare-emit-static-function(|x_class, x_funname_static)> fun |[
            function x_funname(prop:srt):List<x_class> {
              return select g from x_class as g where g.x = ~prop;
            }
          ]|
        // find entity by string property like function
        ; x_funname2 := <concat-strings> ["find",x_class,"By",<capitalize-string> x,"Like"]
        ; x_funname2_static := <concat-strings> ["findBy",<capitalize-string> x,"Like"]
        ; <register-reserved-function> (x_funname2,1)
        ; <declare-emit-static-function(|x_class, x_funname2_static)> fun |[
            function x_funname2(prop:srt):List<x_class> {
              var s := "%" + prop + "%";
              return select g from x_class as g where g.x like ~s;
            }
          ]|
      )
      