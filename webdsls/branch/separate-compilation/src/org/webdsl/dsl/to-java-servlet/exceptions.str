module org/webdsl/dsl/to-java-servlet/exceptions
 
strategies
/*
TryStatement(
  Block(
    [Stat(ThisCall("ghghd", [])), Stat(ThisCall("ertertert", []))]
  )
, [ Catch(
      "v"
    , SimpleSort("ValidationException")
    , Block([Stat(ThisCall("jdfgkjdgjkdf", [Var("v")]))])
    )
  ]
)

ThrowStatement([String("\"43t\"")])


TryTemplate(
  Block(
    [ Stat(ThisCall("log", [String("\"1\"")]))
    , ThrowStatement(
        [ObjectCreation(SimpleSort("SomethingHappened"), [ObjectPropertyAssignment("whatHappened", String("\"an exception\""))])]
      )
    , Stat(ThisCall("log", [String("\"2\"")]))
    , Return(String("\"error\""))
    ]
  )
, [ Catch(
      "sh"
    , SimpleSort("SomethingHappened")
    , Block(
        [Return(Add(String("\"ok \""), FieldAccess(Var("sh"), "whatHappened")))]
      )
    )
  ]
)

*/
  builtin-java-type :
    SimpleSort("Exception") -> type|[ utils.WebDSLException ]|
    
  statement-to-java-servlet:
    ThrowStatement([e1]) ->  //just one
    bstm* |[
      throw new utils.WebDSLException(e2);
    ]|
    with  e2 := <expression-to-java-servlet> e1

  statement-to-java-servlet:
    TryStatement(Block(stat*),catch*) ->
    bstm* |[
      try{
        bstm*
      }
      catch(utils.WebDSLException x_ident){
        bstm_catch
      }
    ]|
    with  bstm* := <statements-to-java-servlet> stat*
        ; (x_ident, bstm_catch) := <Hd; transform-catch> catch*

  transform-catch:
    Catch(ident,srt,Block(stat*)) -> (ident, bstm)
    with  bstm := <statements-to-java-servlet> stat*
        