module org/webdsl/dsl/modules/types/email

imports 
  libstrategolib 
  Java-15 
  libjava-front 
  libwebdsl-front
  
rules
  is-simple-sort = ?SimpleSort("Email")  
  extends-builtin : "Email" -> "String"
  built-in-template-rule-setup = <declare-built-in-template-rules> ("inputEmail",[SimpleSort("Email")]);fail
//  built-in-template-rule-setup = <declare-built-in-template-rules> ("outputEmail",[SimpleSort("Email")]);fail
  
rules // types

  type-default-value :
    SimpleSort("Email") -> exp|[ "" ]|

rules //compatibility with String

  built-in-template-rule-setup = <make-string-compatible> "Email"; fail

rules // desugar
  DeriveInput :
    elem|[ input(e)[passign*]{elem*} ]| -> elem|[ inputEmail(e)[passign*]{elem*} ]|
    where SimpleSort("Email") := <type-of> e

  DeriveOutput :
    elem|[ output(e)[passign*]{} ]| -> elem|[ text(e)[passign*]{} ]|
    where SimpleSort("Email") := <type-of> e

/**
 *  'not empty' annotation
 */
rules
 
  desugar-ui :
    TemplateCall("inputEmail",[fa@FieldAccess(e,x_prop)],passign*,body){anno*} ->
    TemplateCall("inputEmail",[fa],passign1*,body){anno*}
    where passign1* := <desugar-not-empty-anno(|passign*, e, x_prop)>

  desugar-not-empty-anno(|passign*, e, x_prop) :
    _ -> passign1*
    where not(<fetch(?PropertyAssignment("notempty", "true"))> passign*)
        ; SimpleSort(x_vartypename) := <type-of> e
        ; propannos := <property-annos> (x_vartypename,x_prop) 
        ; <fetch(?NotEmptyAnno())> propannos
    with  passign1* := [PropertyAssignment("notempty", "true") | passign*]
    