 /**

   Validation annotations

 */

 module org/webdsl/dsl/generation/java-validation

 imports 
   libstrategolib  
   Java-15 
   libjava-front

 strategies
  
  validation-annotations-to-property-code=
    filter(validation-annotation-to-property-code)

  
  validation-annotation-to-property-code:
	ValidationAnnoLength(x_min,x_max) -> anno |[ @org.hibernate.validator.Length(min=x_min,max=x_max) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMinLength(x_min) -> anno |[ @org.hibernate.validator.Length(min=x_min) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMaxLength(x_max) -> anno |[ @org.hibernate.validator.Length(max=x_max) ]|
  validation-annotation-to-property-code:
	ValidationAnnoNotEmpty() -> anno |[ @org.hibernate.validator.NotEmpty ]|
  validation-annotation-to-property-code:
	ValidationAnnoEmail() -> anno |[ @org.hibernate.validator.Email ]|
  validation-annotation-to-property-code:
	ValidationAnnoCreditCardNumber() -> anno |[ @org.hibernate.validator.CreditCardNumber ]|
  validation-annotation-to-property-code:
	ValidationAnnoEAN() -> anno |[ @org.hibernate.validator.EAN ]|
  
  validation-annotation-to-property-code:
	ValidationAnnoPattern(x_pattern) -> anno |[ @org.hibernate.validator.Pattern(regex=x_pattern) ]| 
  validation-annotation-to-property-code:
	ValidationAnnoPatternWithFlags(x_pattern, flags) -> anno |[ @org.hibernate.validator.Pattern(regex = x_pattern ,flags = x_flagspart ) ]|
	where x_flagspart := <generate-flags;concat-strings> flags
  generate-flags:
	[x|xs] -> [<generate-flag> x| <generate-flags-next>xs]
  generate-flags-next:
	[x|xs] -> [<generate-flag;?y;!["|",y];concat-strings> x| <generate-flags-next>xs]
  generate-flags-next:
	[]->[]
  generate-flag:
	FlagCanonEq() -> "java.util.regex.Pattern.CANON_EQ"
  generate-flag:
	FlagCaseInsensitive() -> "java.util.regex.Pattern.CASE_INSENSITIVE"
  generate-flag:
	FlagComments() -> "java.util.regex.Pattern.COMMENTS"
  generate-flag:
	FlagDotAll() -> "java.util.regex.Pattern.DOTALL"
  generate-flag:
	FlagLiteral() -> "java.util.regex.Pattern.LITERAL"
  generate-flag:
	FlagMultiline() -> "java.util.regex.Pattern.MULTILINE"
  generate-flag:
	FlagUnicodeCase() -> "java.util.regex.Pattern.UNICODE_CASE"
  generate-flag:
	FlagUnixLines() -> "java.util.regex.Pattern.UNIX_LINES"

  validation-annotation-to-property-code:
	ValidationAnnoMax(x_max) -> anno |[ @org.hibernate.validator.Max(x_max) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMin(x_min) -> anno |[ @org.hibernate.validator.Min(x_min) ]|
  validation-annotation-to-property-code:
	ValidationAnnoRange(x_min,x_max) -> anno |[ @org.hibernate.validator.Range(min=x_min,max=x_max) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMinRange(x_min) -> anno |[ @org.hibernate.validator.Range(min = x_min) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMaxRange(x_max) -> anno |[ @org.hibernate.validator.Range(max = x_max) ]|
  validation-annotation-to-property-code:
	ValidationAnnoDigits(x_int,x_frac) -> anno |[ @org.hibernate.validator.Digits(integerDigits = x_int , fractionalDigits = x_frac) ]|


  validation-annotation-to-property-code:
	ValidationAnnoPast() -> anno |[ @org.hibernate.validator.Past ]|
  validation-annotation-to-property-code:
	ValidationAnnoFuture() -> anno |[ @org.hibernate.validator.Future ]|

  validation-annotation-to-property-code:
	ValidationAnnoSize(x_min,x_max) -> anno |[ @org.hibernate.validator.Size(min=x_min,max=x_max) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMinSize(x_min) -> anno |[ @org.hibernate.validator.Size(min = x_min) ]|
  validation-annotation-to-property-code:
	ValidationAnnoMaxSize(x_max) -> anno |[ @org.hibernate.validator.Size(max = x_max) ]|

  validation-annotation-to-property-code:
	ValidationAnnoNotNull() -> anno |[ @org.hibernate.validator.NotNull ]|
  validation-annotation-to-property-code:
	ValidationAnnoAssertTrue() -> anno |[ @org.hibernate.validator.AssertTrue ]|
  validation-annotation-to-property-code:
	ValidationAnnoAssertFalse() -> anno |[ @org.hibernate.validator.AssertFalse ]|
  validation-annotation-to-property-code:
	ValidationAnnoValid() -> anno |[ @org.hibernate.validator.Valid ]|
     