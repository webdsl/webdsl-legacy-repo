// vim: syntax=stratego

module file-management
imports libstratego-lib

strategies

/* Create file and supporting directory structure.

   @param pp       String      => name of xtc pretty-print tool
   @param path     List String => directory structure in which resulting file is placed,
                                  will be created if it does not exist
   @param filename String      => name of file to write
   @param term     t           => term that will be pretty-printed and written to file
                                  pp argument should be able to parse this term
   
   @type _ -> FILE 
*/

create-file(|pp,path,filename,term) =
               // For now, output in directory "./generated" (maybe we'll parameterize this later)
	       path' := <create-dirs> Cons("generated", path)
             ; say(<concat-strings> ["Writing file: ", filename, " on path ", path'])  
	     ; file  := <fopen> (<concat-strings> [path', "/", filename], "w")
             ; where(content := <debug(!"aterm : "); write-to; xtc-transform(!pp); ?FILE(<read-text-file>)> term)
             ; <fputs> (content, file)
	     ; say(!"File written")
             ; <fclose> file

/* Create a nested directory structure. Works on a
   list containing the directories to be created,
   returns the path to the last (innermost) directory
   Current working directory remains unchanged.

   @type List(String) -> String
*/
create-dirs = where(root := <getcwd>) 
	    ; map((file-exists <+ mkdir(|"w")) ; chdir) 
	    ; getcwd // return path to innermost created dir.
            ; where (<chdir> root) // restore old cwd
          
