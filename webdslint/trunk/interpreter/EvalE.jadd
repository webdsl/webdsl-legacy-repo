/*
 */

import semanticdomain.*;
import semanticdomain.value.*;

aspect EvalE {
  
	public Value ASTNode.evalE(EvalState state, Request request, Context context, 
			TemplateEnv templateEnv, Env env) {
		return new VString(getClass().getName());
	} 

	public Value StringElem.evalE(EvalState state, Request request, Context context, 
			TemplateEnv templateEnv, Env env) {
		return new VString(getValue());
	} 

	public Value StringLit.evalE(EvalState state, Request request, Context context, 
			TemplateEnv templateEnv, Env env) {
		return new VString(getValue());
	} 

	public Value Var.evalE(EvalState state, Request request, Context context, 
			TemplateEnv templateEnv, Env env) {
		Value result = null;
		String varName = getName();
		VIdentifier id = new VIdentifier(varName);
		result = env.get(id);
		if (result == null)
			result = new VString("id " + id + " not found");
		return result;
	}

	public Value Address.evalE(EvalState state, Request request, Context context, 
			TemplateEnv templateEnv, Env env) {
		Value result = null;
		Exp exp = getExp();
		Value value = exp.evalE(state, request, context, templateEnv, env);
		if (value instanceof VRef) {
			VRef vRef = (VRef) value;
			result = vRef.getAddress();
		} else 
			result = new VString("Can not get address of " + value.toString());
		return result;
	}



}
