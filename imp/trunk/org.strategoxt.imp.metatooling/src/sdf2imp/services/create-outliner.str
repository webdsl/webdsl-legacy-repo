module sdf2imp/services/create-outliner

imports
  libstratego-lib
  
  sdf2imp/util/-
  sdf2imp/services/common

strategies

  read-outliner =
    <input-descriptor-file> "Outliner";
    
    collect-all(?Outliner(<id>));
    
    concat
  
  outliner-rule-to-java:
    condition ->
    |[ if (e_Condition) { outline(node); return true; } ]|
    where
      e_Condition := <condition-to-java>
  
  create-outliner =
    outliner  := <read-outliner>;
    visits    := <map(risky(outliner-rule-to-java |"Rule not supported"))> outliner;
    sdfmodule := <get-sdf-main-module>;
    x_Name    := <conc-strings> (<get-main-class-name>, "Outliner");
    
    <output-java-file> |[
      package outliner;
      
      public class x_Name extends tname_OUTLINERBASE {
      
        private class OutlineVisitor extends tname_VISITOR {
          /* UNDONE: Generic top item
          public OutlineVisitor() {
            pushTopItem("~sdfmodule" + " program", null);
          }
          */
          
          public boolean visit(tname_ASTNODE node) {
            String constructor = node.getConstructor();
            String sort = node.getSort();
            
            ~*visits
            
            return true;
          }
          
          public void endVisit(tname_ASTNODE node) {
            endOutline(node);
          }
        }
  
        protected void sendVisitorToAST(tname_ASTNODE node) {
          node.accept(new OutlineVisitor());
        }
      }
    ]|
