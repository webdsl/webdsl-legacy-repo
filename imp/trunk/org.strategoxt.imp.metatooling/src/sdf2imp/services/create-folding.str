/**
 * sdf2imp concrete folding service generator.
 *
 *
 * @author Lennart Kats <lennart add lclnet.nl>
 */
module sdf2imp/services/create-folding

imports
  libstratego-lib
  
  sdf2imp/util/-
  sdf2imp/services/common

overlays

  tname_FOLDINGHELPER = tname |[ org.strategoxt.imp.runtime.services.FoldingHelper ]|
  tname_FOLDINGBASE   = tname |[ org.eclipse.imp.services.base.FolderBase ]|

strategies

  read-folding =
    <input-descriptor-file> "Folding";
    
    collect-all(?Folding(<id>));
    
    concat
  
  folding-rule-to-java:
    condition ->
    |[ if (e_Condition) { helper.makeCompleteAnnotation(node); return true; } ]|
    where
      e_Condition := <condition-to-java>

  create-folding =
    folding := <read-folding>;
    ifs     := <map(risky(folding-rule-to-java |"Rule not supported"))> folding;
    x_Name  := <conc-strings> (<get-main-class-name>, "FoldingUpdater");
    
    <output-java-file> |[
      package foldingUpdater;
      
      public class x_Name extends tname_FOLDINGBASE {
        private lpg.runtime.IPrsStream prsStream;
          
        private tname_FOLDINGHELPER helper;
          
        // Visitor inner class
        private class FoldingVisitor extends tname_VISITOR {
          public boolean visit(tname_ASTNODE node) {
            String constructor = node.getConstructor();
            String sort = node.getSort();
            
            ~*ifs
            
            return true;
          }
          
          public void endVisit(tname_ASTNODE node) {
            // Nothing to see here; move along.
          }
        };

        // TODO: Move helper method to super

        public void sendVisitorToAST(java.util.HashMap newAnnotations, java.util.List annotations, java.lang.Object ast) {
          tname_ASTNODE theAST = (tname_ASTNODE) ast;
          prsStream = theAST.getLeftIToken().getPrsStream();
          tname_VISITOR abstractVisitor = new FoldingVisitor();
          
          helper = new tname_FOLDINGHELPER(this, prsStream);
          
          theAST.accept(abstractVisitor);
        }
      }
    ]|
