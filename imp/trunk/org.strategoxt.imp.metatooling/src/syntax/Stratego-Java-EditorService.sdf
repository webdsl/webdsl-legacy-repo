module Stratego-Java-EditorService
imports
  StrategoMix[StrategoHost]
  languages/java/EmbeddedJavaMix[Java Term[[StrategoHost]]]
  languages/java/eblock/JavaEBlockMix[Java]
  
  EditorService

exports
  context-free start-symbols Module[[StrategoHost]]

  sorts
    QuotedTerm
    QuotedTerms
  
  context-free syntax
    %% (Anti-)quotations
    "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    
    "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    
    "descriptor" "|[" OutlineRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" ColorRule "]|"   -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "descriptor" "|[" FoldingRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
    
    "|[" OutlineRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "|[" ColorRule "]|"   -> Term[[StrategoHost]] {cons("ToMetaExpr")}
    "|[" FoldingRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}

    QuotedTerm -> Id {cons("FromMetaExpr")}
    
    QuotedTerms -> OutlineRule* {cons("FromMetaExpr")}
    QuotedTerms -> ColorRule*   {cons("FromMetaExpr")}
    QuotedTerms -> FoldingRule* {cons("FromMetaExpr")}

    "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
    "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}

    %% Stratego applications as anti-quotation
    "<" Strategy[[StrategoHost]] ">" Term[[StrategoHost]] -> QuotedTerm {cons("App")}
    StrategyAngle[[StrategoHost]]                         -> QuotedTerm {cons("RootApp"), avoid}
    InitId Term[[StrategoHost]]                           -> QuotedTerm {reject}
    InitId                                                -> QuotedTerm {reject}

