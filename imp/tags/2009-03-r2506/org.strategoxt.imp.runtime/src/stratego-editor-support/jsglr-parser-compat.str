/**
 * Overrides the standard libstratego-sglr SGLR/SGLRI strategies
 * to use JSGR and the Spoofax/IMP imploder.
 */
module jsglr-parser-compat

imports
  libstratego-lib
  jsglr-parser

signature constructors

  FILE : String -> FILE

strategies

  // TODO: Move to JSGLR or separate strategoxt compatibility project?

  /**
   * @type SerializedParseTable -> ParseTable
   */
  open-parse-table = jsglr-open-parsetable

  parse-file(on-open-error, on-parse-error | tbl, start-symbol, path) =
    where(!tbl => ParseTable(internal-tbl))
    ; (<fopen> (<id>, "r") => stream <+ on-open-error; fail)
    ; finally(
        parse-stream(on-parse-error | tbl, start-symbol, path)
      , <fclose> stream
      )

  parse-xtc-file(on-open-error, on-parse-error |tbl, start-symbol, path) =
    where(!tbl => ParseTable(internal-tbl))
    
    ; let open-stream =
            ?FILE(<id>); (<fopen> (<id>, "r") <+ on-open-error)
            <+ ?stdin(); stdin-stream
            
       in open-stream => stream
          ; finally(
              parse-stream(on-parse-error |tbl, start-symbol, path)
            , <fclose> stream
            )
      end
  
  parse-xtc-file-report-errors(|tbl, sort) =
    if is-parse-table-open(|tbl) then
      parse-xtc-file(strsglr-perror, strsglr-report-parse-error | tbl, sort)
    else
      // open the parse table and call recursive
      let parse(|tbl') = parse-xtc-file-report-errors(|tbl', sort)
       in open-parse-table-wrap-report-errors(parse| tbl)
      end
    end
  
  parse-stream(on-parse-error |tbl, start-symbol, path):
    stream -> term
    where
      read-text-from-stream;
      jsglr-parse-string(on-parse-error |tbl, start-symbol, path) => term
  
  parse-stream-pt(on-parse-error |tbl, start-symbol, path):
    stream -> term
    where
      read-text-from-stream;
      jsglr-parse-string-pt(on-parse-error |tbl, start-symbol, path) => term

  parse-string(on-parse-error | tbl, start-symbol, path) =
    jsglr-parse-string(on-parse-error | tbl, start-symbol, path)
  
  parse-string-pt(on-parse-error | tbl, start-symbol, path) =
    jsglr-parse-string-pt(on-parse-error | tbl, start-symbol, path)

strategies

  implode-asfix =
    ?asfix;
    prim("SPI_implode_asfix", asfix)

strategies // Disable position annotation

  asfix-anno-location =
    warn-msg(|"asfix-anno-location not implemented on this platform")
  
  asfix-anno-position-info(|path) =
    warn-msg(|"asfix-anno-position-info not implemented on this platform")

strategies // Defined in libraries

  external is-parse-table-open(|tbl)
  
  external parse-xtc-file(on-open-error, on-parse-error | tbl, start-symbol)
  
  external strsglr-perror(|)
  
  external strsglr-report-parse-error(|)

  external open-parse-table-wrap-report-errors(s : OpenParseTable * a -> b | tbl)
