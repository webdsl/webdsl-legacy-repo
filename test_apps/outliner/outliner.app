application outliner

//generic imports
imports widgets/widgets
imports widgets/tree
imports widgets/masterdetail
imports widgets/popup
imports widgets/tabcontrol
imports widgets/dnd

//application specific imports
imports data
imports documentmanagement
imports toolbar
imports nodeview
imports nodeedit
imports json
imports style

section pages

define page root() {
  var d: Document := null;
  outliner_contents(d)
}

define page outliner(doc: Document) {
  loadDojo()
  outliner_contents(doc)
}

define outliner_contents(doc: Document) {
  collapseUp() {
    block[id:= header, width := "100%"] {
      block[id:= maintitle] { "Outliner" }
      toolbar(doc)
    }
  }

  main(doc)
  
  spacer
  "application generated by WebDSLx"
  
  //a hook for the popup windows
  placeholder popup {}
}

define main(doc: Document) {
  if (doc == null) {
    "(No document loaded)" 
  }
  else {
    tabs[height:="800px"] {
      tab(doc.name) {
        masterdetail() with {
          masterview() {
            documentTree(doc)
          }
          detailview() {
            detailView(doc.root)
          }
        }
      }
      lazytab("Print preview") {
        //todo:
      }
      lazytab("JSON tree") {
        documentoutlinehelper(doc)
      } 
    }
  }
} 

define template documentTree(doc: Document) {
  dojoTree(navigate(documentoutline(doc)), doc.root.id.toString())
    [onselect:=selectHeader(null), ondrop:= ondrop(null,null)]
  
  action selectHeader(id: String) {
    var n: HeaderNode := loadHeaderNode(UUIDFromString(id));
    replace(detailView, detailView(n));
  }
  action ondrop(item: String, target: String) {
    var targetNode: HeaderNode := loadHeaderNode(UUIDFromString(target));
    var itemNode: HeaderNode := loadHeaderNode(UUIDFromString(item));
    itemNode.parent := targetNode;
    itemNode.depth := targetNode.depth + 1; 
    relocate(outliner(doc));
  }
}