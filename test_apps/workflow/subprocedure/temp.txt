application com.example.subprocedure



module templates
section  main template. .



  define template main () {
    div("outersidebar")[]{
      sidebar()[]{
      }
    }
    div("outerbody")[]{
      div("menubar")[]{
        menu()[]{
        }
      },
      body()[]{
      },
      footer()[]{
      }
    }
  }
section  basic page elements. .

  define template sidebar () {
    contextSidebar()[]{
    }
  }

  define template contextSidebar () {
  }

  define template footer () {
    "generated with "
    navigate(url("http://www.webdsl.org"))[]{
      text("WebDSL")[]{
      }
    }
    " and "
    navigate(url("http://www.strategoxt.org"))[]{
      text("Stratego/XT")[]{
      }
    }
  }
section  menus. .

  define template menu () {
  }
section  entity management. .

  define template manageMenu () {
  }

  define page manage () {
    main()[]{
    }
    define local sidebar () {
    }
    define local body () {
    }
  }
layout
template
main()
{
mainbody0: [ sidebar() body() ]
;
}

section  data .

  entity Persoon {
    a3 <> A3ProcedureStatus ( )
    a2 <> A2ProcedureStatus ( )
    a1 <> A1ProcedureStatus ( )
    a <> AProcedureStatus ( )
    repeatUntilProc0 <> RepeatUntilProc0ProcedureStatus ( )
    name :: String ( )
  }



section  pages .

  define page persoon (p : Persoon) {
    dummy()[]{
      main()[]{
      },
      define local contextSidebar () {
        persoonProcedures(p)[]{
        }
      },
      define local body () {
        form()[]{
          group("Details")[]{
            dummy()[]{
              groupitem()[]{
                label("Repeat until proc0: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( repeatUntilProc0ProcedureStatus0 : RepeatUntilProc0ProcedureStatus , Select , p.repeatUntilProc0 )
                  }
                }
              },
              groupitem()[]{
                label("A3: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( a3ProcedureStatus0 : A3ProcedureStatus , Select , p.a3 )
                  }
                }
              },
              groupitem()[]{
                label("A2: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( a2ProcedureStatus0 : A2ProcedureStatus , Select , p.a2 )
                  }
                }
              },
              groupitem()[]{
                label("A1: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( a1ProcedureStatus0 : A1ProcedureStatus , Select , p.a1 )
                  }
                }
              },
              groupitem()[]{
                label("A: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( aProcedureStatus0 : AProcedureStatus , Select , p.a )
                  }
                }
              },
              groupitem()[]{
                label("Repeat until proc0: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( repeatUntilProc0ProcedureStatus1 : RepeatUntilProc0ProcedureStatus , Select , p.repeatUntilProc0 )
                  }
                }
              },
              groupitem()[]{
                label("A3: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( a3ProcedureStatus1 : A3ProcedureStatus , Select , p.a3 )
                  }
                }
              },
              groupitem()[]{
                label("A2: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( a2ProcedureStatus1 : A2ProcedureStatus , Select , p.a2 )
                  }
                }
              },
              groupitem()[]{
                label("A1: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( a1ProcedureStatus1 : A1ProcedureStatus , Select , p.a1 )
                  }
                }
              },
              groupitem()[]{
                label("A: ")[]{
                  block("inputSimpleRefAssociation")[]{
                    select ( aProcedureStatus1 : AProcedureStatus , Select , p.a )
                  }
                }
              },
              groupitem()[]{
                label("Name: ")[]{
                  inputString(p.name)[]{
                  }
                }
              }
            }
          },
          action("Submit", doAction())[]{
          }
        }
      }
    }
  }

  define page home () {
    main()[]{
    }
    define local body () {
      par()[]{
        navigate(startTest())[]{
          "Start test"
        }
      }
      par()[]{
        navigate(allTasks())[]{
          "Tasks"
        }
      }
    }
  }

  define page startTest () {
    init
    {
      var p : Persoon ;
      p := newPersoon();
      p.name := "Ruben";
      p.persist();
      p.a.enable();
    }
    main()[]{
    }
    define local body () {
      par()[]{
        "Test started"
      }
      par()[]{
        navigate(allTasks())[]{
          "Tasks"
        }
      }
    }
  }

  define page allPersoon () {
    for ( p : Persoon where true order by null asc limit 1000 offset 0 ) {
      par()[]{
        navigate(persoon(p))[]{
        }
      }
    }
  }