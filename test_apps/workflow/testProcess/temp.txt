application org.webdsl.testProcess

section  access denied page. .

  function genpagepredicatecombined0 ( ) : Bool
  {
    return genpagepredicate0() && genpagepredicate6();
  }

  function genpagepredicatecombined1 ( ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined2 ( ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined3 ( ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined4 ( s5 : ProcedureStatus ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined5 ( ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined6 ( msg2 : String ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined7 ( msg3 : String ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined8 ( s6 : IfProc0ProcedureStatus ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined9 ( t19 : TestDinges ) : Bool
  {
    return genpagepredicate4(t19) && genpagepredicate6();
  }

  function genpagepredicatecombined10 ( s7 : TestWorkflowProcedureStatus ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined11 ( s8 : Proc1ProcedureStatus ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined12 ( s9 : Proc2ProcedureStatus ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined13 ( t20 : TestDinges ) : Bool
  {
    return genpagepredicate1(t20) && genpagepredicate6();
  }

  function genpagepredicatecombined14 ( t21 : TestDinges ) : Bool
  {
    return genpagepredicate2(t21) && genpagepredicate6();
  }

  function genpagepredicatecombined15 ( t22 : TestDinges ) : Bool
  {
    return genpagepredicate3(t22) && genpagepredicate6();
  }

  function genpagepredicatecombined16 ( ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined17 ( ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined18 ( p4 : PdpMeeting ) : Bool
  {
    return genpagepredicate6() && genpagepredicate7(p4);
  }

  function genpagepredicatecombined19 ( u1 : User ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicatecombined20 ( t23 : TestDinges ) : Bool
  {
    return genpagepredicate6();
  }

  function genpagepredicate0 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate1 ( t : TestDinges ) : Bool
  {
    return true && true && true && true && t.testWorkflow.isEnabled;
  }

  function genpagepredicate2 ( t : TestDinges ) : Bool
  {
    return true && true && true && true && t.proc1.isEnabled;
  }

  function genpagepredicate3 ( t : TestDinges ) : Bool
  {
    return true && true && true && true && t.proc2.isEnabled;
  }

  function genpagepredicate4 ( t : TestDinges ) : Bool
  {
    return true && true && true && true && true && t.ifProc0.isEnabled;
  }

  function genpagepredicate5 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate6 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate0 ( ) : Bool
  {
    return true;
  }

  function gentemplatepredicate0 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate7 ( pdpMeeting : PdpMeeting ) : Bool
  {
    return securityContext.principal = pdpMeeting.employee || securityContext.principal = pdpMeeting.employee.manager;
  }

  function genpagepredicate8 ( t : testDinges ) : Bool
  {
    return true;
  }

  function genactionpredicate1 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate2 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate3 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate4 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate5 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate6 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate7 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate8 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate9 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate10 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate11 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate12 ( genuniquevar0 : TestDinges ) : Bool
  {
    return true && true && true && true && true && genuniquevar0.ifProc0.isEnabled;
  }

  function genactionpredicate13 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate14 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate15 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate16 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate17 ( genuniquevar1 : TestDinges ) : Bool
  {
    return true && true && true && true && genuniquevar1.testWorkflow.isEnabled;
  }

  function genactionpredicate18 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate19 ( genuniquevar2 : TestDinges ) : Bool
  {
    return true && true && true && true && genuniquevar2.proc1.isEnabled;
  }

  function genactionpredicate20 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate21 ( genuniquevar3 : TestDinges ) : Bool
  {
    return true && true && true && true && genuniquevar3.proc2.isEnabled;
  }

  function genactionpredicate22 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate23 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate24 ( genuniquevar4 : PdpMeeting ) : Bool
  {
    return securityContext.principal = genuniquevar4.employee || securityContext.principal = genuniquevar4.employee.manager;
  }

  function genactionpredicate25 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate26 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate27 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate28 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate29 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate30 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate31 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate32 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate33 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate34 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate35 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate36 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate37 ( ) : Bool
  {
    return true;
  }

  function genactionpredicatecombined0 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate7();
  }

  function genactionpredicatecombined1 ( genuniquevar5 : TestDinges ) : Bool
  {
    return genactionpredicate0() && genactionpredicate17(genuniquevar5) && genactionpredicate16();
  }

  function genactionpredicatecombined2 ( genuniquevar6 : TestDinges ) : Bool
  {
    return genactionpredicate0() && genactionpredicate19(genuniquevar6) && genactionpredicate18();
  }

  function genactionpredicatecombined3 ( genuniquevar7 : TestDinges ) : Bool
  {
    return genactionpredicate0() && genactionpredicate21(genuniquevar7) && genactionpredicate20();
  }

  function genactionpredicatecombined4 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate22();
  }

  function genactionpredicatecombined5 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate22();
  }

  define page accessDenied () {
    init
    {
      if ( genpagepredicatecombined0() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title("Access Denied"){
    }
    text("Access Denied: "){
    }
    if ( genpagepredicatecombined16() ) {
      navigate(home()){
        "return to home page"
      }
    }
  }

style

default_

body

{

font-size

:=

100

%

;

line-height

:=

1.125

em

;

}

template

testDingesStatusList

(

)

{

background-color

:=

#

ffffff

;

}

template

testDingesTaskList

(

)

{

background-color

:=

#

ffffff

;

}

template

testDingesProcedures

(

)

{

}

template

testDingesProceduresList

(

)

{

}

template

body

(

)

{

background-color

:=

#

ffffff

;

}

template

footer

(

)

{

background-color

:=

#

ffffff

;

}

template

contextSidebar

(

)

{

background-color

:=

#

ffffff

;

}

template

sidebar

(

)

{

background-color

:=

#

ffffff

;

}

template

top

(

)

{

background-color

:=

#

ffffff

;

}

template

main

(

)

{

background-color

:=

#

ffffff

;

}

description {
  A workflow example for a personal development plan workflow
}

module templates
section  templates .

  function newTestDinges ( ) : TestDinges
  {
    var o : TestDinges := TestDinges{} ;
    o.persist();
    o.ifProc0 := IfProc0ProcedureStatus{};
    o.ifProc0.t := o;
    o.ifProc0.persist();
    o.proc2 := Proc2ProcedureStatus{};
    o.proc2.t := o;
    o.proc2.persist();
    o.proc1 := Proc1ProcedureStatus{};
    o.proc1.t := o;
    o.proc1.persist();
    o.testWorkflow := TestWorkflowProcedureStatus{};
    o.testWorkflow.t := o;
    o.testWorkflow.persist();
    return o;
  }

  entity ProcedureStatus {
    caller -> ProcedureStatus ( )
    returnstate :: Int ( )
    name :: String ( ) := "Procedure status"
    isEnabled :: Bool ( )
    date :: DateTime ( )
    function enable__ProcedureStatus__Int ( c : ProcedureStatus r : Int ) : Void
    {
      this.isEnabled := true;
      this.caller := c;
      this.returnstate := r;
      this.persist();
      this.enabled();
    }
    function next ( state : Int ) : Void
    {
    }
    function processed ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      if ( this.caller != null )
      {
        this.caller.next(this.returnstate);
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
    }
    function disabled ( ) : Void
    {
    }
    function do ( ) : Void
    {
    }
    function done ( ) : Void
    {
    }
    function enable__ ( ) : Void
    {
      this.isEnabled := true;
      this.persist();
      this.enabled();
    }
    function disable ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.disabled();
    }
  }

  define template testDingesProceduresList (testDinges5 : TestDinges) {
    if ( gentemplatepredicate0() ) {
      list(){
        if ( true && testDinges5.proc2.isEnabled && true ) {
          listitem(){
            if ( genpagepredicatecombined15(testDinges5) ) {
              navigate(proc2(testDinges5)){
                text("Proc2"){
                }
              }
            }
          }
        }
        if ( true && testDinges5.proc1.isEnabled && true ) {
          listitem(){
            if ( genpagepredicatecombined14(testDinges5) ) {
              navigate(proc1(testDinges5)){
                text("Proc1"){
                }
              }
            }
          }
        }
        if ( true && testDinges5.testWorkflow.isEnabled && true ) {
          listitem(){
            if ( genpagepredicatecombined13(testDinges5) ) {
              navigate(testWorkflow(testDinges5)){
                text("Test workflow"){
                }
              }
            }
          }
        }
      }
    }
  }

  define template testDingesProcedures (testDinges6 : TestDinges) {
    if ( gentemplatepredicate0() ) {
      testDingesProceduresList(testDinges6){
      }
    }
  }

  define page allTasks () {
    init
    {
      if ( genpagepredicatecombined1() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title(){
      "All tasks"
    }
    main(){
    }
    define local body () {
      header(){
        "All tasks"
      }
      section(){
        testDingesTaskList(){
        }
      }
    }
  }

  function testDingesHasProcedures ( testDinges : TestDinges ) : Bool
  {
    return true && testDinges.proc2.isEnabled && true || true && testDinges.proc1.isEnabled && true || true && testDinges.testWorkflow.isEnabled && true || false;
  }

  define template testDingesTaskList () {
    if ( gentemplatepredicate0() ) {
      header(){
        "Test dinges"
      }
      list(){
        for ( testDinges7 : TestDinges where true order by null asc limit 1000 offset 0 ) {
          if ( testDingesHasProcedures(testDinges7) ) {
            listitem(){
              if ( genpagepredicatecombined20(testDinges7) ) {
                navigate(testDinges(testDinges7)){
                  text(testDinges7.name){
                  }
                }
              }
              testDingesProceduresList(testDinges7){
              }
            }
          }
        }
      }
    }
  }

  define page testDingesTasks () {
    init
    {
      if ( genpagepredicatecombined2() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title(){
      "Test dinges"
    }
    main(){
    }
    define local body () {
      header(){
        "Tasks"
      }
      testDingesTaskList(){
      }
    }
  }

  define template testDingesStatusList () {
    if ( gentemplatepredicate0() ) {
      header(){
        "Test dinges"
      }
      list(){
        for ( testDinges8 : TestDinges where true order by null asc limit 1000 offset 0 ) {
          listitem(){
            if ( genpagepredicatecombined20(testDinges8) ) {
              navigate(testDinges(testDinges8)){
                text(testDinges8.name){
                }
              }
            }
            list(){
              if ( testDinges8.proc2.isEnabled && true ) {
                if ( true ) {
                  listitem(){
                    if ( genpagepredicatecombined15(testDinges8) ) {
                      navigate(proc2(testDinges8)){
                        text("Proc2"){
                        }
                        ""
                      }
                    }
                  }
                }
                if ( ! true ) {
                  listitem(){
                    text("Proc2"){
                    }
                  }
                }
              }
              if ( testDinges8.proc1.isEnabled && true ) {
                if ( true ) {
                  listitem(){
                    if ( genpagepredicatecombined14(testDinges8) ) {
                      navigate(proc1(testDinges8)){
                        text("Proc1"){
                        }
                        ""
                      }
                    }
                  }
                }
                if ( ! true ) {
                  listitem(){
                    text("Proc1"){
                    }
                  }
                }
              }
              if ( testDinges8.testWorkflow.isEnabled && true ) {
                if ( true ) {
                  listitem(){
                    if ( genpagepredicatecombined13(testDinges8) ) {
                      navigate(testWorkflow(testDinges8)){
                        text("Test workflow"){
                        }
                        ""
                      }
                    }
                  }
                }
                if ( ! true ) {
                  listitem(){
                    text("Test workflow"){
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  define page testDingesStatus () {
    init
    {
      if ( genpagepredicatecombined3() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title(){
      "Test dinges"
    }
    main(){
    }
    define local body () {
      section(){
        header(){
          "Status"
        }
        section(){
          testDingesStatusList(){
          }
        }
      }
    }
  }

  define page procedureStatus (s5 : ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined4(s5) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(s5.name){
          }
        }
        table(){
          dummy(){
            row(){
              "Name: "
              text(s5.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s5.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s5.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s5.caller) ) {
                navigate(procedureStatus(s5.caller)){
                  text(s5.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s5.returnstate){
              }
            }
            row(){
              "Name: "
              text(s5.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s5.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s5.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s5.caller) ) {
                navigate(procedureStatus(s5.caller)){
                  text(s5.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s5.returnstate){
              }
            }
          }
        }
      }
    }
  }

  define template main () {
    if ( gentemplatepredicate0() ) {
      block("top"){
        top(){
        }
      }
      block("body"){
        block("left_innerbody"){
          sidebar(){
          }
        }
        block("main_innerbody"){
          body(){
          }
        }
      }
      block("footer"){
        footer(){
        }
      }
    }
  }

  define template top () {
    if ( gentemplatepredicate0() ) {
      block("header"){
      }
      block("menubar"){
        menubar("horizontal"){
          menu(){
            menuheader(){
              if ( genpagepredicatecombined16() ) {
                navigate(home()){
                  "Home"
                }
              }
            }
          }
          menu(){
            menuheader(){
              "User"
            }
            menuitem(){
              if ( genpagepredicatecombined5() ) {
                navigate(signin()){
                  "Sign in"
                }
              }
            }
            menuitem(){
              if ( genpagepredicatecombined1() ) {
                navigate(allTasks()){
                  "Tasks"
                }
              }
            }
          }
        }
      }
    }
  }
section  basic page elements. .

  define template sidebar () {
    if ( gentemplatepredicate0() ) {
      contextSidebar(){
      }
    }
  }

  define template contextSidebar () {
    if ( gentemplatepredicate0() ) {
    }
  }

  define template footer () {
    if ( gentemplatepredicate0() ) {
      "generated with "
      navigate(url("http://www.webdsl.org")){
        text("WebDSL"){
        }
      }
      " and "
      navigate(url("http://www.strategoxt.org")){
        text("Stratego/XT"){
        }
      }
    }
  }

module data
section  data model .

  var aManager : User := User{username := "manager" name := "Joe Manager" password := "secret"} ;

  var aUser : User := User{username := "user" name := "Joe User" password := "secret" manager := aManager} ;

  var test1 : TestDinges := TestDinges{name := "onderste"} ;

  var test2 : TestDinges := TestDinges{name := "middelste" child := test1} ;

  var test3 : TestDinges := TestDinges{name := "bovenste" child := test2} ;

  entity User {
    username :: String ( )
    name :: String ( )
    password :: Secret ( )
    manager -> User ( )
  }

  entity PdpMeeting {
    employee -> User ( )
    name :: String ( ) := this.employee.name + " PDP Form"
    employeePreparation :: Text ( )
    managerPreparation :: Text ( )
    report :: Text ( )
  }

  entity TestDinges {
    proc2 <> Proc2ProcedureStatus ( )
    proc1 <> Proc1ProcedureStatus ( )
    testWorkflow <> TestWorkflowProcedureStatus ( )
    ifProc0 <> IfProc0ProcedureStatus ( )
    name :: String ( )
    commentz :: String ( )
    proc1 :: String ( )
    proc2 :: String ( )
    child -> TestDinges ( )
  }

module ac
access control rules
  anonymous
  rule page createPdpMeeting (  ) {
    true
    rule action * ( * ) {
      true
    }
  }
  rule page * ( * ) {
    true
    rule action * ( * ) {
      true
    }
  }
  rule action * ( * ) {
    true
  }
  rule template * ( * ) {
    true
    rule action * ( * ) {
      true
    }
  }
section  pages .

  session securityContext {
    principal -> User ( )
    loggedIn :: Bool ( )
  }

  function loggedIn ( ) : Bool
  {
    return securityContext.principal != null;
  }

  define page signin () {
    init
    {
      if ( genpagepredicatecombined5() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main(){
    }
    title(){
      "Log in"
    }
    define local body () {
      var username2 : String ;
      var password2 : Secret ;
      form(){
        table(){
          row(){
            "Username: "
            inputString(username2){
            }
          }
          row(){
            "Password: "
            inputSecret(password2){
            }
          }
          row(){
            if ( genactionpredicatecombined0() ) {
              action("Sign in", dosignin()){
              }
            }
            ""
          }
        }
        action dosignin ( )
        {
          if ( genactionpredicatecombined0() )
          {
            for ( us : User where us.username = username2 order by null asc limit 1000 offset 0 )
            {
              if ( us.password.check(password2) )
              {
                securityContext.principal := us;
                securityContext.loggedIn := true;
                return allTasks();
              }
              else
              {
              }
            }
            securityContext.loggedIn := false;
            return error("Wrong combination of username and password");
          }
          else
          {
            return accessDenied();
          }
        }
      }
    }
  }

  define page error (msg2 : String) {
    init
    {
      if ( genpagepredicatecombined6(msg2) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main(){
    }
    title(){
      "Error"
    }
    define local body () {
      header(){
        "Error"
      }
      text(msg2){
      }
    }
  }

  define page message (msg3 : String) {
    init
    {
      if ( genpagepredicatecombined7(msg3) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main(){
    }
    title(){
      "Message"
    }
    define local body () {
      header(){
        "Message"
      }
      text(msg3){
      }
    }
  }

section  procedures .

  entity IfProc0ProcedureStatus : ProcedureStatus {
    t -> TestDinges ( )
    function enableIf ( ) : Void
    {
      this.next(0);
    }
    function disableIf ( ) : Void
    {
      this.t.child.testWorkflow.disable();
    }
    function next ( state : Int ) : Void
    {
      if ( state = 0 )
      {
        this.t.child.testWorkflow.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state = 1 )
      {
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
      if ( this.t.child != null )
      {
        this.enableIf();
      }
      else
      {
        this.processed();
      }
      this.do();
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
      disableIf();
    }
  }

  define page ifProc0ProcedureStatus (s6 : IfProc0ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined8(s6) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(s6.name){
          }
        }
        table(){
          dummy(){
            row(){
              "T: "
              if ( genpagepredicatecombined20(s6.t) ) {
                navigate(testDinges(s6.t)){
                  text(s6.t.name){
                  }
                }
              }
            }
            row(){
              "T: "
              if ( genpagepredicatecombined20(s6.t) ) {
                navigate(testDinges(s6.t)){
                  text(s6.t.name){
                  }
                }
              }
            }
            row(){
              "Name: "
              text(s6.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s6.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s6.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s6.caller) ) {
                navigate(procedureStatus(s6.caller)){
                  text(s6.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s6.returnstate){
              }
            }
            row(){
              "Name: "
              text(s6.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s6.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s6.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s6.caller) ) {
                navigate(procedureStatus(s6.caller)){
                  text(s6.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s6.returnstate){
              }
            }
          }
        }
      }
    }
  }

  define page ifProc0 (t19 : TestDinges) {
    init
    {
      if ( genpagepredicatecombined9(t19) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  entity TestWorkflowProcedureStatus : ProcedureStatus {
    t -> TestDinges ( )
    function next ( state : Int ) : Void
    {
      if ( state = 0 )
      {
        this.t.proc1.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state = 1 )
      {
        this.t.ifProc0.enable__ProcedureStatus__Int(this as ProcedureStatus, 2);
      }
      else
      {
      }
      if ( state = 2 )
      {
        this.t.proc2.enable__ProcedureStatus__Int(this as ProcedureStatus, 3);
      }
      else
      {
      }
      if ( state = 3 )
      {
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page testWorkflowProcedureStatus (s7 : TestWorkflowProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined10(s7) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(s7.name){
          }
        }
        table(){
          dummy(){
            row(){
              "T: "
              if ( genpagepredicatecombined20(s7.t) ) {
                navigate(testDinges(s7.t)){
                  text(s7.t.name){
                  }
                }
              }
            }
            row(){
              "T: "
              if ( genpagepredicatecombined20(s7.t) ) {
                navigate(testDinges(s7.t)){
                  text(s7.t.name){
                  }
                }
              }
            }
            row(){
              "Name: "
              text(s7.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s7.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s7.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s7.caller) ) {
                navigate(procedureStatus(s7.caller)){
                  text(s7.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s7.returnstate){
              }
            }
            row(){
              "Name: "
              text(s7.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s7.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s7.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s7.caller) ) {
                navigate(procedureStatus(s7.caller)){
                  text(s7.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s7.returnstate){
              }
            }
          }
        }
      }
    }
  }

  entity Proc1ProcedureStatus : ProcedureStatus {
    t -> TestDinges ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page proc1ProcedureStatus (s8 : Proc1ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined11(s8) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(s8.name){
          }
        }
        table(){
          dummy(){
            row(){
              "T: "
              if ( genpagepredicatecombined20(s8.t) ) {
                navigate(testDinges(s8.t)){
                  text(s8.t.name){
                  }
                }
              }
            }
            row(){
              "T: "
              if ( genpagepredicatecombined20(s8.t) ) {
                navigate(testDinges(s8.t)){
                  text(s8.t.name){
                  }
                }
              }
            }
            row(){
              "Name: "
              text(s8.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s8.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s8.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s8.caller) ) {
                navigate(procedureStatus(s8.caller)){
                  text(s8.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s8.returnstate){
              }
            }
            row(){
              "Name: "
              text(s8.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s8.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s8.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s8.caller) ) {
                navigate(procedureStatus(s8.caller)){
                  text(s8.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s8.returnstate){
              }
            }
          }
        }
      }
    }
  }

  entity Proc2ProcedureStatus : ProcedureStatus {
    t -> TestDinges ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page proc2ProcedureStatus (s9 : Proc2ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined12(s9) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(s9.name){
          }
        }
        table(){
          dummy(){
            row(){
              "T: "
              if ( genpagepredicatecombined20(s9.t) ) {
                navigate(testDinges(s9.t)){
                  text(s9.t.name){
                  }
                }
              }
            }
            row(){
              "T: "
              if ( genpagepredicatecombined20(s9.t) ) {
                navigate(testDinges(s9.t)){
                  text(s9.t.name){
                  }
                }
              }
            }
            row(){
              "Name: "
              text(s9.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s9.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s9.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s9.caller) ) {
                navigate(procedureStatus(s9.caller)){
                  text(s9.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s9.returnstate){
              }
            }
            row(){
              "Name: "
              text(s9.name){
              }
            }
            row(){
              "Is enabled: "
              outputBool(s9.isEnabled){
              }
            }
            row(){
              "Date: "
              outputDateTime(s9.date){
              }
            }
            row(){
              "Caller: "
              if ( genpagepredicatecombined4(s9.caller) ) {
                navigate(procedureStatus(s9.caller)){
                  text(s9.caller.name){
                  }
                }
              }
            }
            row(){
              "Returnstate: "
              outputInt(s9.returnstate){
              }
            }
          }
        }
      }
    }
  }

  define page testWorkflow (t20 : TestDinges) {
    init
    {
      if ( genpagepredicatecombined13(t20) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title(){
      "Initialize workflow"
    }
    dummy(){
      main(){
      }
      define local contextSidebar () {
        testDingesProcedures(t20){
        }
      }
      define local body () {
        header(){
          text("Current page"){
          }
          " "
          if ( genpagepredicatecombined20(t20) ) {
            navigate(testDinges(t20)){
              text(t20.name){
              }
            }
          }
        }
        form(){
          table(){
            dummy(){
              row(){
                "Name: "
                inputString(t20.name){
                }
              }
              row(){
                "Commentz: "
                inputString(t20.commentz){
                }
              }
            }
          }
          dummy(){
            if ( genactionpredicatecombined1(t20) ) {
              action("Submit", doAction()){
              }
            }
            action doAction ( )
            {
              if ( genactionpredicatecombined1(t20) )
              {
                t20.persist();
                t20.testWorkflow.do();
                return testDinges(t20);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

  define page proc1 (t21 : TestDinges) {
    init
    {
      if ( genpagepredicatecombined14(t21) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title(){
      "Fill proc1 for "
      text(t21.name){
      }
    }
    dummy(){
      main(){
      }
      define local contextSidebar () {
        testDingesProcedures(t21){
        }
      }
      define local body () {
        header(){
          text("Current page"){
          }
          " "
          if ( genpagepredicatecombined20(t21) ) {
            navigate(testDinges(t21)){
              text(t21.name){
              }
            }
          }
        }
        form(){
          table(){
            dummy(){
              row(){
                "Proc1: "
                div("inputSimpleRefAssociation"){
                  select ( proc1ProcedureStatus03 : Proc1ProcedureStatus , Select , t21.proc1 )
                }
              }
            }
          }
          dummy(){
            if ( genactionpredicatecombined2(t21) ) {
              action("Submit", doAction()){
              }
            }
            action doAction ( )
            {
              if ( genactionpredicatecombined2(t21) )
              {
                t21.persist();
                t21.proc1.do();
                return testDinges(t21);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

  define page proc2 (t22 : TestDinges) {
    init
    {
      if ( genpagepredicatecombined15(t22) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title(){
      "Fill proc1 for "
      text(t22.name){
      }
    }
    dummy(){
      main(){
      }
      define local contextSidebar () {
        testDingesProcedures(t22){
        }
      }
      define local body () {
        header(){
          text("Current page"){
          }
          " "
          if ( genpagepredicatecombined20(t22) ) {
            navigate(testDinges(t22)){
              text(t22.name){
              }
            }
          }
        }
        form(){
          table(){
            dummy(){
              row(){
                "Proc1: "
                div("inputSimpleRefAssociation"){
                  select ( proc1ProcedureStatus13 : Proc1ProcedureStatus , Select , t22.proc1 )
                }
              }
            }
          }
          dummy(){
            if ( genactionpredicatecombined3(t22) ) {
              action("Submit", doAction()){
              }
            }
            action doAction ( )
            {
              if ( genactionpredicatecombined3(t22) )
              {
                t22.persist();
                t22.proc2.do();
                return testDinges(t22);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

section  pages .

  define template body () {
    if ( gentemplatepredicate0() ) {
    }
  }

  define page home () {
    init
    {
      if ( genpagepredicatecombined16() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main(){
    }
    define local body () {
      var employee2 : User ;
      section(){
        form(){
          header(){
            "Quick start PDP Meeting for employee"
          }
          if ( genactionpredicatecombined4() ) {
            action("Quick start", quickStart()){
            }
          }
          action quickStart ( )
          {
            if ( genactionpredicatecombined4() )
            {
              test3 := newTestDinges();
              test3.testWorkflow.enable__();
              return message("Test gestart");
            }
            else
            {
              return accessDenied();
            }
          }
        }
      }
      section(){
        form(){
          header(){
            "Organize PDP Meeting"
          }
          "For: "
          div("inputSimpleRefAssociation"){
            select ( user01 : User , Select , employee2 )
          }
          if ( genactionpredicatecombined5() ) {
            action("Organize", organize()){
            }
          }
          action organize ( )
          {
            if ( genactionpredicatecombined5() )
            {
              return message("Done!");
            }
            else
            {
              return accessDenied();
            }
          }
        }
      }
    }
  }

  define page allMeetings () {
    init
    {
      if ( genpagepredicatecombined17() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main(){
    }
    define local body () {
      for ( p3 : PdpMeeting where true order by null asc limit 1000 offset 0 ) {
        text(p3.name){
        }
        text(" "){
        }
      }
    }
  }

section  pages .

  define page pdpMeeting (p4 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined18(p4) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(p4.name){
          }
        }
        table(){
          dummy(){
            row(){
              "Employee: "
              if ( genpagepredicatecombined19(p4.employee) ) {
                navigate(user(p4.employee)){
                  text(p4.employee.name){
                  }
                }
              }
            }
            row(){
              "Name: "
              text(p4.name){
              }
            }
            row(){
              "Employee preparation: "
              outputText(p4.employeePreparation){
              }
            }
            row(){
              "Manager preparation: "
              outputText(p4.managerPreparation){
              }
            }
            row(){
              "Report: "
              outputText(p4.report){
              }
            }
          }
        }
      }
      define local contextSidebar () {
        pdpMeetingProcedures(p4){
        }
      }
    }
  }

  define page user (u1 : User) {
    init
    {
      if ( genpagepredicatecombined19(u1) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(u1.name){
          }
        }
        table(){
          dummy(){
            row(){
              "Username: "
              text(u1.username){
              }
            }
            row(){
              "Name: "
              text(u1.name){
              }
            }
            row(){
              "Password: "
              outputSecret(u1.password){
              }
            }
            row(){
              "Manager: "
              if ( genpagepredicatecombined19(u1.manager) ) {
                navigate(user(u1.manager)){
                  text(u1.manager.name){
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  define page testDinges (t23 : TestDinges) {
    init
    {
      if ( genpagepredicatecombined20(t23) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy(){
      main(){
      }
      define local body () {
        header(){
          text(t23.name){
          }
        }
        table(){
          dummy(){
            row(){
              "Name: "
              text(t23.name){
              }
            }
            row(){
              "Commentz: "
              text(t23.commentz){
              }
            }
            row(){
              "Child: "
              if ( genpagepredicatecombined20(t23.child) ) {
                navigate(testDinges(t23.child)){
                  text(t23.child.name){
                  }
                }
              }
            }
          }
        }
      }
      define local contextSidebar () {
        testDingesProcedures(t23){
        }
      }
    }
  }