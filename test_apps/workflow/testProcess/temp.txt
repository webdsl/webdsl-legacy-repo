application org.webdsl.testProcess

section  access denied page. .

  function genpagepredicatecombined0 ( ) : Bool
  {
    return genpagepredicate0() && genpagepredicate14();
  }

  function genpagepredicatecombined1 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined2 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined3 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined4 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined5 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined6 ( s13 : ProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined7 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined8 ( msg2 : String ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined9 ( msg3 : String ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined10 ( s14 : XorProc0ProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined11 ( p59 : PdpMeeting ) : Bool
  {
    return genpagepredicate12(p59) && genpagepredicate14();
  }

  function genpagepredicatecombined12 ( s15 : RepeatUntilProc0ProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined13 ( p60 : PdpMeeting ) : Bool
  {
    return genpagepredicate11(p60) && genpagepredicate14();
  }

  function genpagepredicatecombined14 ( s16 : PdpWorkflowProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined15 ( s17 : EmployeeFillInFormProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined16 ( s18 : ManagerFillInFormProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined17 ( s19 : WriteReportProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined18 ( s20 : FinalizeReportProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined19 ( s21 : ApproveReportProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined20 ( s22 : IfProc0ProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined21 ( t19 : TestRecursive ) : Bool
  {
    return genpagepredicate10(t19) && genpagepredicate14();
  }

  function genpagepredicatecombined22 ( s23 : TestRecursiveWorkflowProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined23 ( s24 : Proc1ProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined24 ( s25 : Proc2ProcedureStatus ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined25 ( p61 : PdpMeeting ) : Bool
  {
    return genpagepredicate1(p61) && genpagepredicate14();
  }

  function genpagepredicatecombined26 ( p62 : PdpMeeting ) : Bool
  {
    return genpagepredicate2(p62) && genpagepredicate14();
  }

  function genpagepredicatecombined27 ( p63 : PdpMeeting ) : Bool
  {
    return genpagepredicate3(p63) && genpagepredicate14();
  }

  function genpagepredicatecombined28 ( p64 : PdpMeeting ) : Bool
  {
    return genpagepredicate4(p64) && genpagepredicate14();
  }

  function genpagepredicatecombined29 ( p65 : PdpMeeting ) : Bool
  {
    return genpagepredicate5(p65) && genpagepredicate14();
  }

  function genpagepredicatecombined30 ( p66 : PdpMeeting ) : Bool
  {
    return genpagepredicate6(p66) && genpagepredicate14();
  }

  function genpagepredicatecombined31 ( t20 : TestRecursive ) : Bool
  {
    return genpagepredicate7(t20) && genpagepredicate14();
  }

  function genpagepredicatecombined32 ( t21 : TestRecursive ) : Bool
  {
    return genpagepredicate8(t21) && genpagepredicate14();
  }

  function genpagepredicatecombined33 ( t22 : TestRecursive ) : Bool
  {
    return genpagepredicate9(t22) && genpagepredicate14();
  }

  function genpagepredicatecombined34 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined35 ( ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined36 ( p70 : PdpMeeting ) : Bool
  {
    return genpagepredicate14() && genpagepredicate15(p70);
  }

  function genpagepredicatecombined37 ( u1 : User ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicatecombined38 ( t23 : TestRecursive ) : Bool
  {
    return genpagepredicate14();
  }

  function genpagepredicate0 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate1 ( p : PdpMeeting ) : Bool
  {
    return p != null && p.pdpWorkflow != null && true && p != null && p.pdpWorkflow != null && true && p != null && p.pdpWorkflow != null && true && p != null && p.pdpWorkflow != null && p.pdpWorkflow.isEnabled;
  }

  function genpagepredicate2 ( p : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && p != null && p.employeeFillInForm != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employeeFillInForm != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employeeFillInForm != null && securityContext != null && securityContext.loggedIn && p != null && securityContext.principal == p.employee && p != null && p.employeeFillInForm != null && true && p != null && p.employeeFillInForm != null && p.employeeFillInForm.isEnabled;
  }

  function genpagepredicate3 ( p : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.managerFillInForm != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.managerFillInForm != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.managerFillInForm != null && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && securityContext.principal == p.employee.manager && p != null && p.managerFillInForm != null && true && p != null && p.managerFillInForm != null && p.managerFillInForm.isEnabled;
  }

  function genpagepredicate4 ( p : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.writeReport != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.writeReport != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.writeReport != null && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && securityContext.principal == p.employee.manager && p != null && p.writeReport != null && true && p != null && p.writeReport != null && p.writeReport.isEnabled;
  }

  function genpagepredicate5 ( p : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.finalizeReport != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.finalizeReport != null && true && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && p.finalizeReport != null && securityContext != null && securityContext.loggedIn && p != null && p.employee != null && securityContext.principal == p.employee.manager && p != null && p.finalizeReport != null && p.finalizeReport.isEnabled;
  }

  function genpagepredicate6 ( p : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && p != null && p.approveReport != null && true && securityContext != null && securityContext.loggedIn && p != null && p.approveReport != null && true && securityContext != null && securityContext.loggedIn && p != null && p.approveReport != null && securityContext != null && securityContext.loggedIn && p != null && securityContext.principal == p.employee && p != null && p.approveReport != null && p.approveReport.isEnabled;
  }

  function genpagepredicate7 ( t : TestRecursive ) : Bool
  {
    return t != null && t.testRecursiveWorkflow != null && true && t != null && t.testRecursiveWorkflow != null && true && t != null && t.testRecursiveWorkflow != null && true && t != null && t.testRecursiveWorkflow != null && true && t != null && t.testRecursiveWorkflow != null && t.testRecursiveWorkflow.isEnabled;
  }

  function genpagepredicate8 ( t : TestRecursive ) : Bool
  {
    return t != null && t.proc1 != null && true && t != null && t.proc1 != null && true && t != null && t.proc1 != null && true && t != null && t.proc1 != null && true && t != null && t.proc1 != null && t.proc1.isEnabled;
  }

  function genpagepredicate9 ( t : TestRecursive ) : Bool
  {
    return t != null && t.proc2 != null && true && t != null && t.proc2 != null && true && t != null && t.proc2 != null && true && t != null && t.proc2 != null && true && t != null && t.proc2 != null && t.proc2.isEnabled;
  }

  function genpagepredicate10 ( t : TestRecursive ) : Bool
  {
    return t != null && t.ifProc0 != null && true && t != null && t.ifProc0 != null && true && t != null && t.ifProc0 != null && true && t != null && t.ifProc0 != null && true && t != null && t.ifProc0 != null && true && t != null && t.ifProc0 != null && t.ifProc0.isEnabled;
  }

  function genpagepredicate11 ( p : PdpMeeting ) : Bool
  {
    return p != null && p.repeatUntilProc0 != null && true && p != null && p.repeatUntilProc0 != null && true && p != null && p.repeatUntilProc0 != null && true && p != null && p.repeatUntilProc0 != null && true && p != null && p.repeatUntilProc0 != null && true && p != null && p.repeatUntilProc0 != null && p.repeatUntilProc0.isEnabled;
  }

  function genpagepredicate12 ( p : PdpMeeting ) : Bool
  {
    return p != null && p.xorProc0 != null && true && p != null && p.xorProc0 != null && true && p != null && p.xorProc0 != null && true && p != null && p.xorProc0 != null && true && p != null && p.xorProc0 != null && true && p != null && p.xorProc0 != null && p.xorProc0.isEnabled;
  }

  function genpagepredicate13 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate14 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate0 ( ) : Bool
  {
    return true;
  }

  function gentemplatepredicate0 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate15 ( pdpMeeting : PdpMeeting ) : Bool
  {
    return securityContext != null && pdpMeeting != null && securityContext.loggedIn && pdpMeeting.employee != null && securityContext != null && securityContext.loggedIn && pdpMeeting != null && securityContext.principal == pdpMeeting.employee || securityContext != null && securityContext.loggedIn && pdpMeeting != null && pdpMeeting.employee != null && securityContext.principal == pdpMeeting.employee.manager;
  }

  function genpagepredicate16 ( t : testRecursive ) : Bool
  {
    return true;
  }

  function genactionpredicate1 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate2 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate3 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate4 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate5 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate6 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate7 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate8 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate9 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate10 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate11 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate12 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate13 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate14 ( genuniquevar0 : PdpMeeting ) : Bool
  {
    return genuniquevar0 != null && genuniquevar0.xorProc0 != null && true && genuniquevar0 != null && genuniquevar0.xorProc0 != null && true && genuniquevar0 != null && genuniquevar0.xorProc0 != null && true && genuniquevar0 != null && genuniquevar0.xorProc0 != null && true && genuniquevar0 != null && genuniquevar0.xorProc0 != null && true && genuniquevar0 != null && genuniquevar0.xorProc0 != null && genuniquevar0.xorProc0.isEnabled;
  }

  function genactionpredicate15 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate16 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate17 ( genuniquevar1 : PdpMeeting ) : Bool
  {
    return genuniquevar1 != null && genuniquevar1.repeatUntilProc0 != null && true && genuniquevar1 != null && genuniquevar1.repeatUntilProc0 != null && true && genuniquevar1 != null && genuniquevar1.repeatUntilProc0 != null && true && genuniquevar1 != null && genuniquevar1.repeatUntilProc0 != null && true && genuniquevar1 != null && genuniquevar1.repeatUntilProc0 != null && true && genuniquevar1 != null && genuniquevar1.repeatUntilProc0 != null && genuniquevar1.repeatUntilProc0.isEnabled;
  }

  function genactionpredicate18 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate19 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate20 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate21 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate22 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate23 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate24 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate25 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate26 ( genuniquevar2 : TestRecursive ) : Bool
  {
    return genuniquevar2 != null && genuniquevar2.ifProc0 != null && true && genuniquevar2 != null && genuniquevar2.ifProc0 != null && true && genuniquevar2 != null && genuniquevar2.ifProc0 != null && true && genuniquevar2 != null && genuniquevar2.ifProc0 != null && true && genuniquevar2 != null && genuniquevar2.ifProc0 != null && true && genuniquevar2 != null && genuniquevar2.ifProc0 != null && genuniquevar2.ifProc0.isEnabled;
  }

  function genactionpredicate27 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate28 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate29 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate30 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate31 ( genuniquevar3 : PdpMeeting ) : Bool
  {
    return genuniquevar3 != null && genuniquevar3.pdpWorkflow != null && true && genuniquevar3 != null && genuniquevar3.pdpWorkflow != null && true && genuniquevar3 != null && genuniquevar3.pdpWorkflow != null && true && genuniquevar3 != null && genuniquevar3.pdpWorkflow != null && genuniquevar3.pdpWorkflow.isEnabled;
  }

  function genactionpredicate32 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate33 ( genuniquevar4 : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && genuniquevar4 != null && genuniquevar4.employeeFillInForm != null && true && securityContext != null && securityContext.loggedIn && genuniquevar4 != null && genuniquevar4.employeeFillInForm != null && true && securityContext != null && securityContext.loggedIn && genuniquevar4 != null && genuniquevar4.employeeFillInForm != null && securityContext != null && securityContext.loggedIn && genuniquevar4 != null && securityContext.principal == genuniquevar4.employee && genuniquevar4 != null && genuniquevar4.employeeFillInForm != null && true && genuniquevar4 != null && genuniquevar4.employeeFillInForm != null && genuniquevar4.employeeFillInForm.isEnabled;
  }

  function genactionpredicate34 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate35 ( genuniquevar5 : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && genuniquevar5 != null && genuniquevar5.employee != null && genuniquevar5.managerFillInForm != null && true && securityContext != null && securityContext.loggedIn && genuniquevar5 != null && genuniquevar5.employee != null && genuniquevar5.managerFillInForm != null && true && securityContext != null && securityContext.loggedIn && genuniquevar5 != null && genuniquevar5.employee != null && genuniquevar5.managerFillInForm != null && securityContext != null && securityContext.loggedIn && genuniquevar5 != null && genuniquevar5.employee != null && securityContext.principal == genuniquevar5.employee.manager && genuniquevar5 != null && genuniquevar5.managerFillInForm != null && true && genuniquevar5 != null && genuniquevar5.managerFillInForm != null && genuniquevar5.managerFillInForm.isEnabled;
  }

  function genactionpredicate36 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate37 ( genuniquevar6 : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && genuniquevar6 != null && genuniquevar6.employee != null && genuniquevar6.writeReport != null && true && securityContext != null && securityContext.loggedIn && genuniquevar6 != null && genuniquevar6.employee != null && genuniquevar6.writeReport != null && true && securityContext != null && securityContext.loggedIn && genuniquevar6 != null && genuniquevar6.employee != null && genuniquevar6.writeReport != null && securityContext != null && securityContext.loggedIn && genuniquevar6 != null && genuniquevar6.employee != null && securityContext.principal == genuniquevar6.employee.manager && genuniquevar6 != null && genuniquevar6.writeReport != null && true && genuniquevar6 != null && genuniquevar6.writeReport != null && genuniquevar6.writeReport.isEnabled;
  }

  function genactionpredicate38 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate39 ( genuniquevar7 : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && genuniquevar7 != null && genuniquevar7.employee != null && genuniquevar7.finalizeReport != null && true && securityContext != null && securityContext.loggedIn && genuniquevar7 != null && genuniquevar7.employee != null && genuniquevar7.finalizeReport != null && true && securityContext != null && securityContext.loggedIn && genuniquevar7 != null && genuniquevar7.employee != null && genuniquevar7.finalizeReport != null && securityContext != null && securityContext.loggedIn && genuniquevar7 != null && genuniquevar7.employee != null && securityContext.principal == genuniquevar7.employee.manager && genuniquevar7 != null && genuniquevar7.finalizeReport != null && genuniquevar7.finalizeReport.isEnabled;
  }

  function genactionpredicate40 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate41 ( genuniquevar8 : PdpMeeting ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && genuniquevar8 != null && genuniquevar8.approveReport != null && true && securityContext != null && securityContext.loggedIn && genuniquevar8 != null && genuniquevar8.approveReport != null && true && securityContext != null && securityContext.loggedIn && genuniquevar8 != null && genuniquevar8.approveReport != null && securityContext != null && securityContext.loggedIn && genuniquevar8 != null && securityContext.principal == genuniquevar8.employee && genuniquevar8 != null && genuniquevar8.approveReport != null && genuniquevar8.approveReport.isEnabled;
  }

  function genactionpredicate42 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate43 ( genuniquevar9 : TestRecursive ) : Bool
  {
    return genuniquevar9 != null && genuniquevar9.testRecursiveWorkflow != null && true && genuniquevar9 != null && genuniquevar9.testRecursiveWorkflow != null && true && genuniquevar9 != null && genuniquevar9.testRecursiveWorkflow != null && true && genuniquevar9 != null && genuniquevar9.testRecursiveWorkflow != null && true && genuniquevar9 != null && genuniquevar9.testRecursiveWorkflow != null && genuniquevar9.testRecursiveWorkflow.isEnabled;
  }

  function genactionpredicate44 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate45 ( genuniquevar11 : TestRecursive ) : Bool
  {
    return genuniquevar11 != null && genuniquevar11.proc1 != null && true && genuniquevar11 != null && genuniquevar11.proc1 != null && true && genuniquevar11 != null && genuniquevar11.proc1 != null && true && genuniquevar11 != null && genuniquevar11.proc1 != null && true && genuniquevar11 != null && genuniquevar11.proc1 != null && genuniquevar11.proc1.isEnabled;
  }

  function genactionpredicate46 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate47 ( genuniquevar12 : TestRecursive ) : Bool
  {
    return genuniquevar12 != null && genuniquevar12.proc2 != null && true && genuniquevar12 != null && genuniquevar12.proc2 != null && true && genuniquevar12 != null && genuniquevar12.proc2 != null && true && genuniquevar12 != null && genuniquevar12.proc2 != null && true && genuniquevar12 != null && genuniquevar12.proc2 != null && genuniquevar12.proc2.isEnabled;
  }

  function genactionpredicate48 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate49 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate50 ( genuniquevar13 : PdpMeeting ) : Bool
  {
    return securityContext != null && genuniquevar13 != null && securityContext.loggedIn && genuniquevar13.employee != null && securityContext != null && securityContext.loggedIn && genuniquevar13 != null && securityContext.principal == genuniquevar13.employee || securityContext != null && securityContext.loggedIn && genuniquevar13 != null && genuniquevar13.employee != null && securityContext.principal == genuniquevar13.employee.manager;
  }

  function genactionpredicate51 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate52 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate53 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate54 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate55 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate56 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate57 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate58 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate59 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate60 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate61 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate62 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate63 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate64 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate65 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate66 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate67 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate68 ( ) : Bool
  {
    return true;
  }

  function genactionpredicatecombined0 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate9();
  }

  function genactionpredicatecombined1 ( genuniquevar14 : PdpMeeting ) : Bool
  {
    return genactionpredicate0() && genactionpredicate33(genuniquevar14) && genactionpredicate32();
  }

  function genactionpredicatecombined2 ( genuniquevar15 : PdpMeeting ) : Bool
  {
    return genactionpredicate0() && genactionpredicate35(genuniquevar15) && genactionpredicate34();
  }

  function genactionpredicatecombined3 ( genuniquevar16 : PdpMeeting ) : Bool
  {
    return genactionpredicate0() && genactionpredicate37(genuniquevar16) && genactionpredicate36();
  }

  function genactionpredicatecombined4 ( genuniquevar17 : TestRecursive ) : Bool
  {
    return genactionpredicate0() && genactionpredicate45(genuniquevar17) && genactionpredicate44();
  }

  function genactionpredicatecombined5 ( genuniquevar18 : TestRecursive ) : Bool
  {
    return genactionpredicate0() && genactionpredicate47(genuniquevar18) && genactionpredicate46();
  }

  function genactionpredicatecombined6 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate48();
  }

  function genactionpredicatecombined7 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate48();
  }

  define page accessDenied () {
    init
    {
      if ( genpagepredicatecombined0() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Access Denied"
    }
    text("Access Denied: ")[]{
    }
    if ( genpagepredicatecombined34() ) {
      navigate(home())[]{
        "return to home page"
      }
    }
    else
    {
    }
  }

style

default_

fieldset >> label {
  float := left;
  text-align := right;
  width := 8em;
  margin-right := 1em;
}

fieldset {
  border-top-style := none;
  border-right-style := none;
  border-bottom-style := none;
  border-left-style := none;
  padding-top := 0.5em;
  padding-right := 1em;
  padding-bottom := 0.5em;
  padding-left := 1em;
  margin-bottom := 1em;
  margin-left := 0;
  margin-right := 0;
  border-top-style := solid;
  border-bottom-style := solid;
  border-top-width := 1px;
  border-bottom-width := 1px;
}

fieldset >> legend {
  background-color := Color.white;
  font-weight := Weight.bold;
}

fieldset > ol > li {
  width := 100%;
}

fieldset > ol > li > ul {
  padding-left := 0;
  display := inline-block;
  list-style-type := none;
}

.menubar > ul > li {
  border-right-color := #c0c0c0;
  border-right-width := 1px;
  border-right-style := BorderStyle.solid;
}

.menubar > ul > li .first-child {
  border-left-color := #c0c0c0;
  border-left-width := 1px;
  border-left-style := BorderStyle.solid;
}

.menubar > ul {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.none;
  border-right-style := BorderStyle.none;
  border-bottom-style := BorderStyle.none;
  border-left-style := BorderStyle.none;
}

.menubar {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.none;
  border-right-style := BorderStyle.none;
  border-bottom-style := BorderStyle.none;
  border-left-style := BorderStyle.none;
  background-color := Color.white;
  width := 100%;
}

.menubar >> li >> ul {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
}

table >> tr > td {
  padding-top := 0.3em;
  padding-right := 2em;
  padding-bottom := 0.3em;
  padding-left := 0.6em;
  vertical-align := top;
  border-bottom-width := 1px;
  border-bottom-style := BorderStyle.solid;
  border-bottom-color := #c0c0c0;
}

table {
  border-spacing := 0;
  border-collapse := collapse;
}

form {
  margin-top := 0;
  padding-top := 0;
  width := 27.166666666666664em;
}

form >> .fieldset_action_ {
  border-top-style := BorderStyle.none;
  border-right-style := BorderStyle.none;
  border-bottom-style := BorderStyle.none;
  border-left-style := BorderStyle.none;
  border-top-color := Color.white;
  border-right-color := Color.white;
  border-bottom-color := Color.white;
  border-left-color := Color.white;
  padding-left := 0.69999999999999996em;
  padding-right := 1em;
  padding-top := 0.2em;
  padding-bottom := 0.2em;
  float := none;
}

form >> .fieldset_action_ >> input {
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-color := Color.grey;
  border-right-color := Color.grey;
  border-bottom-color := Color.grey;
  border-left-color := Color.grey;
  margin-left := 0.3em;
  float := right;
}

form > ol {
  width := 100%;
}

fieldset > ol > li > div {
  display := inline;
}

body {
  font-size := 100%;
  margin := 0;
  padding := 0;
}

template pdpMeetingStatusList() {
}

template testRecursiveStatusList() {
}

template pdpMeetingTaskList() {
}

template testRecursiveTaskList() {
}

template pdpMeetingProcedures() {
}

template pdpMeetingProceduresList() {
}

template testRecursiveProcedures() {
}

template testRecursiveProceduresList() {
}

template body() {
}

template footer() {
}

template contextSidebar() {
}

template sidebar() {
}

template topmenu() {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
}

template top() {
}

template main() {
}

fieldset {
  float := left;
  clear := left;
}

fieldset >> ol {
  list-style := none;
  float := left;
  padding-left := 0;
  margin := 0;
}

fieldset >> li {
  float := left;
  clear := left;
}

fieldset >> fieldset {
  border-top-style := none;
  border-right-style := none;
  border-bottom-style := none;
  border-left-style := none;
  background-color := transparent;
  background-image := none;
  margin-bottom := -1.2em;
}

fieldset >> fieldset >> ol {
  position := relative;
  top := -1.2em;
  margin-left := 6em;
  margin := 0;
  padding := 0;
}

fieldset >> fieldset >> label {
  float := none;
  width := auto;
  margin-right := auto;
  display := inline-block;
}

label {
  display := block;
}

li > * {
  display := inline;
}

fieldset >> li > * {
  display := inline;
  display := table-cell;
}

.inputSimpleRefAssociation {
  display := inline;
}

.inputAssociationGenericSort {
  display := inline;
}

form >> fieldset > ol > li >> input {
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-color := Color.grey;
  border-right-color := Color.grey;
  border-bottom-color := Color.grey;
  border-left-color := Color.grey;
  font-size := 1em;
  width := 16em;
}

description {
  A workflow example for a personal development plan workflow
}

module templates
section  templates .

  function newTestRecursive ( ) : TestRecursive
  {
    var o : TestRecursive := TestRecursive{} ;
    o.persist();
    o.ifProc0 := IfProc0ProcedureStatus{};
    o.ifProc0.t := o;
    o.ifProc0.persist();
    o.proc2 := Proc2ProcedureStatus{};
    o.proc2.t := o;
    o.proc2.persist();
    o.proc1 := Proc1ProcedureStatus{};
    o.proc1.t := o;
    o.proc1.persist();
    o.testRecursiveWorkflow := TestRecursiveWorkflowProcedureStatus{};
    o.testRecursiveWorkflow.t := o;
    o.testRecursiveWorkflow.persist();
    o.persist();
    return o;
  }

  function newPdpMeeting ( ) : PdpMeeting
  {
    var o : PdpMeeting := PdpMeeting{} ;
    o.persist();
    o.repeatUntilProc0 := RepeatUntilProc0ProcedureStatus{};
    o.repeatUntilProc0.p := o;
    o.repeatUntilProc0.persist();
    o.xorProc0 := XorProc0ProcedureStatus{};
    o.xorProc0.p := o;
    o.xorProc0.persist();
    o.approveReport := ApproveReportProcedureStatus{};
    o.approveReport.p := o;
    o.approveReport.persist();
    o.finalizeReport := FinalizeReportProcedureStatus{};
    o.finalizeReport.p := o;
    o.finalizeReport.persist();
    o.writeReport := WriteReportProcedureStatus{};
    o.writeReport.p := o;
    o.writeReport.persist();
    o.managerFillInForm := ManagerFillInFormProcedureStatus{};
    o.managerFillInForm.p := o;
    o.managerFillInForm.persist();
    o.employeeFillInForm := EmployeeFillInFormProcedureStatus{};
    o.employeeFillInForm.p := o;
    o.employeeFillInForm.persist();
    o.pdpWorkflow := PdpWorkflowProcedureStatus{};
    o.pdpWorkflow.p := o;
    o.pdpWorkflow.persist();
    o.persist();
    return o;
  }

  entity ProcedureStatus {
    caller -> ProcedureStatus ( )
    returnstate :: Int ( )
    name :: String ( ) := "Procedure status"
    isEnabled :: Bool ( )
    date :: DateTime ( )
    function enable__ProcedureStatus__Int ( c : ProcedureStatus r : Int ) : Void
    {
      this.isEnabled := true;
      this.caller := c;
      this.returnstate := r;
      this.persist();
      this.enabled();
    }
    function next ( state : Int ) : Void
    {
    }
    function processed ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      if ( this.caller != null )
      {
        this.caller.next(this.returnstate);
      }
      else
      {
      }
    }
    function partialCommit ( ) : Void
    {
      if ( this.caller != null )
      {
        this.caller.partialCommit();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
    }
    function disabled ( ) : Void
    {
    }
    function do ( ) : Void
    {
    }
    function done ( ) : Void
    {
    }
    function enable__ ( ) : Void
    {
      this.isEnabled := true;
      this.persist();
      this.enabled();
    }
    function disable ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.disabled();
    }
  }

  define template testRecursiveProceduresList (testRecursive9 : TestRecursive) {
    if ( gentemplatepredicate0() ) {
      list()[]{
        if ( true && testRecursive9.proc2.isEnabled && true ) {
          listitem()[]{
            if ( genpagepredicatecombined33(testRecursive9) ) {
              navigate(proc2(testRecursive9))[]{
                text("Proc2")[]{
                }
              }
            }
            else
            {
            }
          }
        }
        else
        {
        },
        if ( true && testRecursive9.proc1.isEnabled && true ) {
          listitem()[]{
            if ( genpagepredicatecombined32(testRecursive9) ) {
              navigate(proc1(testRecursive9))[]{
                text("Proc1")[]{
                }
              }
            }
            else
            {
            }
          }
        }
        else
        {
        },
        if ( true && testRecursive9.testRecursiveWorkflow.isEnabled && true ) {
          listitem()[]{
            if ( genpagepredicatecombined31(testRecursive9) ) {
              navigate(testRecursiveWorkflow(testRecursive9))[]{
                text("Test recursive workflow")[]{
                }
              }
            }
            else
            {
            }
          }
        }
        else
        {
        }
      }
    }
    else
    {
    }
  }

  define template testRecursiveProcedures (testRecursive10 : TestRecursive) {
    if ( gentemplatepredicate0() ) {
      header()[]{
        dummy()[]{
          if ( testRecursive10 != null ) {
            if ( genpagepredicatecombined38(testRecursive10) ) {
              navigate(testRecursive(testRecursive10))[]{
                text(testRecursive10.name)[]{
                }
              }
            }
            else
            {
            }
          }
          else
          {
          },
          if ( testRecursive10 == null ) {
            text("null")[]{
            }
          }
          else
          {
          }
        }
      }
      testRecursiveProceduresList(testRecursive10)[]{
      }
    }
    else
    {
    }
  }

  define template pdpMeetingProceduresList (pdpMeeting11 : PdpMeeting) {
    if ( gentemplatepredicate0() ) {
      list()[]{
        if ( securityContext.principal == pdpMeeting11.employee && pdpMeeting11.approveReport.isEnabled && true ) {
          listitem()[]{
            navigatebutton(approveReport(pdpMeeting11), "Approve report")[]{
            }
          }
        }
        else
        {
        },
        if ( securityContext.principal == pdpMeeting11.employee.manager && pdpMeeting11.finalizeReport.isEnabled && true ) {
          listitem()[]{
            navigatebutton(finalizeReport(pdpMeeting11), "Finalize report")[]{
            }
          }
        }
        else
        {
        },
        if ( securityContext.principal == pdpMeeting11.employee.manager && pdpMeeting11.writeReport.isEnabled && true ) {
          listitem()[]{
            if ( genpagepredicatecombined28(pdpMeeting11) ) {
              navigate(writeReport(pdpMeeting11))[]{
                text("Write report")[]{
                }
              }
            }
            else
            {
            }
          }
        }
        else
        {
        },
        if ( securityContext.principal == pdpMeeting11.employee.manager && pdpMeeting11.managerFillInForm.isEnabled && true ) {
          listitem()[]{
            if ( genpagepredicatecombined27(pdpMeeting11) ) {
              navigate(managerFillInForm(pdpMeeting11))[]{
                text("Manager fill in form")[]{
                }
              }
            }
            else
            {
            }
          }
        }
        else
        {
        },
        if ( securityContext.principal == pdpMeeting11.employee && pdpMeeting11.employeeFillInForm.isEnabled && true ) {
          listitem()[]{
            if ( genpagepredicatecombined26(pdpMeeting11) ) {
              navigate(employeeFillInForm(pdpMeeting11))[]{
                text("Employee fill in form")[]{
                }
              }
            }
            else
            {
            }
          }
        }
        else
        {
        },
        if ( true && pdpMeeting11.pdpWorkflow.isEnabled && true ) {
          listitem()[]{
            navigatebutton(pdpWorkflow(pdpMeeting11), "Pdp workflow")[]{
            }
          }
        }
        else
        {
        }
      }
    }
    else
    {
    }
  }

  define template pdpMeetingProcedures (pdpMeeting12 : PdpMeeting) {
    if ( gentemplatepredicate0() ) {
      header()[]{
        dummy()[]{
          if ( pdpMeeting12 != null ) {
            if ( genpagepredicatecombined36(pdpMeeting12) ) {
              navigate(pdpMeeting(pdpMeeting12))[]{
                text(pdpMeeting12.name)[]{
                }
              }
            }
            else
            {
            }
          }
          else
          {
          },
          if ( pdpMeeting12 == null ) {
            text("null")[]{
            }
          }
          else
          {
          }
        }
      }
      pdpMeetingProceduresList(pdpMeeting12)[]{
      }
    }
    else
    {
    }
  }

  define page allTasks () {
    init
    {
      if ( genpagepredicatecombined1() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "All tasks"
    }
    main()[]{
    }
    define local body () {
      header()[]{
        "All tasks"
      }
      section()[]{
        testRecursiveTaskList()[]{
        },
        pdpMeetingTaskList()[]{
        }
      }
    }
  }

  function testRecursiveHasProcedures ( testRecursive : TestRecursive ) : Bool
  {
    return true && testRecursive.proc2.isEnabled && true || true && testRecursive.proc1.isEnabled && true || true && testRecursive.testRecursiveWorkflow.isEnabled && true || false;
  }

  define template testRecursiveTaskList () {
    if ( gentemplatepredicate0() ) {
      header()[]{
        "Test recursive"
      }
      list()[]{
        for ( testRecursive11 : TestRecursive where true order by null asc limit 1000 offset 0 ) {
          if ( testRecursiveHasProcedures(testRecursive11) ) {
            listitem()[]{
              dummy()[]{
                if ( testRecursive11 != null ) {
                  if ( genpagepredicatecombined38(testRecursive11) ) {
                    navigate(testRecursive(testRecursive11))[]{
                      text(testRecursive11.name)[]{
                      }
                    }
                  }
                  else
                  {
                  }
                }
                else
                {
                },
                if ( testRecursive11 == null ) {
                  text("null")[]{
                  }
                }
                else
                {
                }
              },
              testRecursiveProceduresList(testRecursive11)[]{
              }
            }
          }
          else
          {
          }
        }
      }
    }
    else
    {
    }
  }

  define page testRecursiveTasks () {
    init
    {
      if ( genpagepredicatecombined2() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Test recursive"
    }
    main()[]{
    }
    define local body () {
      header()[]{
        "Tasks"
      }
      testRecursiveTaskList()[]{
      }
    }
  }

  function pdpMeetingHasProcedures ( pdpMeeting : PdpMeeting ) : Bool
  {
    return securityContext.principal == pdpMeeting.employee && pdpMeeting.approveReport.isEnabled && true || securityContext.principal == pdpMeeting.employee.manager && pdpMeeting.finalizeReport.isEnabled && true || securityContext.principal == pdpMeeting.employee.manager && pdpMeeting.writeReport.isEnabled && true || securityContext.principal == pdpMeeting.employee.manager && pdpMeeting.managerFillInForm.isEnabled && true || securityContext.principal == pdpMeeting.employee && pdpMeeting.employeeFillInForm.isEnabled && true || true && pdpMeeting.pdpWorkflow.isEnabled && true || false;
  }

  define template pdpMeetingTaskList () {
    if ( gentemplatepredicate0() ) {
      header()[]{
        "Pdp meeting"
      }
      list()[]{
        for ( pdpMeeting13 : PdpMeeting where true order by null asc limit 1000 offset 0 ) {
          if ( pdpMeetingHasProcedures(pdpMeeting13) ) {
            listitem()[]{
              dummy()[]{
                if ( pdpMeeting13 != null ) {
                  if ( genpagepredicatecombined36(pdpMeeting13) ) {
                    navigate(pdpMeeting(pdpMeeting13))[]{
                      text(pdpMeeting13.name)[]{
                      }
                    }
                  }
                  else
                  {
                  }
                }
                else
                {
                },
                if ( pdpMeeting13 == null ) {
                  text("null")[]{
                  }
                }
                else
                {
                }
              },
              pdpMeetingProceduresList(pdpMeeting13)[]{
              }
            }
          }
          else
          {
          }
        }
      }
    }
    else
    {
    }
  }

  define page pdpMeetingTasks () {
    init
    {
      if ( genpagepredicatecombined3() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Pdp meeting"
    }
    main()[]{
    }
    define local body () {
      header()[]{
        "Tasks"
      }
      pdpMeetingTaskList()[]{
      }
    }
  }

  define template testRecursiveStatusList () {
    if ( gentemplatepredicate0() ) {
      header()[]{
        "Test recursive"
      }
      list()[]{
        for ( testRecursive12 : TestRecursive where true order by null asc limit 1000 offset 0 ) {
          listitem()[]{
            dummy()[]{
              if ( testRecursive12 != null ) {
                if ( genpagepredicatecombined38(testRecursive12) ) {
                  navigate(testRecursive(testRecursive12))[]{
                    text(testRecursive12.name)[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( testRecursive12 == null ) {
                text("null")[]{
                }
              }
              else
              {
              }
            },
            list()[]{
              if ( testRecursive12.proc2.isEnabled && true ) {
                if ( true ) {
                  listitem()[]{
                    if ( genpagepredicatecombined33(testRecursive12) ) {
                      navigate(proc2(testRecursive12))[]{
                        text("Proc2")[]{
                        },
                        ""
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! true ) {
                  listitem()[]{
                    text("Proc2")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( testRecursive12.proc1.isEnabled && true ) {
                if ( true ) {
                  listitem()[]{
                    if ( genpagepredicatecombined32(testRecursive12) ) {
                      navigate(proc1(testRecursive12))[]{
                        text("Proc1")[]{
                        },
                        ""
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! true ) {
                  listitem()[]{
                    text("Proc1")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( testRecursive12.testRecursiveWorkflow.isEnabled && true ) {
                if ( true ) {
                  listitem()[]{
                    if ( genpagepredicatecombined31(testRecursive12) ) {
                      navigate(testRecursiveWorkflow(testRecursive12))[]{
                        text("Test recursive workflow")[]{
                        },
                        ""
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! true ) {
                  listitem()[]{
                    text("Test recursive workflow")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              }
            }
          }
        }
      }
    }
    else
    {
    }
  }

  define page testRecursiveStatus () {
    init
    {
      if ( genpagepredicatecombined4() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Test recursive"
    }
    main()[]{
    }
    define local body () {
      section()[]{
        header()[]{
          "Status"
        },
        section()[]{
          testRecursiveStatusList()[]{
          }
        }
      }
    }
  }

  define template pdpMeetingStatusList () {
    if ( gentemplatepredicate0() ) {
      header()[]{
        "Pdp meeting"
      }
      list()[]{
        for ( pdpMeeting14 : PdpMeeting where true order by null asc limit 1000 offset 0 ) {
          listitem()[]{
            dummy()[]{
              if ( pdpMeeting14 != null ) {
                if ( genpagepredicatecombined36(pdpMeeting14) ) {
                  navigate(pdpMeeting(pdpMeeting14))[]{
                    text(pdpMeeting14.name)[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( pdpMeeting14 == null ) {
                text("null")[]{
                }
              }
              else
              {
              }
            },
            list()[]{
              if ( pdpMeeting14.approveReport.isEnabled && true ) {
                if ( securityContext.principal == pdpMeeting14.employee ) {
                  listitem()[]{
                    if ( genpagepredicatecombined30(pdpMeeting14) ) {
                      navigate(approveReport(pdpMeeting14))[]{
                        text("Approve report")[]{
                        },
                        " (X)"
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! securityContext.principal == pdpMeeting14.employee ) {
                  listitem()[]{
                    text("Approve report")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( pdpMeeting14.finalizeReport.isEnabled && true ) {
                if ( securityContext.principal == pdpMeeting14.employee.manager ) {
                  listitem()[]{
                    if ( genpagepredicatecombined29(pdpMeeting14) ) {
                      navigate(finalizeReport(pdpMeeting14))[]{
                        text("Finalize report")[]{
                        },
                        " (X)"
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! securityContext.principal == pdpMeeting14.employee.manager ) {
                  listitem()[]{
                    text("Finalize report")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( pdpMeeting14.writeReport.isEnabled && true ) {
                if ( securityContext.principal == pdpMeeting14.employee.manager ) {
                  listitem()[]{
                    if ( genpagepredicatecombined28(pdpMeeting14) ) {
                      navigate(writeReport(pdpMeeting14))[]{
                        text("Write report")[]{
                        },
                        ""
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! securityContext.principal == pdpMeeting14.employee.manager ) {
                  listitem()[]{
                    text("Write report")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( pdpMeeting14.managerFillInForm.isEnabled && true ) {
                if ( securityContext.principal == pdpMeeting14.employee.manager ) {
                  listitem()[]{
                    if ( genpagepredicatecombined27(pdpMeeting14) ) {
                      navigate(managerFillInForm(pdpMeeting14))[]{
                        text("Manager fill in form")[]{
                        },
                        ""
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! securityContext.principal == pdpMeeting14.employee.manager ) {
                  listitem()[]{
                    text("Manager fill in form")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( pdpMeeting14.employeeFillInForm.isEnabled && true ) {
                if ( securityContext.principal == pdpMeeting14.employee ) {
                  listitem()[]{
                    if ( genpagepredicatecombined26(pdpMeeting14) ) {
                      navigate(employeeFillInForm(pdpMeeting14))[]{
                        text("Employee fill in form")[]{
                        },
                        ""
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! securityContext.principal == pdpMeeting14.employee ) {
                  listitem()[]{
                    text("Employee fill in form")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              },
              if ( pdpMeeting14.pdpWorkflow.isEnabled && true ) {
                if ( true ) {
                  listitem()[]{
                    if ( genpagepredicatecombined25(pdpMeeting14) ) {
                      navigate(pdpWorkflow(pdpMeeting14))[]{
                        text("Pdp workflow")[]{
                        },
                        " (X)"
                      }
                    }
                    else
                    {
                    }
                  }
                }
                else
                {
                }
                if ( ! true ) {
                  listitem()[]{
                    text("Pdp workflow")[]{
                    }
                  }
                }
                else
                {
                }
              }
              else
              {
              }
            }
          }
        }
      }
    }
    else
    {
    }
  }

  define page pdpMeetingStatus () {
    init
    {
      if ( genpagepredicatecombined5() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Pdp meeting"
    }
    main()[]{
    }
    define local body () {
      section()[]{
        header()[]{
          "Status"
        },
        section()[]{
          pdpMeetingStatusList()[]{
          }
        }
      }
    }
  }

  define page procedureStatus (s13 : ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined6(s13) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s13.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(s13.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s13.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s13.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s13.caller != null ) {
                    if ( genpagepredicatecombined6(s13.caller) ) {
                      navigate(procedureStatus(s13.caller))[]{
                        text(s13.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s13.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s13.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s13.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s13.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s13.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s13.caller != null ) {
                    if ( genpagepredicatecombined6(s13.caller) ) {
                      navigate(procedureStatus(s13.caller))[]{
                        text(s13.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s13.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s13.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define template main () {
    if ( gentemplatepredicate0() ) {
      top()[]{
      }
      topmenu()[]{
      }
      block("mainbody0")[]{
        block("_colmask_ _leftmenu_")[]{
          block("mainbody00 _container_")[]{
            block("sidebar2 _col1_")[]{
              sidebar()[]{
              }
            },
            block("wrapper0 _colwrap_")[]{
              block("body110 _col2_ clearfix")[]{
                body()[]{
                }
              }
            }
          }
        }
      }
      dummy()[]{
      }
      footer()[]{
      }
    }
    else
    {
    }
  }

  define template top () {
    if ( gentemplatepredicate0() ) {
      block("logo_area0")[]{
        block("_colmask_ _leftmenu_")[]{
          block("logo_area00 _container_")[]{
            block("logos0 _col1_")[]{
              block("logos")[]{
                image("/images/webdsl_logo_small.png")[]{
                },
                image("/images/webdsl_logo_text.png")[]{
                }
              }
            },
            block("wrapper1 _colwrap_")[]{
              block("text0 _col2_ clearfix")[]{
                block("text")[]{
                  text("WebWorkFlow tests")[]{
                  }
                }
              }
            }
          }
        }
      }
      dummy()[]{
      }
    }
    else
    {
    }
  }

  define template topmenu () {
    if ( gentemplatepredicate0() ) {
      menubar("horizontal")[]{
        menu()[]{
          menuheader()[]{
            if ( genpagepredicatecombined34() ) {
              navigate(home())[]{
                "Home"
              }
            }
            else
            {
            }
          }
        },
        menu()[]{
          menuheader()[]{
            "User"
          },
          menuitem()[]{
            if ( genpagepredicatecombined7() ) {
              navigate(signin())[]{
                "Sign in"
              }
            }
            else
            {
            }
          },
          menuitem()[]{
            if ( genpagepredicatecombined1() ) {
              navigate(allTasks())[]{
                "Tasks"
              }
            }
            else
            {
            }
          }
        }
      }
    }
    else
    {
    }
  }
section  basic page elements. .

  define template sidebar () {
    if ( gentemplatepredicate0() ) {
      contextSidebar()[]{
      }
    }
    else
    {
    }
  }

  define template contextSidebar () {
    if ( gentemplatepredicate0() ) {
      header()[]{
        "Side menu"
      }
      menuitem()[]{
        if ( genpagepredicatecombined1() ) {
          navigate(allTasks())[]{
            "Tasks"
          }
        }
        else
        {
        }
      }
    }
    else
    {
    }
  }

  define template footer () {
    if ( gentemplatepredicate0() ) {
      "generated with "
      navigate(url("http://www.webdsl.org"))[]{
        text("WebDSL")[]{
        }
      }
      " and "
      navigate(url("http://www.strategoxt.org"))[]{
        text("Stratego/XT")[]{
        }
      }
    }
    else
    {
    }
  }

module data
section  data model .

  var aManager : User := User{username := "manager" name := "Joe Manager" password := "secret"} ;

  var aUser : User := User{username := "user" name := "Joe User" password := "secret" manager := aManager} ;

  entity User {
    username :: String ( )
    name :: String ( )
    password :: Secret ( )
    manager -> User ( )
  }

  entity PdpMeeting {
    approveReport <> ApproveReportProcedureStatus ( )
    finalizeReport <> FinalizeReportProcedureStatus ( )
    writeReport <> WriteReportProcedureStatus ( )
    managerFillInForm <> ManagerFillInFormProcedureStatus ( )
    employeeFillInForm <> EmployeeFillInFormProcedureStatus ( )
    pdpWorkflow <> PdpWorkflowProcedureStatus ( )
    repeatUntilProc0 <> RepeatUntilProc0ProcedureStatus ( )
    xorProc0 <> XorProc0ProcedureStatus ( )
    employee -> User ( )
    name :: String ( ) := this.employee.name + " PDP Form"
    employeePreparation :: Text ( )
    managerPreparation :: Text ( )
    report :: Text ( )
  }

  entity TestRecursive {
    proc2 <> Proc2ProcedureStatus ( )
    proc1 <> Proc1ProcedureStatus ( )
    testRecursiveWorkflow <> TestRecursiveWorkflowProcedureStatus ( )
    ifProc0 <> IfProc0ProcedureStatus ( )
    name :: String ( )
    comments :: String ( )
    proc1Text :: String ( )
    proc2Text :: String ( )
    child -> TestRecursive ( )
  }

module ac
access control rules
  anonymous
  rule page createPdpMeeting (  ) {
    true
    rule action * ( * ) {
      true
    }
  }
  rule page * ( * ) {
    true
    rule action * ( * ) {
      true
    }
  }
  rule action * ( * ) {
    true
  }
  rule template * ( * ) {
    true
    rule action * ( * ) {
      true
    }
  }
section  pages .

  session securityContext {
    principal -> User ( )
    loggedIn :: Bool ( )
  }

  function loggedIn ( ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && securityContext.principal != null;
  }

  define page signin () {
    init
    {
      if ( genpagepredicatecombined7() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    title()[]{
      "Log in"
    }
    define local body () {
      var username10 : String ;
      var password10 : Secret ;
      form()[]{
        table()[]{
          row()[]{
            "Username: ",
            inputString(username10)[]{
            }
          },
          row()[]{
            "Password: ",
            inputSecret(password10)[]{
            }
          },
          row()[]{
            if ( genactionpredicatecombined0() ) {
              action("Sign in", dosignin())[]{
              }
            }
            else
            {
            },
            ""
          }
        },
        action dosignin ( )
        {
          if ( genactionpredicatecombined0() )
          {
            for ( us : User where us.username == username10 order by null asc limit 1000 offset 0 )
            {
              if ( us.password.check(password10) )
              {
                securityContext.principal := us;
                securityContext.loggedIn := true;
                return allTasks();
              }
              else
              {
              }
            }
            securityContext.loggedIn := false;
            return error("Wrong combination of username and password");
          }
          else
          {
            return accessDenied();
          }
        }
      }
    }
  }

  define page error (msg2 : String) {
    init
    {
      if ( genpagepredicatecombined8(msg2) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    title()[]{
      "Error"
    }
    define local body () {
      header()[]{
        "Error"
      }
      text(msg2)[]{
      }
    }
  }

  define page message (msg3 : String) {
    init
    {
      if ( genpagepredicatecombined9(msg3) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    title()[]{
      "Message"
    }
    define local body () {
      header()[]{
        "Message"
      }
      section()[]{
        text(msg3)[]{
        }
      }
    }
  }

module layout
layout
template
main()
{
top()
;
topmenu()
;
mainbody0: [ sidebar() body() ]
;
footer()
;
}
template
top()
{
logo_area0: [ logos text ]
;
}
template
footer()
{
f0: [ footer_links footer_text ]
;
}

module style
style
globalStyle
const mainColor : Color := # 330099 ;
const globalFont : Font := Font.Lucida.Grande ;
const globalFontSize : Length := 0.75em ;
const layoutBorderColor : Color := # c0c0c0 ;
.section {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
a {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
h1 {
  font := Font.Lucida.Grande;
  font-size := 0.99997499999999995em;
  margin-top := 0px;
}
table {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
table >> tr > th {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  font := Font.Lucida.Grande;
  font-size := 1em;
  font-weight := bold;
  color := #404040;
  image := url("images/menubar_bg.png");
  background-repeat := repeat-x;
}
table >> tr > td {
  background-color := Color.white;
}
.block {
  font := Font.Lucida.Grande;
  font-size := 1em;
}
form {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
form >> fieldset {
  font-size := 0.99974999999999992em;
}
fieldset {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
fieldset >> a {
  font-size := 0.99974999999999992em;
}
style
templateStyle
template topmenu() {
  width := 100%;
  margin-bottom := 1em;
}
template top() {
  background-color := Color.white;
  width := 100%;
}
template top() >> .logos {
  width := 25em;
}
template top() > .logo_area0 {
  margin-left := auto;
  margin-right := auto;
  width := 80%;
}
template main() > .mainbody0 {
  margin-left := auto;
  margin-right := auto;
  width := 80%;
  padding-top := 4px;
}
template sidebar() {
  width := 15em;
  padding := 1em;
}
template body() {
  padding := 1em;
  border-left-color := #c0c0c0;
  border-left-style := BorderStyle.solid;
  border-left-width := 1px;
}
template footer() {
  background-color := Color.white;
  border-top-width := 1px;
  border-top-color := #c0c0c0;
  border-top-style := BorderStyle.solid;
  font := Font.Lucida.Grande;
  font-size := 0.7em;
  width := 100%;
  margin-top := 1em;
}
style
formStyle
const labelWidth : Length := 8em ;
const formItemSpacing : Length := 0.3em ;
fieldset > ol > li {
  padding-bottom := 0.3em;
}
fieldset {
  image := url("images/background_gradient.png");
  border-top-color := #003399;
  border-bottom-color := #003399;
  background-color := #ccccff;
}
style
menuStyle
const globalBorderColor : Color := # c0c0c0 ;
const fontColor : Color := # 505050 ;
template topmenu() {
  background-color := #ffff00;
  image := url("images/menubar_bg.png");
  background-repeat := repeat-x;
}
template topmenu() >> .menubar {
  margin-left := auto;
  margin-right := auto;
  width := 80%;
}
template topmenu() >> ul > li > a {
  padding := 0.3em;
  font := Font.Lucida.Grande;
  color := #505050;
  font-size := 0.75em;
  text-decoration := none;
}
template topmenu() >> ul >> a .hover {
  image := url("images/menubar_bg_hover.png");
  background-repeat := repeat-x;
}
style
footerStyle
template footer() >> ul > li {
  float := left;
}
template footer() >> ul > li .before {
  content := '|';
}
template footer() >> ul > li .before {
  margin-right := 1em;
  margin-left := 1em;
}
template footer() >> .footer_text {
  float := right;
}
template footer() >> .footer_links {
  float := left;
}
template footer() >> a {
  font-size := 1.0em;
}
template footer() >> ul {
  list-style := none;
  padding-left := 0;
  separator := Separator.pipe;
}

section  procedures .

  entity XorProc0ProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function next ( state : Int ) : Void
    {
      if ( state == 0 )
      {
        this.p.employeeFillInForm.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state == 1 )
      {
        this.p.managerFillInForm.disable();
        this.processed();
      }
      else
      {
      }
      if ( state == 2 )
      {
        this.p.managerFillInForm.enable__ProcedureStatus__Int(this as ProcedureStatus, 3);
      }
      else
      {
      }
      if ( state == 3 )
      {
        this.p.employeeFillInForm.disable();
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
      this.next(0);
      this.next(2);
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
      this.p.employeeFillInForm.disable();
      this.p.managerFillInForm.disable();
    }
  }

  define page xorProc0ProcedureStatus (s14 : XorProc0ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined10(s14) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s14.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s14.p != null ) {
                    if ( genpagepredicatecombined36(s14.p) ) {
                      navigate(pdpMeeting(s14.p))[]{
                        text(s14.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s14.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s14.p != null ) {
                    if ( genpagepredicatecombined36(s14.p) ) {
                      navigate(pdpMeeting(s14.p))[]{
                        text(s14.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s14.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s14.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s14.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s14.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s14.caller != null ) {
                    if ( genpagepredicatecombined6(s14.caller) ) {
                      navigate(procedureStatus(s14.caller))[]{
                        text(s14.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s14.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s14.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s14.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s14.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s14.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s14.caller != null ) {
                    if ( genpagepredicatecombined6(s14.caller) ) {
                      navigate(procedureStatus(s14.caller))[]{
                        text(s14.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s14.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s14.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page xorProc0 (p59 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined11(p59) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  entity RepeatUntilProc0ProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function enable1 ( ) : Void
    {
      this.next(0);
    }
    function enable2 ( ) : Void
    {
      this.next(3);
    }
    function disable1 ( ) : Void
    {
      this.p.writeReport.disable();
      this.p.approveReport.disable();
    }
    function disable2 ( ) : Void
    {
      this.p.finalizeReport.disable();
    }
    function next ( state : Int ) : Void
    {
      if ( state == 0 )
      {
        this.p.writeReport.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state == 1 )
      {
        this.disable2();
        this.p.approveReport.enable__ProcedureStatus__Int(this as ProcedureStatus, 2);
      }
      else
      {
      }
      if ( state == 2 )
      {
        this.enable1();
        this.enable2();
      }
      else
      {
      }
      if ( state == 3 )
      {
        this.p.finalizeReport.enable__ProcedureStatus__Int(this as ProcedureStatus, 4);
      }
      else
      {
      }
      if ( state == 4 )
      {
        this.disable1();
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
      this.enable1();
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
      this.disable1();
      this.disable2();
    }
  }

  define page repeatUntilProc0ProcedureStatus (s15 : RepeatUntilProc0ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined12(s15) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s15.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s15.p != null ) {
                    if ( genpagepredicatecombined36(s15.p) ) {
                      navigate(pdpMeeting(s15.p))[]{
                        text(s15.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s15.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s15.p != null ) {
                    if ( genpagepredicatecombined36(s15.p) ) {
                      navigate(pdpMeeting(s15.p))[]{
                        text(s15.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s15.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s15.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s15.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s15.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s15.caller != null ) {
                    if ( genpagepredicatecombined6(s15.caller) ) {
                      navigate(procedureStatus(s15.caller))[]{
                        text(s15.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s15.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s15.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s15.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s15.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s15.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s15.caller != null ) {
                    if ( genpagepredicatecombined6(s15.caller) ) {
                      navigate(procedureStatus(s15.caller))[]{
                        text(s15.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s15.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s15.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page repeatUntilProc0 (p60 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined13(p60) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  entity PdpWorkflowProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function next ( state : Int ) : Void
    {
      if ( state == 0 )
      {
        this.p.xorProc0.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state == 1 )
      {
        this.p.repeatUntilProc0.enable__ProcedureStatus__Int(this as ProcedureStatus, 2);
      }
      else
      {
      }
      if ( state == 2 )
      {
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.p.report := "Kanarie";
      this.p.persist();
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page pdpWorkflowProcedureStatus (s16 : PdpWorkflowProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined14(s16) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s16.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s16.p != null ) {
                    if ( genpagepredicatecombined36(s16.p) ) {
                      navigate(pdpMeeting(s16.p))[]{
                        text(s16.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s16.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s16.p != null ) {
                    if ( genpagepredicatecombined36(s16.p) ) {
                      navigate(pdpMeeting(s16.p))[]{
                        text(s16.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s16.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s16.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s16.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s16.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s16.caller != null ) {
                    if ( genpagepredicatecombined6(s16.caller) ) {
                      navigate(procedureStatus(s16.caller))[]{
                        text(s16.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s16.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s16.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s16.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s16.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s16.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s16.caller != null ) {
                    if ( genpagepredicatecombined6(s16.caller) ) {
                      navigate(procedureStatus(s16.caller))[]{
                        text(s16.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s16.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s16.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity EmployeeFillInFormProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page employeeFillInFormProcedureStatus (s17 : EmployeeFillInFormProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined15(s17) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s17.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s17.p != null ) {
                    if ( genpagepredicatecombined36(s17.p) ) {
                      navigate(pdpMeeting(s17.p))[]{
                        text(s17.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s17.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s17.p != null ) {
                    if ( genpagepredicatecombined36(s17.p) ) {
                      navigate(pdpMeeting(s17.p))[]{
                        text(s17.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s17.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s17.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s17.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s17.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s17.caller != null ) {
                    if ( genpagepredicatecombined6(s17.caller) ) {
                      navigate(procedureStatus(s17.caller))[]{
                        text(s17.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s17.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s17.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s17.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s17.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s17.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s17.caller != null ) {
                    if ( genpagepredicatecombined6(s17.caller) ) {
                      navigate(procedureStatus(s17.caller))[]{
                        text(s17.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s17.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s17.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity ManagerFillInFormProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page managerFillInFormProcedureStatus (s18 : ManagerFillInFormProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined16(s18) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s18.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s18.p != null ) {
                    if ( genpagepredicatecombined36(s18.p) ) {
                      navigate(pdpMeeting(s18.p))[]{
                        text(s18.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s18.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s18.p != null ) {
                    if ( genpagepredicatecombined36(s18.p) ) {
                      navigate(pdpMeeting(s18.p))[]{
                        text(s18.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s18.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s18.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s18.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s18.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s18.caller != null ) {
                    if ( genpagepredicatecombined6(s18.caller) ) {
                      navigate(procedureStatus(s18.caller))[]{
                        text(s18.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s18.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s18.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s18.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s18.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s18.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s18.caller != null ) {
                    if ( genpagepredicatecombined6(s18.caller) ) {
                      navigate(procedureStatus(s18.caller))[]{
                        text(s18.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s18.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s18.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity WriteReportProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page writeReportProcedureStatus (s19 : WriteReportProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined17(s19) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s19.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s19.p != null ) {
                    if ( genpagepredicatecombined36(s19.p) ) {
                      navigate(pdpMeeting(s19.p))[]{
                        text(s19.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s19.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s19.p != null ) {
                    if ( genpagepredicatecombined36(s19.p) ) {
                      navigate(pdpMeeting(s19.p))[]{
                        text(s19.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s19.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s19.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s19.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s19.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s19.caller != null ) {
                    if ( genpagepredicatecombined6(s19.caller) ) {
                      navigate(procedureStatus(s19.caller))[]{
                        text(s19.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s19.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s19.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s19.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s19.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s19.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s19.caller != null ) {
                    if ( genpagepredicatecombined6(s19.caller) ) {
                      navigate(procedureStatus(s19.caller))[]{
                        text(s19.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s19.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s19.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity FinalizeReportProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page finalizeReportProcedureStatus (s20 : FinalizeReportProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined18(s20) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s20.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s20.p != null ) {
                    if ( genpagepredicatecombined36(s20.p) ) {
                      navigate(pdpMeeting(s20.p))[]{
                        text(s20.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s20.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s20.p != null ) {
                    if ( genpagepredicatecombined36(s20.p) ) {
                      navigate(pdpMeeting(s20.p))[]{
                        text(s20.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s20.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s20.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s20.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s20.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s20.caller != null ) {
                    if ( genpagepredicatecombined6(s20.caller) ) {
                      navigate(procedureStatus(s20.caller))[]{
                        text(s20.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s20.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s20.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s20.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s20.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s20.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s20.caller != null ) {
                    if ( genpagepredicatecombined6(s20.caller) ) {
                      navigate(procedureStatus(s20.caller))[]{
                        text(s20.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s20.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s20.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity ApproveReportProcedureStatus : ProcedureStatus {
    p -> PdpMeeting ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page approveReportProcedureStatus (s21 : ApproveReportProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined19(s21) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s21.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s21.p != null ) {
                    if ( genpagepredicatecombined36(s21.p) ) {
                      navigate(pdpMeeting(s21.p))[]{
                        text(s21.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s21.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("P: ")[]{
                dummy()[]{
                  if ( s21.p != null ) {
                    if ( genpagepredicatecombined36(s21.p) ) {
                      navigate(pdpMeeting(s21.p))[]{
                        text(s21.p.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s21.p == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s21.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s21.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s21.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s21.caller != null ) {
                    if ( genpagepredicatecombined6(s21.caller) ) {
                      navigate(procedureStatus(s21.caller))[]{
                        text(s21.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s21.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s21.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s21.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s21.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s21.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s21.caller != null ) {
                    if ( genpagepredicatecombined6(s21.caller) ) {
                      navigate(procedureStatus(s21.caller))[]{
                        text(s21.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s21.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s21.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity IfProc0ProcedureStatus : ProcedureStatus {
    t -> TestRecursive ( )
    function next ( state : Int ) : Void
    {
      if ( state == 0 )
      {
        this.t.child.testRecursiveWorkflow.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state == 1 )
      {
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
      if ( this.t.child != null )
      {
        this.next(0);
      }
      else
      {
        this.processed();
      }
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
      this.t.child.testRecursiveWorkflow.disable();
    }
  }

  define page ifProc0ProcedureStatus (s22 : IfProc0ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined20(s22) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s22.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s22.t != null ) {
                    if ( genpagepredicatecombined38(s22.t) ) {
                      navigate(testRecursive(s22.t))[]{
                        text(s22.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s22.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s22.t != null ) {
                    if ( genpagepredicatecombined38(s22.t) ) {
                      navigate(testRecursive(s22.t))[]{
                        text(s22.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s22.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s22.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s22.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s22.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s22.caller != null ) {
                    if ( genpagepredicatecombined6(s22.caller) ) {
                      navigate(procedureStatus(s22.caller))[]{
                        text(s22.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s22.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s22.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s22.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s22.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s22.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s22.caller != null ) {
                    if ( genpagepredicatecombined6(s22.caller) ) {
                      navigate(procedureStatus(s22.caller))[]{
                        text(s22.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s22.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s22.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page ifProc0 (t19 : TestRecursive) {
    init
    {
      if ( genpagepredicatecombined21(t19) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  entity TestRecursiveWorkflowProcedureStatus : ProcedureStatus {
    t -> TestRecursive ( )
    function next ( state : Int ) : Void
    {
      if ( state == 0 )
      {
        this.t.proc1.enable__ProcedureStatus__Int(this as ProcedureStatus, 1);
      }
      else
      {
      }
      if ( state == 1 )
      {
        this.t.ifProc0.enable__ProcedureStatus__Int(this as ProcedureStatus, 2);
      }
      else
      {
      }
      if ( state == 2 )
      {
        this.t.proc2.enable__ProcedureStatus__Int(this as ProcedureStatus, 3);
      }
      else
      {
      }
      if ( state == 3 )
      {
        this.processed();
      }
      else
      {
      }
    }
    function enabled ( ) : Void
    {
      this.do();
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.next(0);
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page testRecursiveWorkflowProcedureStatus (s23 : TestRecursiveWorkflowProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined22(s23) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s23.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s23.t != null ) {
                    if ( genpagepredicatecombined38(s23.t) ) {
                      navigate(testRecursive(s23.t))[]{
                        text(s23.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s23.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s23.t != null ) {
                    if ( genpagepredicatecombined38(s23.t) ) {
                      navigate(testRecursive(s23.t))[]{
                        text(s23.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s23.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s23.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s23.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s23.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s23.caller != null ) {
                    if ( genpagepredicatecombined6(s23.caller) ) {
                      navigate(procedureStatus(s23.caller))[]{
                        text(s23.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s23.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s23.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s23.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s23.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s23.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s23.caller != null ) {
                    if ( genpagepredicatecombined6(s23.caller) ) {
                      navigate(procedureStatus(s23.caller))[]{
                        text(s23.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s23.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s23.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity Proc1ProcedureStatus : ProcedureStatus {
    t -> TestRecursive ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page proc1ProcedureStatus (s24 : Proc1ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined23(s24) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s24.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s24.t != null ) {
                    if ( genpagepredicatecombined38(s24.t) ) {
                      navigate(testRecursive(s24.t))[]{
                        text(s24.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s24.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s24.t != null ) {
                    if ( genpagepredicatecombined38(s24.t) ) {
                      navigate(testRecursive(s24.t))[]{
                        text(s24.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s24.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s24.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s24.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s24.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s24.caller != null ) {
                    if ( genpagepredicatecombined6(s24.caller) ) {
                      navigate(procedureStatus(s24.caller))[]{
                        text(s24.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s24.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s24.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s24.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s24.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s24.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s24.caller != null ) {
                    if ( genpagepredicatecombined6(s24.caller) ) {
                      navigate(procedureStatus(s24.caller))[]{
                        text(s24.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s24.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s24.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity Proc2ProcedureStatus : ProcedureStatus {
    t -> TestRecursive ( )
    function enabled ( ) : Void
    {
    }
    function done ( ) : Void
    {
      this.isEnabled := false;
      this.persist();
      this.processed();
    }
    function do ( ) : Void
    {
      this.done();
    }
    function disabled ( ) : Void
    {
    }
  }

  define page proc2ProcedureStatus (s25 : Proc2ProcedureStatus) {
    init
    {
      if ( genpagepredicatecombined24(s25) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(s25.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s25.t != null ) {
                    if ( genpagepredicatecombined38(s25.t) ) {
                      navigate(testRecursive(s25.t))[]{
                        text(s25.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s25.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("T: ")[]{
                dummy()[]{
                  if ( s25.t != null ) {
                    if ( genpagepredicatecombined38(s25.t) ) {
                      navigate(testRecursive(s25.t))[]{
                        text(s25.t.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s25.t == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s25.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s25.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s25.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s25.caller != null ) {
                    if ( genpagepredicatecombined6(s25.caller) ) {
                      navigate(procedureStatus(s25.caller))[]{
                        text(s25.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s25.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s25.returnstate)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(s25.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Is enabled: ")[]{
                outputBool(s25.isEnabled)[]{
                }
              }
            },
            groupitem()[]{
              label("Date: ")[]{
                outputDateTime(s25.date)[]{
                }
              }
            },
            groupitem()[]{
              label("Caller: ")[]{
                dummy()[]{
                  if ( s25.caller != null ) {
                    if ( genpagepredicatecombined6(s25.caller) ) {
                      navigate(procedureStatus(s25.caller))[]{
                        text(s25.caller.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( s25.caller == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Returnstate: ")[]{
                outputInt(s25.returnstate)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page pdpWorkflow (p61 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined25(p61) )
      {
        p61.pdpWorkflow.do();
        goto pdpMeeting(p61);
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  define page employeeFillInForm (p62 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined26(p62) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local contextSidebar () {
        pdpMeetingProcedures(p62)[]{
        }
      },
      define local body () {
        form()[]{
          group("Details")[]{
            dummy()[]{
              groupitem()[]{
                label("Employee preparation: ")[]{
                  inputText(p62.employeePreparation)[]{
                  }
                }
              }
            }
          },
          dummy()[]{
            if ( genactionpredicatecombined1(p62) ) {
              action("Submit", doAction())[]{
              }
            }
            else
            {
            },
            action doAction ( )
            {
              if ( genactionpredicatecombined1(p62) )
              {
                p62.persist();
                p62.employeeFillInForm.do();
                return pdpMeeting(p62);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

  define page managerFillInForm (p63 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined27(p63) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Fill in manager form"
    }
    dummy()[]{
      main()[]{
      },
      define local contextSidebar () {
        pdpMeetingProcedures(p63)[]{
        }
      },
      define local body () {
        form()[]{
          group("Details")[]{
            dummy()[]{
              groupitem()[]{
                label("Manager preparation: ")[]{
                  inputText(p63.managerPreparation)[]{
                  }
                }
              }
            }
          },
          dummy()[]{
            if ( genactionpredicatecombined2(p63) ) {
              action("Submit", doAction())[]{
              }
            }
            else
            {
            },
            action doAction ( )
            {
              if ( genactionpredicatecombined2(p63) )
              {
                p63.persist();
                p63.managerFillInForm.do();
                return pdpMeeting(p63);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

  define page writeReport (p64 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined28(p64) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local contextSidebar () {
        pdpMeetingProcedures(p64)[]{
        }
      },
      define local body () {
        form()[]{
          group("Details")[]{
            dummy()[]{
              groupitem()[]{
                label("Report: ")[]{
                  inputText(p64.report)[]{
                  }
                }
              }
            }
          },
          dummy()[]{
            if ( genactionpredicatecombined3(p64) ) {
              action("Submit", doAction())[]{
              }
            }
            else
            {
            },
            action doAction ( )
            {
              if ( genactionpredicatecombined3(p64) )
              {
                p64.persist();
                p64.writeReport.do();
                return pdpMeeting(p64);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

  define page finalizeReport (p65 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined29(p65) )
      {
        p65.finalizeReport.do();
        goto pdpMeeting(p65);
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  define page approveReport (p66 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined30(p66) )
      {
        p66.approveReport.do();
        goto pdpMeeting(p66);
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  define page testRecursiveWorkflow (t20 : TestRecursive) {
    init
    {
      if ( genpagepredicatecombined31(t20) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
  }

  define page proc1 (t21 : TestRecursive) {
    init
    {
      if ( genpagepredicatecombined32(t21) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local contextSidebar () {
        testRecursiveProcedures(t21)[]{
        }
      },
      define local body () {
        form()[]{
          group("Details")[]{
            dummy()[]{
              groupitem()[]{
                label("Proc1 text: ")[]{
                  inputString(t21.proc1Text)[]{
                  }
                }
              }
            }
          },
          dummy()[]{
            if ( genactionpredicatecombined4(t21) ) {
              action("Submit", doAction())[]{
              }
            }
            else
            {
            },
            action doAction ( )
            {
              if ( genactionpredicatecombined4(t21) )
              {
                t21.persist();
                t21.proc1.do();
                return testRecursive(t21);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

  define page proc2 (t22 : TestRecursive) {
    init
    {
      if ( genpagepredicatecombined33(t22) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local contextSidebar () {
        testRecursiveProcedures(t22)[]{
        }
      },
      define local body () {
        form()[]{
          group("Details")[]{
            dummy()[]{
              groupitem()[]{
                label("Proc2 text: ")[]{
                  inputString(t22.proc2Text)[]{
                  }
                }
              }
            }
          },
          dummy()[]{
            if ( genactionpredicatecombined5(t22) ) {
              action("Submit", doAction())[]{
              }
            }
            else
            {
            },
            action doAction ( )
            {
              if ( genactionpredicatecombined5(t22) )
              {
                t22.persist();
                t22.proc2.do();
                return testRecursive(t22);
              }
              else
              {
                return accessDenied();
              }
            }
          }
        }
      }
    }
  }

section  pages .

  var test3 : TestRecursive ;

  define template body () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define page home () {
    init
    {
      if ( genpagepredicatecombined34() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    define local body () {
      var employee10 : User ;
      header()[]{
        "Home"
      }
      section()[]{
        form()[]{
          header()[]{
            "Quick start PDP Meeting for employee"
          },
          if ( genactionpredicatecombined6() ) {
            action("Quick start", quickStart())[]{
            }
          }
          else
          {
          },
          action quickStart ( )
          {
            if ( genactionpredicatecombined6() )
            {
              var p67 : PdpMeeting := newPdpMeeting() ;
              p67.employee := aUser;
              p67.persist();
              p67.pdpWorkflow.enable__();
              return message("Tests gestart");
            }
            else
            {
              return accessDenied();
            }
          }
        }
      }
      section()[]{
        form()[]{
          header()[]{
            "Organize PDP Meeting"
          },
          "For: ",
          block("inputSimpleRefAssociation")[]{
            select ( user09 : User , Select , employee10 )
          },
          if ( genactionpredicatecombined7() ) {
            action("Organize", organize())[]{
            }
          }
          else
          {
          },
          action organize ( )
          {
            if ( genactionpredicatecombined7() )
            {
              var p68 : PdpMeeting := newPdpMeeting() ;
              p68.employee := employee10;
              p68.persist();
              p68.pdpWorkflow.enable__();
              if ( securityContext.loggedIn )
              {
                return message("Workflows started!");
              }
              else
              {
                return signin();
              }
            }
            else
            {
              return accessDenied();
            }
          }
        }
      }
    }
  }

  define page allMeetings () {
    init
    {
      if ( genpagepredicatecombined35() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    define local body () {
      for ( p69 : PdpMeeting where true order by null asc limit 1000 offset 0 ) {
        text(p69.name)[]{
        }
        text(" ")[]{
        }
      }
    }
  }

section  pages .

  define page pdpMeeting (p70 : PdpMeeting) {
    init
    {
      if ( genpagepredicatecombined36(p70) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(p70.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Employee: ")[]{
                dummy()[]{
                  if ( p70.employee != null ) {
                    if ( genpagepredicatecombined37(p70.employee) ) {
                      navigate(user(p70.employee))[]{
                        text(p70.employee.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( p70.employee == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(p70.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Employee preparation: ")[]{
                outputText(p70.employeePreparation)[]{
                }
              }
            },
            groupitem()[]{
              label("Manager preparation: ")[]{
                outputText(p70.managerPreparation)[]{
                }
              }
            },
            groupitem()[]{
              label("Report: ")[]{
                outputText(p70.report)[]{
                }
              }
            }
          }
        }
      },
      define local contextSidebar () {
        pdpMeetingProcedures(p70)[]{
        }
      }
    }
  }

  define page user (u1 : User) {
    init
    {
      if ( genpagepredicatecombined37(u1) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(u1.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Username: ")[]{
                text(u1.username)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(u1.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Password: ")[]{
                outputSecret(u1.password)[]{
                }
              }
            },
            groupitem()[]{
              label("Manager: ")[]{
                dummy()[]{
                  if ( u1.manager != null ) {
                    if ( genpagepredicatecombined37(u1.manager) ) {
                      navigate(user(u1.manager))[]{
                        text(u1.manager.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( u1.manager == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  define page testRecursive (t23 : TestRecursive) {
    init
    {
      if ( genpagepredicatecombined38(t23) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(t23.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(t23.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Comments: ")[]{
                text(t23.comments)[]{
                }
              }
            },
            groupitem()[]{
              label("Proc1 text: ")[]{
                text(t23.proc1Text)[]{
                }
              }
            },
            groupitem()[]{
              label("Proc2 text: ")[]{
                text(t23.proc2Text)[]{
                }
              }
            },
            groupitem()[]{
              label("Child: ")[]{
                dummy()[]{
                  if ( t23.child != null ) {
                    if ( genpagepredicatecombined38(t23.child) ) {
                      navigate(testRecursive(t23.child))[]{
                        text(t23.child.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( t23.child == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            }
          }
        }
      },
      define local contextSidebar () {
        testRecursiveProcedures(t23)[]{
        }
      }
    }
  }