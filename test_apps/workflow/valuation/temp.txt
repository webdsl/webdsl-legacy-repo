application org.webdsl.testProcess

section  access denied page. .

  function genpagepredicatecombined0 ( ) : Bool
  {
    return genpagepredicate0() && genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined1 ( object18 : PlanValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined2 ( object19 : InstrumentValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined3 ( object20 : SiteDimsValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined4 ( object21 : CarAccommodationValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined5 ( object22 : MarketabilityValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined6 ( object23 : StreetAppealValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined7 ( object24 : WallAndRoofValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined8 ( object25 : WindowFramesValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined9 ( object26 : InteriorLiningsValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined10 ( object27 : IntExtConditionValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined11 ( object28 : FlooringValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined12 ( object29 : InteriorLayoutValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined13 ( object30 : AnalysisValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined14 ( object31 : PropertyIdentificationValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined15 ( object32 : MarketValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined16 ( object33 : Valuation ) : Bool
  {
    return genpagepredicate2() && genpagepredicate3(object33) && genpagepredicate5();
  }

  function genpagepredicatecombined17 ( object34 : ComparisonValue ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined18 ( ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined19 ( object35 : SalesEvidence ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined20 ( ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined21 ( msg2 : String ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined22 ( msg3 : String ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined23 ( d13 : Int d23 : Int ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined24 ( ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined25 ( ) : Bool
  {
    return genpagepredicate2() && genpagepredicate4() && genpagepredicate5();
  }

  function genpagepredicatecombined26 ( ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined27 ( ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined28 ( v20 : Valuation ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicatecombined29 ( u1 : User ) : Bool
  {
    return genpagepredicate2() && genpagepredicate5();
  }

  function genpagepredicate0 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate1 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate2 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate0 ( ) : Bool
  {
    return true;
  }

  function gentemplatepredicate0 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate3 ( v : Valuation ) : Bool
  {
    return true;
  }

  function genpagepredicate4 ( ) : Bool
  {
    return true;
  }

  function genpagepredicate5 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate1 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate2 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate3 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate4 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate5 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate6 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate7 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate8 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate9 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate10 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate11 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate12 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate13 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate14 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate15 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate16 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate17 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate18 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate19 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate20 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate21 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate22 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate23 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate24 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate25 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate26 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate27 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate28 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate29 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate30 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate31 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate32 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate33 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate34 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate35 ( genuniquevar0 : Valuation ) : Bool
  {
    return true;
  }

  function genactionpredicate36 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate37 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate38 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate39 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate40 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate41 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate42 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate43 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate44 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate45 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate46 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate47 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate48 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate49 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate50 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate51 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate52 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate53 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate54 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate55 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate56 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate57 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate58 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate59 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate60 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate61 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate62 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate63 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate64 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate65 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate66 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate67 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate68 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate69 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate70 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate71 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate72 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate73 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate74 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate75 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate76 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate77 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate78 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate79 ( ) : Bool
  {
    return true;
  }

  function genactionpredicate80 ( ) : Bool
  {
    return true;
  }

  function genactionpredicatecombined0 ( ) : Bool
  {
    return genactionpredicate0() && genactionpredicate44() && genactionpredicate43();
  }

  define page accessDenied () {
    init
    {
      if ( genpagepredicatecombined0() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    title()[]{
      "Access Denied"
    }
    text("Access Denied: ")[]{
    }
    if ( genpagepredicatecombined24() ) {
      navigate(home())[]{
        "return to home page"
      }
    }
    else
    {
    }
  }

style

default_

.menubar > ul > li {
  border-right-color := #c0c0c0;
  border-right-width := 1px;
  border-right-style := BorderStyle.solid;
}

.menubar > ul > li .first-child {
  border-left-color := #c0c0c0;
  border-left-width := 1px;
  border-left-style := BorderStyle.solid;
}

.menubar > ul {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.none;
  border-right-style := BorderStyle.none;
  border-bottom-style := BorderStyle.none;
  border-left-style := BorderStyle.none;
}

.menubar {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.none;
  border-right-style := BorderStyle.none;
  border-bottom-style := BorderStyle.none;
  border-left-style := BorderStyle.none;
  background-color := Color.white;
  width := 100%;
}

.menubar >> li >> ul {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
}

fieldset >> label {
  float := left;
  text-align := right;
  margin-right := 1em;
}

fieldset {
  border-top-style := none;
  border-right-style := none;
  border-bottom-style := none;
  border-left-style := none;
  padding-top := 0.5em;
  padding-right := 1em;
  padding-bottom := 0.5em;
  padding-left := 1em;
  margin-bottom := 1em;
  margin-left := 0;
  margin-right := 0;
  border-top-style := solid;
  border-bottom-style := solid;
  border-top-width := 1px;
  border-bottom-width := 1px;
  background-color := Color.white;
}

fieldset >> legend {
  background-color := Color.white;
  font-weight := Weight.bold;
}

fieldset > ol > li {
  width := 100%;
}

fieldset > ol > li > ul {
  padding-left := 0;
  display := inline-block;
  list-style-type := none;
}

table >> tr > td {
  padding-top := 0.3em;
  padding-right := 2em;
  padding-bottom := 0.3em;
  padding-left := 0.6em;
  vertical-align := top;
  border-bottom-width := 1px;
  border-bottom-style := BorderStyle.solid;
  border-bottom-color := #c0c0c0;
}

table {
  border-spacing := 0;
  border-collapse := collapse;
}

form {
  margin-top := 0;
  padding-top := 0;
  width := 32.166666666666671em;
}

form >> .fieldset_action_ {
  border-top-style := BorderStyle.none;
  border-right-style := BorderStyle.none;
  border-bottom-style := BorderStyle.none;
  border-left-style := BorderStyle.none;
  border-top-color := Color.white;
  border-right-color := Color.white;
  border-bottom-color := Color.white;
  border-left-color := Color.white;
  padding-left := 0.69999999999999996em;
  padding-right := 1em;
  padding-top := 0.2em;
  padding-bottom := 0.2em;
  float := none;
}

form >> .fieldset_action_ >> input {
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-color := Color.grey;
  border-right-color := Color.grey;
  border-bottom-color := Color.grey;
  border-left-color := Color.grey;
  margin-left := 0.3em;
  float := right;
}

form > ol {
  width := 100%;
}

fieldset > ol > li > div {
  display := inline;
}

body {
  font-size := 100%;
  margin := 0;
  padding := 0;
}

template body() {
}

template details2() {
}

template details1() {
}

template testSidebarTemplate() {
}

template footer() {
}

template contextSidebar() {
}

template propertyInfoSidebar() {
}

template valuationDetailsSidebar() {
}

template requestSidebarQuote() {
}

template requestSidebarCustomFields() {
}

template requestSidebarBookingDetails() {
}

template requestSidebarDetails() {
}

template requestSidebar() {
}

template sidebar() {
}

template topmenu() {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
}

template top() {
}

template main() {
}

fieldset {
  float := left;
  clear := left;
}

fieldset >> ol {
  list-style := none;
  float := left;
  padding-left := 0;
  margin := 0;
}

fieldset >> li {
  float := left;
  clear := left;
}

fieldset >> fieldset {
  border-top-style := none;
  border-right-style := none;
  border-bottom-style := none;
  border-left-style := none;
  background-color := transparent;
  background-image := none;
  margin-bottom := -1.2em;
}

fieldset >> fieldset >> ol {
  position := relative;
  top := -1.2em;
  margin-left := 6em;
  margin := 0;
  padding := 0;
}

fieldset >> fieldset >> label {
  float := none;
  width := auto;
  margin-right := auto;
  display := inline-block;
}

label {
  display := block;
}

li > * {
  display := inline;
}

fieldset >> li > * {
  display := inline;
  display := table-cell;
}

.inputSimpleRefAssociation {
  display := inline;
}

.inputAssociationGenericSort {
  display := inline;
}

form >> fieldset > ol > li >> input {
  border-top-style := BorderStyle.solid;
  border-right-style := BorderStyle.solid;
  border-bottom-style := BorderStyle.solid;
  border-left-style := BorderStyle.solid;
  border-top-width := 1px;
  border-right-width := 1px;
  border-bottom-width := 1px;
  border-left-width := 1px;
  border-top-color := Color.grey;
  border-right-color := Color.grey;
  border-bottom-color := Color.grey;
  border-left-color := Color.grey;
  font-size := 1em;
  width := 16em;
}

description {
  A workflow example for a personal development plan workflow
}

module templates
section  templates .

  define template main () {
    if ( gentemplatepredicate0() ) {
      top()[]{
      }
      topmenu()[]{
      }
      block("mainbody0")[]{
        block("_colmask_ _leftmenu_")[]{
          block("mainbody00 _container_")[]{
            block("sidebar6 _col1_")[]{
              sidebar()[]{
              }
            },
            block("wrapper0 _colwrap_")[]{
              block("body98 _col2_ clearfix")[]{
                body()[]{
                }
              }
            }
          }
        }
      }
      dummy()[]{
      }
      footer()[]{
      }
    }
    else
    {
    }
  }

  define template top () {
    if ( gentemplatepredicate0() ) {
      block("logo_area0")[]{
        block("_colmask_ _leftmenu_")[]{
          block("logo_area00 _container_")[]{
            block("logos0 _col1_")[]{
              block("logos")[]{
                image("/images/webdsl_logo_small.png")[]{
                },
                image("/images/webdsl_logo_text.png")[]{
                }
              }
            },
            block("wrapper1 _colwrap_")[]{
              block("text0 _col2_ clearfix")[]{
                block("text")[]{
                  text("WebWorkFlow tests")[]{
                  }
                }
              }
            }
          }
        }
      }
      dummy()[]{
      }
    }
    else
    {
    }
  }

  define template topmenu () {
    if ( gentemplatepredicate0() ) {
      menubar("horizontal")[]{
        menu()[]{
          menuheader()[]{
            if ( genpagepredicatecombined24() ) {
              navigate(home())[]{
                "Home"
              }
            }
            else
            {
            }
          }
        },
        menu()[]{
          menuheader()[]{
            "User"
          },
          menuitem()[]{
            if ( genpagepredicatecombined20() ) {
              navigate(signin())[]{
                "Sign in"
              }
            }
            else
            {
            }
          }
        }
      }
    }
    else
    {
    }
  }
section  sidebar .

  define template sidebar () {
    if ( gentemplatepredicate0() ) {
      requestSidebar()[]{
      }
      valuationDetailsSidebar()[]{
      }
      propertyInfoSidebar()[]{
      }
      contextSidebar()[]{
      }
    }
    else
    {
    }
  }

  define template requestSidebar () {
    if ( gentemplatepredicate0() ) {
      requestSidebarDetails()[]{
      }
      requestSidebarBookingDetails()[]{
      }
      requestSidebarCustomFields()[]{
      }
      requestSidebarQuote()[]{
      }
    }
    else
    {
    }
  }

  define template requestSidebarDetails () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define template requestSidebarBookingDetails () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define template requestSidebarCustomFields () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define template requestSidebarQuote () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define template valuationDetailsSidebar () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define template propertyInfoSidebar () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define template contextSidebar () {
    if ( gentemplatepredicate0() ) {
      header()[]{
        "Side menu"
      }
    }
    else
    {
    }
  }
section  basic page elements. .

  define template footer () {
    if ( gentemplatepredicate0() ) {
      "generated with "
      navigate(url("http://www.webdsl.org"))[]{
        text("WebDSL")[]{
        }
      }
      " and "
      navigate(url("http://www.strategoxt.org"))[]{
        text("Stratego/XT")[]{
        }
      }
    }
    else
    {
    }
  }

module data
section  data model .

  var initPlan1 : PlanValue := PlanValue{name := "SP"} ;

  var initPlan2 : PlanValue := PlanValue{name := "DP"} ;

  var initInstrument1 : InstrumentValue := InstrumentValue{name := "Mosman LEP"} ;

  var initInstrument2 : InstrumentValue := InstrumentValue{name := "North Sydney LEP"} ;

  var initInstrument3 : InstrumentValue := InstrumentValue{name := "Rest to be done"} ;

  var initSiteDims1 : SiteDimsValue := SiteDimsValue{name := "Irregular"} ;

  var initSiteDims2 : SiteDimsValue := SiteDimsValue{name := "N/A"} ;

  var initSiteDims3 : SiteDimsValue := SiteDimsValue{name := "Regular"} ;

  var initCarAccommodation1 : CarAccommodationValue := CarAccommodationValue{name := "Carport"} ;

  var initCarAccommodation2 : CarAccommodationValue := CarAccommodationValue{name := "Carspace"} ;

  var initCarAccommodation3 : CarAccommodationValue := CarAccommodationValue{name := "DLUG"} ;

  var initCarAccommodation4 : CarAccommodationValue := CarAccommodationValue{name := "Double Carport"} ;

  var initCarAccommodation5 : CarAccommodationValue := CarAccommodationValue{name := "Double Carspace"} ;

  var initCarAccommodation6 : CarAccommodationValue := CarAccommodationValue{name := "N/A"} ;

  var initCarAccommodation7 : CarAccommodationValue := CarAccommodationValue{name := "Off-Street Parking"} ;

  var initCarAccommodation8 : CarAccommodationValue := CarAccommodationValue{name := "Security Carspace"} ;

  var initCarAccommodation9 : CarAccommodationValue := CarAccommodationValue{name := "Single Carport"} ;

  var initCarAccommodation10 : CarAccommodationValue := CarAccommodationValue{name := "SLUG"} ;

  var initCarAccommodation11 : CarAccommodationValue := CarAccommodationValue{name := "SLUG and Carport"} ;

  var initCarAccommodation12 : CarAccommodationValue := CarAccommodationValue{name := "Tandem"} ;

  var initCarAccommodation13 : CarAccommodationValue := CarAccommodationValue{name := "TLUG"} ;

  var initCarAccommodation14 : CarAccommodationValue := CarAccommodationValue{name := "Undercover Carspace"} ;

  var initMarketability1 : MarketabilityValue := MarketabilityValue{name := "Poor"} ;

  var initMarketability2 : MarketabilityValue := MarketabilityValue{name := "Fair"} ;

  var initMarketability3 : MarketabilityValue := MarketabilityValue{name := "Good"} ;

  var initStreetAppeal1 : StreetAppealValue := StreetAppealValue{name := "Poor"} ;

  var initStreetAppeal2 : StreetAppealValue := StreetAppealValue{name := "Fair"} ;

  var initStreetAppeal3 : StreetAppealValue := StreetAppealValue{name := "Good"} ;

  var initStreetAppeal4 : StreetAppealValue := StreetAppealValue{name := "Excellent"} ;

  var initWallAndRoof1 : WallAndRoofValue := WallAndRoofValue{name := "Besserblock"} ;

  var initWallAndRoof2 : WallAndRoofValue := WallAndRoofValue{name := "Brick"} ;

  var initWallAndRoof3 : WallAndRoofValue := WallAndRoofValue{name := "Brick and Concrete"} ;

  var initWallAndRoof4 : WallAndRoofValue := WallAndRoofValue{name := "Brick and Iron"} ;

  var initWallAndRoof5 : WallAndRoofValue := WallAndRoofValue{name := "Brick and Tile"} ;

  var initWallAndRoof6 : WallAndRoofValue := WallAndRoofValue{name := "Brick Veneer"} ;

  var initWallAndRoof7 : WallAndRoofValue := WallAndRoofValue{name := "Brick Veneer and Concrete Tile"} ;

  var initWallAndRoof8 : WallAndRoofValue := WallAndRoofValue{name := "Brick/Fibro and Tile"} ;

  var initWallAndRoof9 : WallAndRoofValue := WallAndRoofValue{name := "Brick/Weatherboard and Tile"} ;

  var initWallAndRoof10 : WallAndRoofValue := WallAndRoofValue{name := "Clad and Tile"} ;

  var initWallAndRoof11 : WallAndRoofValue := WallAndRoofValue{name := "Fibro"} ;

  var initWallAndRoof12 : WallAndRoofValue := WallAndRoofValue{name := "Fibro and Iron"} ;

  var initWallAndRoof13 : WallAndRoofValue := WallAndRoofValue{name := "Fibro and Tile"} ;

  var initWallAndRoof14 : WallAndRoofValue := WallAndRoofValue{name := "Granite"} ;

  var initWallAndRoof15 : WallAndRoofValue := WallAndRoofValue{name := "N/A"} ;

  var initWallAndRoof16 : WallAndRoofValue := WallAndRoofValue{name := "Permalum"} ;

  var initWallAndRoof17 : WallAndRoofValue := WallAndRoofValue{name := "Permalum and Tile"} ;

  var initWallAndRoof18 : WallAndRoofValue := WallAndRoofValue{name := "Rendered Brick and Tile"} ;

  var initWallAndRoof19 : WallAndRoofValue := WallAndRoofValue{name := "Timber"} ;

  var initWallAndRoof20 : WallAndRoofValue := WallAndRoofValue{name := "Timber and Iron"} ;

  var initWallAndRoof21 : WallAndRoofValue := WallAndRoofValue{name := "Timber and Tile"} ;

  var initWallAndRoof22 : WallAndRoofValue := WallAndRoofValue{name := "Weatherboard"} ;

  var initWallAndRoof23 : WallAndRoofValue := WallAndRoofValue{name := "Weatherboard and Tile"} ;

  var initWindowFramesValue1 : WindowFramesValue := WindowFramesValue{name := "N/A"} ;

  var initWindowFramesValue2 : WindowFramesValue := WindowFramesValue{name := "Aluminium"} ;

  var initWindowFramesValue3 : WindowFramesValue := WindowFramesValue{name := "Timber"} ;

  var initWindowFramesValue4 : WindowFramesValue := WindowFramesValue{name := "Timber and Aluminium"} ;

  var initInteriorLiningsValue1 : InteriorLiningsValue := InteriorLiningsValue{name := "Brick"} ;

  var initInteriorLiningsValue2 : InteriorLiningsValue := InteriorLiningsValue{name := "Brick and GypRock"} ;

  var initInteriorLiningsValue3 : InteriorLiningsValue := InteriorLiningsValue{name := "Brick Veneer"} ;

  var initInteriorLiningsValue4 : InteriorLiningsValue := InteriorLiningsValue{name := "Concrete"} ;

  var initInteriorLiningsValue5 : InteriorLiningsValue := InteriorLiningsValue{name := "Fibro"} ;

  var initInteriorLiningsValue6 : InteriorLiningsValue := InteriorLiningsValue{name := "Gyprock"} ;

  var initInteriorLiningsValue7 : InteriorLiningsValue := InteriorLiningsValue{name := "N/A"} ;

  var initInteriorLiningsValue8 : InteriorLiningsValue := InteriorLiningsValue{name := "Plaster"} ;

  var initInteriorLiningsValue9 : InteriorLiningsValue := InteriorLiningsValue{name := "Plasterboard"} ;

  var initInteriorLiningsValue10 : InteriorLiningsValue := InteriorLiningsValue{name := "Render"} ;

  var initInteriorLiningsValue11 : InteriorLiningsValue := InteriorLiningsValue{name := "Timber"} ;

  var initIntExtConditionValue1 : IntExtConditionValue := IntExtConditionValue{name := "N/A"} ;

  var initIntExtConditionValue2 : IntExtConditionValue := IntExtConditionValue{name := "Unknown"} ;

  var initIntExtConditionValue3 : IntExtConditionValue := IntExtConditionValue{name := "TBE"} ;

  var initIntExtConditionValue4 : IntExtConditionValue := IntExtConditionValue{name := "Poor"} ;

  var initIntExtConditionValue5 : IntExtConditionValue := IntExtConditionValue{name := "Fair"} ;

  var initIntExtConditionValue6 : IntExtConditionValue := IntExtConditionValue{name := "Good"} ;

  var initIntExtConditionValue7 : IntExtConditionValue := IntExtConditionValue{name := "Very Good"} ;

  var initIntExtConditionValue8 : IntExtConditionValue := IntExtConditionValue{name := "Excellent"} ;

  var initFlooringValue1 : FlooringValue := FlooringValue{name := "N/A"} ;

  var initFlooringValue2 : FlooringValue := FlooringValue{name := "Carpet on Concrete"} ;

  var initFlooringValue3 : FlooringValue := FlooringValue{name := "Carpet on Timber"} ;

  var initFlooringValue4 : FlooringValue := FlooringValue{name := "Concrete"} ;

  var initFlooringValue5 : FlooringValue := FlooringValue{name := "Concrete and Timber"} ;

  var initFlooringValue6 : FlooringValue := FlooringValue{name := "Polished Timber"} ;

  var initFlooringValue7 : FlooringValue := FlooringValue{name := "Timber"} ;

  var initInteriorLayoutValue1 : InteriorLayoutValue := InteriorLayoutValue{name := "Functional"} ;

  var initAnalysisValue1 : AnalysisValue := AnalysisValue{name := "1"} ;

  var initAnalysisValue2 : AnalysisValue := AnalysisValue{name := "2"} ;

  var initAnalysisValue3 : AnalysisValue := AnalysisValue{name := "3"} ;

  var initAnalysisValue4 : AnalysisValue := AnalysisValue{name := "4"} ;

  var initAnalysisValue5 : AnalysisValue := AnalysisValue{name := "5"} ;

  var initPropertyIdentificationValue1 : PropertyIdentificationValue := PropertyIdentificationValue{name := "Contract of Sale"} ;

  var initPropertyIdentificationValue2 : PropertyIdentificationValue := PropertyIdentificationValue{name := "Council Rates Notice"} ;

  var initPropertyIdentificationValue3 : PropertyIdentificationValue := PropertyIdentificationValue{name := "Council Records"} ;

  var initPropertyIdentificationValue4 : PropertyIdentificationValue := PropertyIdentificationValue{name := "CT Search"} ;

  var initPropertyIdentificationValue5 : PropertyIdentificationValue := PropertyIdentificationValue{name := "Registered Plan"} ;

  var initPropertyIdentificationValue6 : PropertyIdentificationValue := PropertyIdentificationValue{name := "Valuer Generals Notice"} ;

  var initMarketValue1 : MarketValue := MarketValue{name := "Weakening"} ;

  var initMarketValue2 : MarketValue := MarketValue{name := "Steady"} ;

  var initMarketValue3 : MarketValue := MarketValue{name := "Strengthening"} ;

  var initStateValue1 : State := State{name := "NSW"} ;

  var initStateValue2 : State := State{name := "Queensland"} ;

  var initStateValue3 : State := State{name := "Victoria"} ;

  var initStateValue4 : State := State{name := "Northern Territory"} ;

  var initStateValue5 : State := State{name := "Western Australia"} ;

  var initStateValue6 : State := State{name := "South Australia"} ;

  var initStateValue7 : State := State{name := "Tasmania"} ;

  var initPostCode1 : PostCode := PostCode{name := "2026"} ;

  var initPostCode2 : PostCode := PostCode{name := "2088"} ;

  var initPostCode3 : PostCode := PostCode{name := "2132"} ;

  var initPostCode4 : PostCode := PostCode{name := "2342"} ;

  var initPropertyCategory1 : PropertyCategory := PropertyCategory{name := "Residential"} ;

  var initPropertyCategory2 : PropertyCategory := PropertyCategory{name := "Offices"} ;

  var initPropertyCategory3 : PropertyCategory := PropertyCategory{name := "Kekstra"} ;

  var initPropertyType1 : PropertyType := PropertyType{name := "House"} ;

  var initPropertyType2 : PropertyType := PropertyType{name := "Flat"} ;

  var initPropertyType3 : PropertyType := PropertyType{name := "Appartment"} ;

  var initReportType1 : ReportType := ReportType{name := "Short Report"} ;

  var initReportType2 : ReportType := ReportType{name := "Extensive Report"} ;

  var initReportType3 : ReportType := ReportType{name := "Too long Report"} ;

  var initPropose1 : Propose := Propose{name := "Market"} ;

  var initPropose2 : Propose := Propose{name := "Market too"} ;

  var initPropose3 : Propose := Propose{name := "What other values?"} ;

  var initValuationRequestStatus1 : ValuationRequestStatus := ValuationRequestStatus{name := "Request Received"} ;

  var initValuationRequestStatus2 : ValuationRequestStatus := ValuationRequestStatus{name := "Booked"} ;

  var initValuationRequestStatus3 : ValuationRequestStatus := ValuationRequestStatus{name := "Pending"} ;

  var initValuationRequestStatus4 : ValuationRequestStatus := ValuationRequestStatus{name := "Awaiting Approval"} ;

  var initValuationRequestStatus5 : ValuationRequestStatus := ValuationRequestStatus{name := "Approved"} ;

  var initValuationRequestStatus6 : ValuationRequestStatus := ValuationRequestStatus{name := "Sent"} ;

  var initComparisonValue1 : ComparisonValue := ComparisonValue{name := "Inferior"} ;

  var initComparisonValue2 : ComparisonValue := ComparisonValue{name := "Similar"} ;

  var initComparisonValue3 : ComparisonValue := ComparisonValue{name := "Superior"} ;

  var aManager : User := User{username := "manager" name := "Joe Manager" password := "secret"} ;

  var aUser : User := User{username := "user" name := "Joe User" password := "secret" manager := aManager} ;

  entity User {
    username :: String ( )
    name :: String ( )
    password :: Secret ( )
    manager -> User ( )
  }

  entity PlanValue {
    name :: String ( )
  }

  define page planValue (object18 : PlanValue) {
    init
    {
      if ( genpagepredicatecombined1(object18) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object18.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object18.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity InstrumentValue {
    name :: String ( )
  }

  define page instrumentValue (object19 : InstrumentValue) {
    init
    {
      if ( genpagepredicatecombined2(object19) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object19.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object19.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity SiteDimsValue {
    name :: String ( )
  }

  define page siteDimsValue (object20 : SiteDimsValue) {
    init
    {
      if ( genpagepredicatecombined3(object20) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object20.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object20.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity CarAccommodationValue {
    name :: String ( )
  }

  define page carAccommodationValue (object21 : CarAccommodationValue) {
    init
    {
      if ( genpagepredicatecombined4(object21) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object21.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object21.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity MarketabilityValue {
    name :: String ( )
  }

  define page marketabilityValue (object22 : MarketabilityValue) {
    init
    {
      if ( genpagepredicatecombined5(object22) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object22.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object22.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity StreetAppealValue {
    name :: String ( )
  }

  define page streetAppealValue (object23 : StreetAppealValue) {
    init
    {
      if ( genpagepredicatecombined6(object23) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object23.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object23.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity WallAndRoofValue {
    name :: String ( )
  }

  define page wallAndRoofValue (object24 : WallAndRoofValue) {
    init
    {
      if ( genpagepredicatecombined7(object24) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object24.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object24.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity WindowFramesValue {
    name :: String ( )
  }

  define page windowFramesValue (object25 : WindowFramesValue) {
    init
    {
      if ( genpagepredicatecombined8(object25) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object25.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object25.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity InteriorLiningsValue {
    name :: String ( )
  }

  define page interiorLiningsValue (object26 : InteriorLiningsValue) {
    init
    {
      if ( genpagepredicatecombined9(object26) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object26.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object26.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity IntExtConditionValue {
    name :: String ( )
  }

  define page intExtConditionValue (object27 : IntExtConditionValue) {
    init
    {
      if ( genpagepredicatecombined10(object27) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object27.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object27.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity FlooringValue {
    name :: String ( )
  }

  define page flooringValue (object28 : FlooringValue) {
    init
    {
      if ( genpagepredicatecombined11(object28) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object28.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object28.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity InteriorLayoutValue {
    name :: String ( )
  }

  define page interiorLayoutValue (object29 : InteriorLayoutValue) {
    init
    {
      if ( genpagepredicatecombined12(object29) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object29.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object29.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity AnalysisValue {
    name :: String ( )
  }

  define page analysisValue (object30 : AnalysisValue) {
    init
    {
      if ( genpagepredicatecombined13(object30) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object30.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object30.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity PropertyIdentificationValue {
    name :: String ( )
  }

  define page propertyIdentificationValue (object31 : PropertyIdentificationValue) {
    init
    {
      if ( genpagepredicatecombined14(object31) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object31.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object31.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity MarketValue {
    name :: String ( )
  }

  define page marketValue (object32 : MarketValue) {
    init
    {
      if ( genpagepredicatecombined15(object32) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object32.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object32.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity Client {
    name :: String ( )
  }

  entity Broker {
    name :: String ( )
  }

  entity State {
    name :: String ( )
  }

  entity PostCode {
    name :: String ( )
  }

  entity PropertyCategory {
    name :: String ( )
  }

  entity PropertyType {
    name :: String ( )
  }

  entity ReportType {
    name :: String ( )
  }

  entity Propose {
    name :: String ( )
  }

  entity ValuationRequestStatus {
    name :: String ( )
  }

  entity ValuationRequest {
    fullAddress :: String ( ) := this.address + " " + this.suburb + " " + this.state.name + " " + this.postCode.name
    name :: String ( ) := this.fullAddress
    status -> ValuationRequestStatus ( )
    client -> Client ( )
    primaryInterest :: String ( )
    broker -> Broker ( )
    lenderContact :: String ( )
    reference :: String ( )
    address :: String ( )
    suburb :: String ( )
    state -> State ( )
    postCode -> PostCode ( )
    category -> PropertyCategory ( )
    type -> PropertyType ( )
    comments :: Text ( )
    reportType -> ReportType ( )
    propose -> Propose ( )
    applicantName :: String ( )
    applicantPhone :: String ( )
    inspectionName :: String ( )
    inspectionPhone :: String ( )
    purchase :: String ( )
    ownerEst :: String ( )
    tender :: String ( )
  }

  entity Valuation {
    valuationNumber :: Int ( id )
    invoiceNumber :: Int ( )
    zaluationRequest -> ValuationRequest ( )
    lot :: Int ( )
    plan -> PlanValue ( )
    planNumber :: Int ( )
    proprietor :: String ( )
    zoning :: String ( )
    council :: String ( )
    instrument -> InstrumentValue ( )
    siteDims -> SiteDimsValue ( )
    siteArea :: Int ( )
    carAccommodation -> CarAccommodationValue ( )
    carArea :: Int ( )
    livingArea :: Int ( )
    outdoorArea :: Int ( )
    otherArea :: Int ( )
    currentUse :: String ( )
    mainBuilding :: String ( )
    builtAbout :: String ( )
    additions :: String ( )
    heritageIssues :: String ( )
    envIssues :: String ( )
    essRepairs :: String ( )
    actualRent :: Int ( )
    marketability -> MarketabilityValue ( )
    view :: Text ( )
    buildingStyle :: String ( )
    streetAppeal -> StreetAppealValue ( )
    wallAndRoof -> WallAndRoofValue ( )
    windowFrames -> WindowFramesValue ( )
    interiorLinings -> InteriorLiningsValue ( )
    internalCondition -> IntExtConditionValue ( )
    externalCondition -> IntExtConditionValue ( )
    flooring -> FlooringValue ( )
    interiorLayoutValue -> InteriorLayoutValue ( )
    accommodation :: Text ( )
    pcItems :: Text ( )
    fixturesAndFeatures :: Text ( )
    bedrooms :: Int ( )
    bathrooms :: Int ( )
    ensuites :: Int ( )
    locationRisk -> AnalysisValue ( )
    landRisk -> AnalysisValue ( )
    environmentalIssuesRisk -> AnalysisValue ( )
    improvementsRisk -> AnalysisValue ( )
    reducedValueRisk -> AnalysisValue ( )
    marketVolatilityRisk -> AnalysisValue ( )
    localEconomyImpactRisk -> AnalysisValue ( )
    marketSegmentConditionRisk -> AnalysisValue ( )
    propertyIdentification -> PropertyIdentificationValue ( )
    hasTitleBeenSearched :: Bool ( )
    zoningEffect :: Text ( )
    location :: Text ( )
    siteDescriptionAndAccess :: Text ( )
    services :: Text ( )
    servicesConnectedToProperty :: Bool ( )
    neighbourhood :: Text ( )
    ancillaryImprovements :: Text ( )
    salesEvidence -> Set<SalesEvidence> ( )
    levelOfActivity -> MarketValue ( )
    recentDirection -> MarketValue ( )
    multiTier :: Bool ( )
    latestSaleDate :: Date ( )
    latestSalePrice :: Int ( )
    latestSaleComment :: Text ( )
  }

  define page valuation (object33 : Valuation) {
    init
    {
      if ( genpagepredicatecombined16(object33) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object33.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Valuation number: ")[]{
                outputInt(object33.valuationNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Invoice number: ")[]{
                outputInt(object33.invoiceNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Zaluation request: ")[]{
                dummy()[]{
                  if ( object33.zaluationRequest != null ) {
                    navigate(valuationRequest(object33.zaluationRequest))[]{
                      text(object33.zaluationRequest.name)[]{
                      }
                    }
                  }
                  else
                  {
                  },
                  if ( object33.zaluationRequest == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Lot: ")[]{
                outputInt(object33.lot)[]{
                }
              }
            },
            groupitem()[]{
              label("Plan: ")[]{
                dummy()[]{
                  if ( object33.plan != null ) {
                    if ( genpagepredicatecombined1(object33.plan) ) {
                      navigate(planValue(object33.plan))[]{
                        text(object33.plan.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.plan == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Plan number: ")[]{
                outputInt(object33.planNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Proprietor: ")[]{
                text(object33.proprietor)[]{
                }
              }
            },
            groupitem()[]{
              label("Zoning: ")[]{
                text(object33.zoning)[]{
                }
              }
            },
            groupitem()[]{
              label("Council: ")[]{
                text(object33.council)[]{
                }
              }
            },
            groupitem()[]{
              label("Instrument: ")[]{
                dummy()[]{
                  if ( object33.instrument != null ) {
                    if ( genpagepredicatecombined2(object33.instrument) ) {
                      navigate(instrumentValue(object33.instrument))[]{
                        text(object33.instrument.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.instrument == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Site dims: ")[]{
                dummy()[]{
                  if ( object33.siteDims != null ) {
                    if ( genpagepredicatecombined3(object33.siteDims) ) {
                      navigate(siteDimsValue(object33.siteDims))[]{
                        text(object33.siteDims.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.siteDims == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Site area: ")[]{
                outputInt(object33.siteArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Car accommodation: ")[]{
                dummy()[]{
                  if ( object33.carAccommodation != null ) {
                    if ( genpagepredicatecombined4(object33.carAccommodation) ) {
                      navigate(carAccommodationValue(object33.carAccommodation))[]{
                        text(object33.carAccommodation.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.carAccommodation == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Car area: ")[]{
                outputInt(object33.carArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Living area: ")[]{
                outputInt(object33.livingArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Outdoor area: ")[]{
                outputInt(object33.outdoorArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Other area: ")[]{
                outputInt(object33.otherArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Current use: ")[]{
                text(object33.currentUse)[]{
                }
              }
            },
            groupitem()[]{
              label("Main building: ")[]{
                text(object33.mainBuilding)[]{
                }
              }
            },
            groupitem()[]{
              label("Built about: ")[]{
                text(object33.builtAbout)[]{
                }
              }
            },
            groupitem()[]{
              label("Additions: ")[]{
                text(object33.additions)[]{
                }
              }
            },
            groupitem()[]{
              label("Heritage issues: ")[]{
                text(object33.heritageIssues)[]{
                }
              }
            },
            groupitem()[]{
              label("Env issues: ")[]{
                text(object33.envIssues)[]{
                }
              }
            },
            groupitem()[]{
              label("Ess repairs: ")[]{
                text(object33.essRepairs)[]{
                }
              }
            },
            groupitem()[]{
              label("Actual rent: ")[]{
                outputInt(object33.actualRent)[]{
                }
              }
            },
            groupitem()[]{
              label("Marketability: ")[]{
                dummy()[]{
                  if ( object33.marketability != null ) {
                    if ( genpagepredicatecombined5(object33.marketability) ) {
                      navigate(marketabilityValue(object33.marketability))[]{
                        text(object33.marketability.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.marketability == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("View: ")[]{
                outputText(object33.view)[]{
                }
              }
            },
            groupitem()[]{
              label("Building style: ")[]{
                text(object33.buildingStyle)[]{
                }
              }
            },
            groupitem()[]{
              label("Street appeal: ")[]{
                dummy()[]{
                  if ( object33.streetAppeal != null ) {
                    if ( genpagepredicatecombined6(object33.streetAppeal) ) {
                      navigate(streetAppealValue(object33.streetAppeal))[]{
                        text(object33.streetAppeal.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.streetAppeal == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Wall and roof: ")[]{
                dummy()[]{
                  if ( object33.wallAndRoof != null ) {
                    if ( genpagepredicatecombined7(object33.wallAndRoof) ) {
                      navigate(wallAndRoofValue(object33.wallAndRoof))[]{
                        text(object33.wallAndRoof.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.wallAndRoof == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Window frames: ")[]{
                dummy()[]{
                  if ( object33.windowFrames != null ) {
                    if ( genpagepredicatecombined8(object33.windowFrames) ) {
                      navigate(windowFramesValue(object33.windowFrames))[]{
                        text(object33.windowFrames.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.windowFrames == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Interior linings: ")[]{
                dummy()[]{
                  if ( object33.interiorLinings != null ) {
                    if ( genpagepredicatecombined9(object33.interiorLinings) ) {
                      navigate(interiorLiningsValue(object33.interiorLinings))[]{
                        text(object33.interiorLinings.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.interiorLinings == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Internal condition: ")[]{
                dummy()[]{
                  if ( object33.internalCondition != null ) {
                    if ( genpagepredicatecombined10(object33.internalCondition) ) {
                      navigate(intExtConditionValue(object33.internalCondition))[]{
                        text(object33.internalCondition.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.internalCondition == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("External condition: ")[]{
                dummy()[]{
                  if ( object33.externalCondition != null ) {
                    if ( genpagepredicatecombined10(object33.externalCondition) ) {
                      navigate(intExtConditionValue(object33.externalCondition))[]{
                        text(object33.externalCondition.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.externalCondition == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Flooring: ")[]{
                dummy()[]{
                  if ( object33.flooring != null ) {
                    if ( genpagepredicatecombined11(object33.flooring) ) {
                      navigate(flooringValue(object33.flooring))[]{
                        text(object33.flooring.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.flooring == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Interior layout value: ")[]{
                dummy()[]{
                  if ( object33.interiorLayoutValue != null ) {
                    if ( genpagepredicatecombined12(object33.interiorLayoutValue) ) {
                      navigate(interiorLayoutValue(object33.interiorLayoutValue))[]{
                        text(object33.interiorLayoutValue.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.interiorLayoutValue == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Accommodation: ")[]{
                outputText(object33.accommodation)[]{
                }
              }
            },
            groupitem()[]{
              label("Pc items: ")[]{
                outputText(object33.pcItems)[]{
                }
              }
            },
            groupitem()[]{
              label("Fixtures and features: ")[]{
                outputText(object33.fixturesAndFeatures)[]{
                }
              }
            },
            groupitem()[]{
              label("Bedrooms: ")[]{
                outputInt(object33.bedrooms)[]{
                }
              }
            },
            groupitem()[]{
              label("Bathrooms: ")[]{
                outputInt(object33.bathrooms)[]{
                }
              }
            },
            groupitem()[]{
              label("Ensuites: ")[]{
                outputInt(object33.ensuites)[]{
                }
              }
            },
            groupitem()[]{
              label("Location risk: ")[]{
                dummy()[]{
                  if ( object33.locationRisk != null ) {
                    if ( genpagepredicatecombined13(object33.locationRisk) ) {
                      navigate(analysisValue(object33.locationRisk))[]{
                        text(object33.locationRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.locationRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Land risk: ")[]{
                dummy()[]{
                  if ( object33.landRisk != null ) {
                    if ( genpagepredicatecombined13(object33.landRisk) ) {
                      navigate(analysisValue(object33.landRisk))[]{
                        text(object33.landRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.landRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Environmental issues risk: ")[]{
                dummy()[]{
                  if ( object33.environmentalIssuesRisk != null ) {
                    if ( genpagepredicatecombined13(object33.environmentalIssuesRisk) ) {
                      navigate(analysisValue(object33.environmentalIssuesRisk))[]{
                        text(object33.environmentalIssuesRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.environmentalIssuesRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Improvements risk: ")[]{
                dummy()[]{
                  if ( object33.improvementsRisk != null ) {
                    if ( genpagepredicatecombined13(object33.improvementsRisk) ) {
                      navigate(analysisValue(object33.improvementsRisk))[]{
                        text(object33.improvementsRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.improvementsRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Reduced value risk: ")[]{
                dummy()[]{
                  if ( object33.reducedValueRisk != null ) {
                    if ( genpagepredicatecombined13(object33.reducedValueRisk) ) {
                      navigate(analysisValue(object33.reducedValueRisk))[]{
                        text(object33.reducedValueRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.reducedValueRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Market volatility risk: ")[]{
                dummy()[]{
                  if ( object33.marketVolatilityRisk != null ) {
                    if ( genpagepredicatecombined13(object33.marketVolatilityRisk) ) {
                      navigate(analysisValue(object33.marketVolatilityRisk))[]{
                        text(object33.marketVolatilityRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.marketVolatilityRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Local economy impact risk: ")[]{
                dummy()[]{
                  if ( object33.localEconomyImpactRisk != null ) {
                    if ( genpagepredicatecombined13(object33.localEconomyImpactRisk) ) {
                      navigate(analysisValue(object33.localEconomyImpactRisk))[]{
                        text(object33.localEconomyImpactRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.localEconomyImpactRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Market segment condition risk: ")[]{
                dummy()[]{
                  if ( object33.marketSegmentConditionRisk != null ) {
                    if ( genpagepredicatecombined13(object33.marketSegmentConditionRisk) ) {
                      navigate(analysisValue(object33.marketSegmentConditionRisk))[]{
                        text(object33.marketSegmentConditionRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.marketSegmentConditionRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Property identification: ")[]{
                dummy()[]{
                  if ( object33.propertyIdentification != null ) {
                    if ( genpagepredicatecombined14(object33.propertyIdentification) ) {
                      navigate(propertyIdentificationValue(object33.propertyIdentification))[]{
                        text(object33.propertyIdentification.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.propertyIdentification == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Has title been searched: ")[]{
                outputBool(object33.hasTitleBeenSearched)[]{
                }
              }
            },
            groupitem()[]{
              label("Zoning effect: ")[]{
                outputText(object33.zoningEffect)[]{
                }
              }
            },
            groupitem()[]{
              label("Location: ")[]{
                outputText(object33.location)[]{
                }
              }
            },
            groupitem()[]{
              label("Site description and access: ")[]{
                outputText(object33.siteDescriptionAndAccess)[]{
                }
              }
            },
            groupitem()[]{
              label("Services: ")[]{
                outputText(object33.services)[]{
                }
              }
            },
            groupitem()[]{
              label("Services connected to property: ")[]{
                outputBool(object33.servicesConnectedToProperty)[]{
                }
              }
            },
            groupitem()[]{
              label("Neighbourhood: ")[]{
                outputText(object33.neighbourhood)[]{
                }
              }
            },
            groupitem()[]{
              label("Ancillary improvements: ")[]{
                outputText(object33.ancillaryImprovements)[]{
                }
              }
            },
            groupitem()[]{
              label("Sales evidence: ")[]{
                list()[]{
                  for ( salesEvidence09 : SalesEvidence in object33.salesEvidenceList where true order by null asc limit 1000 offset 0 ) {
                    listitem()[]{
                      dummy()[]{
                        if ( salesEvidence09 != null ) {
                          if ( genpagepredicatecombined19(salesEvidence09) ) {
                            navigate(salesEvidence(salesEvidence09))[]{
                              text(salesEvidence09.name)[]{
                              }
                            }
                          }
                          else
                          {
                          }
                        }
                        else
                        {
                        },
                        if ( salesEvidence09 == null ) {
                          text("null")[]{
                          }
                        }
                        else
                        {
                        }
                      }
                    }
                  }
                }
              }
            },
            groupitem()[]{
              label("Level of activity: ")[]{
                dummy()[]{
                  if ( object33.levelOfActivity != null ) {
                    if ( genpagepredicatecombined15(object33.levelOfActivity) ) {
                      navigate(marketValue(object33.levelOfActivity))[]{
                        text(object33.levelOfActivity.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.levelOfActivity == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Recent direction: ")[]{
                dummy()[]{
                  if ( object33.recentDirection != null ) {
                    if ( genpagepredicatecombined15(object33.recentDirection) ) {
                      navigate(marketValue(object33.recentDirection))[]{
                        text(object33.recentDirection.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object33.recentDirection == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Multi tier: ")[]{
                outputBool(object33.multiTier)[]{
                }
              }
            },
            groupitem()[]{
              label("Latest sale date: ")[]{
                outputDate(object33.latestSaleDate)[]{
                }
              }
            },
            groupitem()[]{
              label("Latest sale price: ")[]{
                outputInt(object33.latestSalePrice)[]{
                }
              }
            },
            groupitem()[]{
              label("Latest sale comment: ")[]{
                outputText(object33.latestSaleComment)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  entity ComparisonValue {
    name :: String ( )
  }

  define page comparisonValue (object34 : ComparisonValue) {
    init
    {
      if ( genpagepredicatecombined17(object34) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object34.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Name: ")[]{
                text(object34.name)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page allComparisonValue () {
    init
    {
      if ( genpagepredicatecombined18() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    define local body () {
      for ( c11 : ComparisonValue where true order by null asc limit 1000 offset 0 ) {
        text(c11.name)[]{
        }
        text(" ")[]{
        }
      }
    }
  }

  entity SalesEvidence {
    address :: String ( )
    saleDate :: Date ( )
    price :: Int ( )
    comment :: Text ( )
    comparison -> ComparisonValue ( )
  }

  define page salesEvidence (object35 : SalesEvidence) {
    init
    {
      if ( genpagepredicatecombined19(object35) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(object35.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Address: ")[]{
                text(object35.address)[]{
                }
              }
            },
            groupitem()[]{
              label("Sale date: ")[]{
                outputDate(object35.saleDate)[]{
                }
              }
            },
            groupitem()[]{
              label("Price: ")[]{
                outputInt(object35.price)[]{
                }
              }
            },
            groupitem()[]{
              label("Comment: ")[]{
                outputText(object35.comment)[]{
                }
              }
            },
            groupitem()[]{
              label("Comparison: ")[]{
                dummy()[]{
                  if ( object35.comparison != null ) {
                    if ( genpagepredicatecombined17(object35.comparison) ) {
                      navigate(comparisonValue(object35.comparison))[]{
                        text(object35.comparison.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( object35.comparison == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            }
          }
        }
      }
    }
  }

module ac
access control rules
  anonymous
  rule page createPdpMeeting (  ) {
    true
    rule action * ( * ) {
      true
    }
  }
  rule page * ( * ) {
    true
    rule action * ( * ) {
      true
    }
  }
  rule action * ( * ) {
    true
  }
  rule template * ( * ) {
    true
    rule action * ( * ) {
      true
    }
  }
section  pages .

  session securityContext {
    principal -> User ( )
    loggedIn :: Bool ( )
  }

  function loggedIn ( ) : Bool
  {
    return securityContext != null && securityContext.loggedIn && securityContext.principal != null;
  }

  define page signin () {
    init
    {
      if ( genpagepredicatecombined20() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    title()[]{
      "Log in"
    }
    define local body () {
      var username10 : String ;
      var password10 : Secret ;
      form()[]{
        table()[]{
          row()[]{
            "Username: ",
            inputString(username10)[]{
            }
          },
          row()[]{
            "Password: ",
            inputSecret(password10)[]{
            }
          },
          row()[]{
            if ( genactionpredicatecombined0() ) {
              action("Sign in", dosignin())[]{
              }
            }
            else
            {
            },
            ""
          }
        },
        action dosignin ( )
        {
          if ( genactionpredicatecombined0() )
          {
            for ( us : User where us.username == username10 order by null asc limit 1000 offset 0 )
            {
              if ( us.password.check(password10) )
              {
                securityContext.principal := us;
                securityContext.loggedIn := true;
              }
              else
              {
              }
            }
            securityContext.loggedIn := false;
            return error("Wrong combination of username and password");
          }
          else
          {
            return accessDenied();
          }
        }
      }
    }
  }

  define page error (msg2 : String) {
    init
    {
      if ( genpagepredicatecombined21(msg2) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    title()[]{
      "Error"
    }
    define local body () {
      header()[]{
        "Error"
      }
      text(msg2)[]{
      }
    }
  }

  define page message (msg3 : String) {
    init
    {
      if ( genpagepredicatecombined22(msg3) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    title()[]{
      "Message"
    }
    define local body () {
      header()[]{
        "Message"
      }
      section()[]{
        text(msg3)[]{
        }
      }
    }
  }

module layout
layout
template
main()
{
top()
;
topmenu()
;
mainbody0: [ sidebar() body() ]
;
footer()
;
}
template
top()
{
logo_area0: [ logos text ]
;
}
template
footer()
{
f0: [ footer_links footer_text ]
;
}

module style
style
globalStyle
const mainColor : Color := # 330099 ;
const globalFont : Font := Font.Lucida.Grande ;
const globalFontSize : Length := 0.75em ;
const layoutBorderColor : Color := # c0c0c0 ;
.section {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
a {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
h1 {
  font := Font.Lucida.Grande;
  font-size := 0.99997499999999995em;
  margin-top := 0px;
}
table {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
table >> tr > th {
  border-top-color := #c0c0c0;
  border-right-color := #c0c0c0;
  border-bottom-color := #c0c0c0;
  border-left-color := #c0c0c0;
  font := Font.Lucida.Grande;
  font-size := 1em;
  font-weight := bold;
  color := #404040;
  image := url("images/menubar_bg.png");
  background-repeat := repeat-x;
}
table >> tr > td {
  background-color := Color.white;
}
.block {
  font := Font.Lucida.Grande;
  font-size := 1em;
}
form {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
form >> fieldset {
  font-size := 0.99974999999999992em;
}
fieldset {
  font := Font.Lucida.Grande;
  font-size := 0.75em;
}
fieldset >> a {
  font-size := 0.99974999999999992em;
}
style
templateStyle
template topmenu() {
  width := 100%;
  margin-bottom := 1em;
}
template top() {
  background-color := Color.white;
  width := 100%;
}
template top() >> .logos {
  width := 25em;
}
template top() > .logo_area0 {
  margin-left := auto;
  margin-right := auto;
  width := 80%;
}
template main() > .mainbody0 {
  margin-left := auto;
  margin-right := auto;
  width := 80%;
  padding-top := 4px;
}
template sidebar() {
  width := 15em;
  padding := 1em;
}
template body() {
  padding := 1em;
  border-left-color := #c0c0c0;
  border-left-style := BorderStyle.solid;
  border-left-width := 1px;
}
template footer() {
  background-color := Color.white;
  border-top-width := 1px;
  border-top-color := #c0c0c0;
  border-top-style := BorderStyle.solid;
  font := Font.Lucida.Grande;
  font-size := 0.7em;
  width := 100%;
  margin-top := 1em;
}
style
formStyle
const labelWidth : Length := 8em ;
const formItemSpacing : Length := 0.3em ;
fieldset > ol > li {
  padding-bottom := 0.3em;
}
fieldset {
  border-top-color := #003399;
  border-bottom-color := #003399;
}
style
menuStyle
const globalBorderColor : Color := # c0c0c0 ;
const fontColor : Color := # 505050 ;
template topmenu() {
  background-color := #ffff00;
  image := url("images/menubar_bg.png");
  background-repeat := repeat-x;
}
template topmenu() >> .menubar {
  margin-left := auto;
  margin-right := auto;
  width := 80%;
}
template topmenu() >> ul > li > a {
  padding := 0.3em;
  font := Font.Lucida.Grande;
  color := #505050;
  font-size := 0.75em;
  text-decoration := none;
}
template topmenu() >> ul >> a .hover {
  image := url("images/menubar_bg_hover.png");
  background-repeat := repeat-x;
}
style
footerStyle
template footer() >> ul > li {
  float := left;
}
template footer() >> ul > li .before {
  content := '|';
}
template footer() >> ul > li .before {
  margin-right := 1em;
  margin-left := 1em;
}
template footer() >> .footer_text {
  float := right;
}
template footer() >> .footer_links {
  float := left;
}
template footer() >> a {
  font-size := 1.0em;
}
template footer() >> ul {
  list-style := none;
  padding-left := 0;
  separator := Separator.pipe;
}
style
groupStyle
fieldset >> label {
  width := 13em;
}
fieldset >> .text {
  width := 40em;
}
ol > li >> p {
  font-weight := bold;
}

module testsidebar
section  templates .

  define template testSidebarTemplate (d12 : Int, d22 : Int) {
    if ( gentemplatepredicate0() ) {
      if ( d12 == 1 ) {
        details1()[]{
        }
        if ( genpagepredicatecombined23(0, d22) ) {
          navigate(testSidebar(0, d22))[]{
            "1 dichtklappen"
          }
        }
        else
        {
        }
      }
      else
      {
      }
      if ( d12 != 1 ) {
        if ( genpagepredicatecombined23(1, d22) ) {
          navigate(testSidebar(1, d22))[]{
            "1 openklappen"
          }
        }
        else
        {
        }
      }
      else
      {
      }
      if ( d22 == 1 ) {
        details2()[]{
        }
        if ( genpagepredicatecombined23(d12, 0) ) {
          navigate(testSidebar(d12, 0))[]{
            "2 dichtklappen"
          }
        }
        else
        {
        }
      }
      else
      {
      }
      if ( d22 != 1 ) {
        if ( genpagepredicatecombined23(d12, 1) ) {
          navigate(testSidebar(d12, 1))[]{
            "2 openklappen"
          }
        }
        else
        {
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }

  define template details1 () {
    if ( gentemplatepredicate0() ) {
      if ( genpagepredicatecombined24() ) {
        navigate(home())[]{
          "blabla1"
        }
      }
      else
      {
      }
      if ( genpagepredicatecombined24() ) {
        navigate(home())[]{
          "blabla2"
        }
      }
      else
      {
      }
      if ( genpagepredicatecombined24() ) {
        navigate(home())[]{
          "blabla3"
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }

  define template details2 () {
    if ( gentemplatepredicate0() ) {
      if ( genpagepredicatecombined24() ) {
        navigate(home())[]{
          "sdfsdf1"
        }
      }
      else
      {
      }
      if ( genpagepredicatecombined24() ) {
        navigate(home())[]{
          "sdfsdf2"
        }
      }
      else
      {
      }
      if ( genpagepredicatecombined24() ) {
        navigate(home())[]{
          "sdfsdf3"
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }
section  pages .

  define page testSidebar (d13 : Int, d23 : Int) {
    init
    {
      if ( genpagepredicatecombined23(d13, d23) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    define local sidebar () {
      testSidebarTemplate(d13, d23)[]{
      }
    }
    define local body () {
      text("Dit is echt vet. d1: ")[]{
      }
      text(d13)[]{
      }
      text(" d2: ")[]{
      }
      text(d23)[]{
      }
    }
  }

section  pages .

  define template body () {
    if ( gentemplatepredicate0() ) {
    }
    else
    {
    }
  }

  define page home () {
    init
    {
      if ( genpagepredicatecombined24() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    define local body () {
      header()[]{
        "Integrated Property Services"
      }
      section()[]{
        text("Welcome")[]{
        }
      }
      group()[]{
        if ( genpagepredicatecombined25() ) {
          navigate(allValuations())[]{
            "All Valuations"
          }
        }
        else
        {
        },
        if ( genpagepredicatecombined26() ) {
          navigate(newValuationRequest())[]{
            "New ValuationRequest"
          }
        }
        else
        {
        }
      }
      section()[]{
        if ( genpagepredicatecombined23(1, 0) ) {
          navigate(testSidebar(1, 0))[]{
            "Test sidebar"
          }
        }
        else
        {
        }
      }
    }
  }

  define page allValuations () {
    init
    {
      if ( genpagepredicatecombined25() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    define local body () {
      for ( v17 : Valuation where true order by null asc limit 1000 offset 0 ) {
        text(v17.name)[]{
        }
        text(" ")[]{
        }
      }
    }
  }

  define page newValuationRequest () {
    init
    {
      if ( genpagepredicatecombined26() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    var r3 : ValuationRequest := ValuationRequest{} ;
    var v18 : Valuation := Valuation{} ;
    var newClient2 : Client := Client{} ;
    main()[]{
    }
    define local body () {
      header()[]{
        text("New Valuation Request")[]{
        }
      }
      table()[]{
        row()[]{
          group("Property address")[]{
            groupitem()[]{
              label("Address")[]{
                inputString(r3.address)[]{
                }
              }
            },
            groupitem()[]{
              label("Suburb")[]{
                inputString(r3.suburb)[]{
                }
              }
            },
            groupitem()[]{
              label("State")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( state19 : State , Select , r3.state )
                }
              }
            },
            groupitem()[]{
              label("Post Code")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( postCode09 : PostCode , Select , r3.postCode )
                }
              }
            }
          },
          group("Client")[]{
            groupitem()[]{
              label("")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( client09 : Client , Select , r3.client )
                }
              }
            },
            groupitem()[]{
              label("or new client")[]{
                inputString(newClient2.name)[]{
                }
              }
            }
          }
        },
        row()[]{
          group("Property Characteristics")[]{
            groupitem()[]{
              label("Category")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( propertyCategory09 : PropertyCategory , Select , r3.category )
                }
              }
            },
            groupitem()[]{
              label("Type")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( propertyType09 : PropertyType , Select , r3.type )
                }
              }
            }
          },
          group("Applicant")[]{
            groupitem()[]{
              label("Name")[]{
                inputString(r3.applicantName)[]{
                }
              }
            },
            groupitem()[]{
              label("Phone")[]{
                inputString(r3.applicantPhone)[]{
                }
              }
            }
          }
        },
        row()[]{
          group("Specifications")[]{
            groupitem()[]{
              label("Report Type")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( reportType09 : ReportType , Select , r3.reportType )
                }
              }
            },
            groupitem()[]{
              label("Propose")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( propose09 : Propose , Select , r3.propose )
                }
              }
            }
          },
          group("Inspection Contact")[]{
            groupitem()[]{
              label("Name")[]{
                inputString(r3.inspectionName)[]{
                }
              }
            },
            groupitem()[]{
              label("Phone")[]{
                inputString(r3.inspectionPhone)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page testValuation () {
    init
    {
      if ( genpagepredicatecombined27() )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    main()[]{
    }
    var v19 : Valuation := Valuation{} ;
    define local body () {
      header()[]{
        text(v19.name)[]{
        },
        text("Property Summary")[]{
        }
      }
      table()[]{
        row()[]{
          group("Property Summary 1")[]{
            groupitem()[]{
              label("Lot")[]{
                inputInt(v19.lot)[]{
                }
              }
            },
            groupitem()[]{
              label("Plan")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( planValue09 : PlanValue , Select , v19.plan )
                }
              }
            },
            groupitem()[]{
              label("Plan No.")[]{
                inputInt(v19.planNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Proprietor")[]{
                inputString(v19.proprietor)[]{
                }
              }
            },
            groupitem()[]{
              label("Zoning")[]{
                inputString(v19.zoning)[]{
                }
              }
            },
            groupitem()[]{
              label("Council")[]{
                inputString(v19.council)[]{
                }
              }
            },
            groupitem()[]{
              label("Instrument")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( instrumentValue09 : InstrumentValue , Select , v19.instrument )
                }
              }
            }
          },
          group("Property Summary 2")[]{
            groupitem()[]{
              label("Site Dims")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( siteDimsValue09 : SiteDimsValue , Select , v19.siteDims )
                }
              }
            },
            groupitem()[]{
              label("Site Area")[]{
                inputInt(v19.siteArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Car Accom.")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( carAccommodationValue09 : CarAccommodationValue , Select , v19.carAccommodation )
                }
              }
            },
            groupitem()[]{
              label("Car Area")[]{
                inputInt(v19.carArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Living Area")[]{
                inputInt(v19.livingArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Outdoor Area")[]{
                inputInt(v19.outdoorArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Other Area")[]{
                inputInt(v19.otherArea)[]{
                }
              }
            }
          }
        },
        row()[]{
          group("Property Summary 3")[]{
            groupitem()[]{
              label("Current Use")[]{
                inputString(v19.currentUse)[]{
                }
              }
            },
            groupitem()[]{
              label("Main Building")[]{
                inputString(v19.mainBuilding)[]{
                }
              }
            },
            groupitem()[]{
              label("Built About")[]{
                inputString(v19.builtAbout)[]{
                }
              }
            },
            groupitem()[]{
              label("Additions")[]{
                inputString(v19.additions)[]{
                }
              }
            },
            groupitem()[]{
              label("Heritage Issues")[]{
                inputString(v19.heritageIssues)[]{
                }
              }
            },
            groupitem()[]{
              label("Env. Issues")[]{
                inputString(v19.envIssues)[]{
                }
              }
            },
            groupitem()[]{
              label("Ess. Repairs")[]{
                inputString(v19.essRepairs)[]{
                }
              }
            }
          },
          group("Property Summary 4")[]{
            groupitem()[]{
              label("Actual Rent (pw)")[]{
                inputInt(v19.actualRent)[]{
                }
              }
            },
            groupitem()[]{
              label("Marketability")[]{
                block("inputSimpleRefAssociation")[]{
                  select ( marketabilityValue09 : MarketabilityValue , Select , v19.marketability )
                }
              }
            },
            groupitem()[]{
              label("View")[]{
                inputText(v19.view)[]{
                }
              }
            }
          }
        }
      }
    }
  }

section  pages .

  define page valuaton (v20 : Valuation) {
    init
    {
      if ( genpagepredicatecombined28(v20) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(v20.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Valuation number: ")[]{
                outputInt(v20.valuationNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Invoice number: ")[]{
                outputInt(v20.invoiceNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Zaluation request: ")[]{
                dummy()[]{
                  if ( v20.zaluationRequest != null ) {
                    navigate(valuationRequest(v20.zaluationRequest))[]{
                      text(v20.zaluationRequest.name)[]{
                      }
                    }
                  }
                  else
                  {
                  },
                  if ( v20.zaluationRequest == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Lot: ")[]{
                outputInt(v20.lot)[]{
                }
              }
            },
            groupitem()[]{
              label("Plan: ")[]{
                dummy()[]{
                  if ( v20.plan != null ) {
                    if ( genpagepredicatecombined1(v20.plan) ) {
                      navigate(planValue(v20.plan))[]{
                        text(v20.plan.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.plan == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Plan number: ")[]{
                outputInt(v20.planNumber)[]{
                }
              }
            },
            groupitem()[]{
              label("Proprietor: ")[]{
                text(v20.proprietor)[]{
                }
              }
            },
            groupitem()[]{
              label("Zoning: ")[]{
                text(v20.zoning)[]{
                }
              }
            },
            groupitem()[]{
              label("Council: ")[]{
                text(v20.council)[]{
                }
              }
            },
            groupitem()[]{
              label("Instrument: ")[]{
                dummy()[]{
                  if ( v20.instrument != null ) {
                    if ( genpagepredicatecombined2(v20.instrument) ) {
                      navigate(instrumentValue(v20.instrument))[]{
                        text(v20.instrument.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.instrument == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Site dims: ")[]{
                dummy()[]{
                  if ( v20.siteDims != null ) {
                    if ( genpagepredicatecombined3(v20.siteDims) ) {
                      navigate(siteDimsValue(v20.siteDims))[]{
                        text(v20.siteDims.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.siteDims == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Site area: ")[]{
                outputInt(v20.siteArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Car accommodation: ")[]{
                dummy()[]{
                  if ( v20.carAccommodation != null ) {
                    if ( genpagepredicatecombined4(v20.carAccommodation) ) {
                      navigate(carAccommodationValue(v20.carAccommodation))[]{
                        text(v20.carAccommodation.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.carAccommodation == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Car area: ")[]{
                outputInt(v20.carArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Living area: ")[]{
                outputInt(v20.livingArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Outdoor area: ")[]{
                outputInt(v20.outdoorArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Other area: ")[]{
                outputInt(v20.otherArea)[]{
                }
              }
            },
            groupitem()[]{
              label("Current use: ")[]{
                text(v20.currentUse)[]{
                }
              }
            },
            groupitem()[]{
              label("Main building: ")[]{
                text(v20.mainBuilding)[]{
                }
              }
            },
            groupitem()[]{
              label("Built about: ")[]{
                text(v20.builtAbout)[]{
                }
              }
            },
            groupitem()[]{
              label("Additions: ")[]{
                text(v20.additions)[]{
                }
              }
            },
            groupitem()[]{
              label("Heritage issues: ")[]{
                text(v20.heritageIssues)[]{
                }
              }
            },
            groupitem()[]{
              label("Env issues: ")[]{
                text(v20.envIssues)[]{
                }
              }
            },
            groupitem()[]{
              label("Ess repairs: ")[]{
                text(v20.essRepairs)[]{
                }
              }
            },
            groupitem()[]{
              label("Actual rent: ")[]{
                outputInt(v20.actualRent)[]{
                }
              }
            },
            groupitem()[]{
              label("Marketability: ")[]{
                dummy()[]{
                  if ( v20.marketability != null ) {
                    if ( genpagepredicatecombined5(v20.marketability) ) {
                      navigate(marketabilityValue(v20.marketability))[]{
                        text(v20.marketability.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.marketability == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("View: ")[]{
                outputText(v20.view)[]{
                }
              }
            },
            groupitem()[]{
              label("Building style: ")[]{
                text(v20.buildingStyle)[]{
                }
              }
            },
            groupitem()[]{
              label("Street appeal: ")[]{
                dummy()[]{
                  if ( v20.streetAppeal != null ) {
                    if ( genpagepredicatecombined6(v20.streetAppeal) ) {
                      navigate(streetAppealValue(v20.streetAppeal))[]{
                        text(v20.streetAppeal.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.streetAppeal == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Wall and roof: ")[]{
                dummy()[]{
                  if ( v20.wallAndRoof != null ) {
                    if ( genpagepredicatecombined7(v20.wallAndRoof) ) {
                      navigate(wallAndRoofValue(v20.wallAndRoof))[]{
                        text(v20.wallAndRoof.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.wallAndRoof == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Window frames: ")[]{
                dummy()[]{
                  if ( v20.windowFrames != null ) {
                    if ( genpagepredicatecombined8(v20.windowFrames) ) {
                      navigate(windowFramesValue(v20.windowFrames))[]{
                        text(v20.windowFrames.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.windowFrames == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Interior linings: ")[]{
                dummy()[]{
                  if ( v20.interiorLinings != null ) {
                    if ( genpagepredicatecombined9(v20.interiorLinings) ) {
                      navigate(interiorLiningsValue(v20.interiorLinings))[]{
                        text(v20.interiorLinings.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.interiorLinings == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Internal condition: ")[]{
                dummy()[]{
                  if ( v20.internalCondition != null ) {
                    if ( genpagepredicatecombined10(v20.internalCondition) ) {
                      navigate(intExtConditionValue(v20.internalCondition))[]{
                        text(v20.internalCondition.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.internalCondition == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("External condition: ")[]{
                dummy()[]{
                  if ( v20.externalCondition != null ) {
                    if ( genpagepredicatecombined10(v20.externalCondition) ) {
                      navigate(intExtConditionValue(v20.externalCondition))[]{
                        text(v20.externalCondition.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.externalCondition == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Flooring: ")[]{
                dummy()[]{
                  if ( v20.flooring != null ) {
                    if ( genpagepredicatecombined11(v20.flooring) ) {
                      navigate(flooringValue(v20.flooring))[]{
                        text(v20.flooring.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.flooring == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Interior layout value: ")[]{
                dummy()[]{
                  if ( v20.interiorLayoutValue != null ) {
                    if ( genpagepredicatecombined12(v20.interiorLayoutValue) ) {
                      navigate(interiorLayoutValue(v20.interiorLayoutValue))[]{
                        text(v20.interiorLayoutValue.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.interiorLayoutValue == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Accommodation: ")[]{
                outputText(v20.accommodation)[]{
                }
              }
            },
            groupitem()[]{
              label("Pc items: ")[]{
                outputText(v20.pcItems)[]{
                }
              }
            },
            groupitem()[]{
              label("Fixtures and features: ")[]{
                outputText(v20.fixturesAndFeatures)[]{
                }
              }
            },
            groupitem()[]{
              label("Bedrooms: ")[]{
                outputInt(v20.bedrooms)[]{
                }
              }
            },
            groupitem()[]{
              label("Bathrooms: ")[]{
                outputInt(v20.bathrooms)[]{
                }
              }
            },
            groupitem()[]{
              label("Ensuites: ")[]{
                outputInt(v20.ensuites)[]{
                }
              }
            },
            groupitem()[]{
              label("Location risk: ")[]{
                dummy()[]{
                  if ( v20.locationRisk != null ) {
                    if ( genpagepredicatecombined13(v20.locationRisk) ) {
                      navigate(analysisValue(v20.locationRisk))[]{
                        text(v20.locationRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.locationRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Land risk: ")[]{
                dummy()[]{
                  if ( v20.landRisk != null ) {
                    if ( genpagepredicatecombined13(v20.landRisk) ) {
                      navigate(analysisValue(v20.landRisk))[]{
                        text(v20.landRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.landRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Environmental issues risk: ")[]{
                dummy()[]{
                  if ( v20.environmentalIssuesRisk != null ) {
                    if ( genpagepredicatecombined13(v20.environmentalIssuesRisk) ) {
                      navigate(analysisValue(v20.environmentalIssuesRisk))[]{
                        text(v20.environmentalIssuesRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.environmentalIssuesRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Improvements risk: ")[]{
                dummy()[]{
                  if ( v20.improvementsRisk != null ) {
                    if ( genpagepredicatecombined13(v20.improvementsRisk) ) {
                      navigate(analysisValue(v20.improvementsRisk))[]{
                        text(v20.improvementsRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.improvementsRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Reduced value risk: ")[]{
                dummy()[]{
                  if ( v20.reducedValueRisk != null ) {
                    if ( genpagepredicatecombined13(v20.reducedValueRisk) ) {
                      navigate(analysisValue(v20.reducedValueRisk))[]{
                        text(v20.reducedValueRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.reducedValueRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Market volatility risk: ")[]{
                dummy()[]{
                  if ( v20.marketVolatilityRisk != null ) {
                    if ( genpagepredicatecombined13(v20.marketVolatilityRisk) ) {
                      navigate(analysisValue(v20.marketVolatilityRisk))[]{
                        text(v20.marketVolatilityRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.marketVolatilityRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Local economy impact risk: ")[]{
                dummy()[]{
                  if ( v20.localEconomyImpactRisk != null ) {
                    if ( genpagepredicatecombined13(v20.localEconomyImpactRisk) ) {
                      navigate(analysisValue(v20.localEconomyImpactRisk))[]{
                        text(v20.localEconomyImpactRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.localEconomyImpactRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Market segment condition risk: ")[]{
                dummy()[]{
                  if ( v20.marketSegmentConditionRisk != null ) {
                    if ( genpagepredicatecombined13(v20.marketSegmentConditionRisk) ) {
                      navigate(analysisValue(v20.marketSegmentConditionRisk))[]{
                        text(v20.marketSegmentConditionRisk.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.marketSegmentConditionRisk == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Property identification: ")[]{
                dummy()[]{
                  if ( v20.propertyIdentification != null ) {
                    if ( genpagepredicatecombined14(v20.propertyIdentification) ) {
                      navigate(propertyIdentificationValue(v20.propertyIdentification))[]{
                        text(v20.propertyIdentification.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.propertyIdentification == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Has title been searched: ")[]{
                outputBool(v20.hasTitleBeenSearched)[]{
                }
              }
            },
            groupitem()[]{
              label("Zoning effect: ")[]{
                outputText(v20.zoningEffect)[]{
                }
              }
            },
            groupitem()[]{
              label("Location: ")[]{
                outputText(v20.location)[]{
                }
              }
            },
            groupitem()[]{
              label("Site description and access: ")[]{
                outputText(v20.siteDescriptionAndAccess)[]{
                }
              }
            },
            groupitem()[]{
              label("Services: ")[]{
                outputText(v20.services)[]{
                }
              }
            },
            groupitem()[]{
              label("Services connected to property: ")[]{
                outputBool(v20.servicesConnectedToProperty)[]{
                }
              }
            },
            groupitem()[]{
              label("Neighbourhood: ")[]{
                outputText(v20.neighbourhood)[]{
                }
              }
            },
            groupitem()[]{
              label("Ancillary improvements: ")[]{
                outputText(v20.ancillaryImprovements)[]{
                }
              }
            },
            groupitem()[]{
              label("Sales evidence: ")[]{
                list()[]{
                  for ( salesEvidence19 : SalesEvidence in v20.salesEvidenceList where true order by null asc limit 1000 offset 0 ) {
                    listitem()[]{
                      dummy()[]{
                        if ( salesEvidence19 != null ) {
                          if ( genpagepredicatecombined19(salesEvidence19) ) {
                            navigate(salesEvidence(salesEvidence19))[]{
                              text(salesEvidence19.name)[]{
                              }
                            }
                          }
                          else
                          {
                          }
                        }
                        else
                        {
                        },
                        if ( salesEvidence19 == null ) {
                          text("null")[]{
                          }
                        }
                        else
                        {
                        }
                      }
                    }
                  }
                }
              }
            },
            groupitem()[]{
              label("Level of activity: ")[]{
                dummy()[]{
                  if ( v20.levelOfActivity != null ) {
                    if ( genpagepredicatecombined15(v20.levelOfActivity) ) {
                      navigate(marketValue(v20.levelOfActivity))[]{
                        text(v20.levelOfActivity.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.levelOfActivity == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Recent direction: ")[]{
                dummy()[]{
                  if ( v20.recentDirection != null ) {
                    if ( genpagepredicatecombined15(v20.recentDirection) ) {
                      navigate(marketValue(v20.recentDirection))[]{
                        text(v20.recentDirection.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( v20.recentDirection == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            },
            groupitem()[]{
              label("Multi tier: ")[]{
                outputBool(v20.multiTier)[]{
                }
              }
            },
            groupitem()[]{
              label("Latest sale date: ")[]{
                outputDate(v20.latestSaleDate)[]{
                }
              }
            },
            groupitem()[]{
              label("Latest sale price: ")[]{
                outputInt(v20.latestSalePrice)[]{
                }
              }
            },
            groupitem()[]{
              label("Latest sale comment: ")[]{
                outputText(v20.latestSaleComment)[]{
                }
              }
            }
          }
        }
      }
    }
  }

  define page user (u1 : User) {
    init
    {
      if ( genpagepredicatecombined29(u1) )
      {
      }
      else
      {
        goto accessDenied();
      }
    }
    dummy()[]{
      main()[]{
      },
      define local body () {
        header()[]{
          text(u1.name)[]{
          }
        }
        group("Details")[]{
          dummy()[]{
            groupitem()[]{
              label("Username: ")[]{
                text(u1.username)[]{
                }
              }
            },
            groupitem()[]{
              label("Name: ")[]{
                text(u1.name)[]{
                }
              }
            },
            groupitem()[]{
              label("Password: ")[]{
                outputSecret(u1.password)[]{
                }
              }
            },
            groupitem()[]{
              label("Manager: ")[]{
                dummy()[]{
                  if ( u1.manager != null ) {
                    if ( genpagepredicatecombined29(u1.manager) ) {
                      navigate(user(u1.manager))[]{
                        text(u1.manager.name)[]{
                        }
                      }
                    }
                    else
                    {
                    }
                  }
                  else
                  {
                  },
                  if ( u1.manager == null ) {
                    text("null")[]{
                    }
                  }
                  else
                  {
                  }
                }
              }
            }
          }
        }
      }
    }
  }