head	1.4;
access;
symbols;
locks
	apache:1.4; strict;
comment	@# @;


1.4
date	2006.10.17.15.06.58;	author EelcoVisser;	state Exp;
branches;
next	1.3;

1.3
date	2006.05.01.20.04.38;	author EelcoVisser;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.02.12.01.33;	author EelcoVisser;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.31.08.31.41;	author EelcoVisser;	state Exp;
branches;
next	;


desc
@none
@


1.4
log
@none
@
text
@%META:TOPICINFO{author="EelcoVisser" date="1161097618" format="1.0" version="1.4"}%
%META:TOPICPARENT{name="WebHome"}%
M. Bravenboer, R. Vermaas, J. Vinju, and E. Visser. *Generalized Type-Based Disambiguation of Meta Programs with Concrete Object Syntax.* In R. Glück and M. Lowry, editors, Proceedings of the Fourth International Conference on Generative Programming and Component Engineering (GPCE 2005), Lecture Notes in Computer Science, Tallin, Estonia, September 2005. Springer. 

--------++++ Abstract

		  In meta-programming with concrete object syntax, object-level
		  programs are composed from fragments written in concrete
		  syntax. The use of small program fragments in such quotations
		  and the use of meta-level expressions within these fragments
		  (anti-quotation) often lead to ambiguities. This problem is
		  usually solved through explicit disambiguation, resulting in
		  considerable syntactic overhead.  A few systems manage to
		  reduce this overhead by using type information during
		  parsing. Since this is hard to achieve with traditional
		  parsing technology, these systems provide specific
		  combinations of meta- and object-languages, and their
		  implementations are difficult to reuse.

		  In this paper, we generalize these approaches and present a
		  _language independent_ method for introducing concrete
		  object syntax without explicit disambiguation.  The method
		  uses scannerless generalized-LR parsing to parse meta-programs
		  with embedded object-level fragments, which produces a forest
		  of all possible parses. This forest is reduced to a tree by a
		  disambiguating typechecker for the meta-language.  To validate
		  our method we have developed embeddings of several object
		  languages in Java, including <nop>AspectJ and Java itself.

--------++++ <nop>BibTeX
<pre>
%INCLUDE{http://www.cs.uu.nl/~visser/visser/BVVV05.bib}%
</pre>

--------++++ Authors

Bravenboer, Vinju and Visser in Vancouver where the project was conceived

<a href="http://www.flickr.com/photos/38456545@@N00/138508001/" title="Photo Sharing"><img src="http://static.flickr.com/44/138508001_e98c592017_m.jpg" width="240" height="180" alt="Bravenboer, Vinju & Visser" /></a>

@


1.3
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="EelcoVisser" date="1146513878" format="1.0" version="1.3"}%
a40 4
<!--
	* Set SKIN = notitle
-->

@


1.2
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="EelcoVisser" date="1125662493" format="1.0" version="1.2"}%
d35 5
@


1.1
log
@none
@
text
@d1 1
a1 1
%META:TOPICINFO{author="EelcoVisser" date="1117528301" format="1.0" version="1.1"}%
d35 5
@
